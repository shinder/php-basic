From: <Saved by Blink>
Snapshot-Content-Location: https://www.php.net/manual/en/function.array
Subject: PHP: array - Manual
Date: Sun, 4 Aug 2024 09:52:30 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt----"


------MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt----
Content-Type: text/html
Content-ID: <frame-88952B0D013C89A45A85098A3C3E0E6C@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.php.net/manual/en/function.array

<!DOCTYPE html><html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en"><he=
ad><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8"=
>

 =20
  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1.0">

  <title>PHP: array - Manual </title>

 <link rel=3D"icon" type=3D"image/svg+xml" sizes=3D"any" href=3D"https://ww=
w.php.net/favicon.svg?v=3D2">
 <link rel=3D"icon" type=3D"image/png" sizes=3D"196x196" href=3D"https://ww=
w.php.net/favicon-196x196.png?v=3D2">
 <link rel=3D"icon" type=3D"image/png" sizes=3D"32x32" href=3D"https://www.=
php.net/favicon-32x32.png?v=3D2">
 <link rel=3D"icon" type=3D"image/png" sizes=3D"16x16" href=3D"https://www.=
php.net/favicon-16x16.png?v=3D2">
 <link rel=3D"shortcut icon" href=3D"https://www.php.net/favicon.ico?v=3D2"=
>

 <link rel=3D"search" type=3D"application/opensearchdescription+xml" href=
=3D"http://php.net/phpnetimprovedsearch.src" title=3D"Add PHP.net search">
 <link rel=3D"alternate" type=3D"application/atom+xml" href=3D"https://www.=
php.net/releases/feed.php" title=3D"PHP Release feed">
 <link rel=3D"alternate" type=3D"application/atom+xml" href=3D"https://www.=
php.net/feed.atom" title=3D"PHP: Hypertext Preprocessor">

 <link rel=3D"canonical" href=3D"https://www.php.net/manual/en/function.arr=
ay.php">
 <link rel=3D"shorturl" href=3D"https://www.php.net/array">
 <link rel=3D"alternate" href=3D"https://www.php.net/array" hreflang=3D"x-d=
efault">

 <link rel=3D"contents" href=3D"https://www.php.net/manual/en/index.php">
 <link rel=3D"index" href=3D"https://www.php.net/manual/en/ref.array.php">
 <link rel=3D"prev" href=3D"https://www.php.net/manual/en/ref.array.php">
 <link rel=3D"next" href=3D"https://www.php.net/manual/en/function.array-ch=
ange-key-case.php">

 <link rel=3D"alternate" href=3D"https://www.php.net/manual/en/function.arr=
ay.php" hreflang=3D"en">
 <link rel=3D"alternate" href=3D"https://www.php.net/manual/de/function.arr=
ay.php" hreflang=3D"de">
 <link rel=3D"alternate" href=3D"https://www.php.net/manual/es/function.arr=
ay.php" hreflang=3D"es">
 <link rel=3D"alternate" href=3D"https://www.php.net/manual/fr/function.arr=
ay.php" hreflang=3D"fr">
 <link rel=3D"alternate" href=3D"https://www.php.net/manual/it/function.arr=
ay.php" hreflang=3D"it">
 <link rel=3D"alternate" href=3D"https://www.php.net/manual/ja/function.arr=
ay.php" hreflang=3D"ja">
 <link rel=3D"alternate" href=3D"https://www.php.net/manual/pt_BR/function.=
array.php" hreflang=3D"pt_BR">
 <link rel=3D"alternate" href=3D"https://www.php.net/manual/ru/function.arr=
ay.php" hreflang=3D"ru">
 <link rel=3D"alternate" href=3D"https://www.php.net/manual/tr/function.arr=
ay.php" hreflang=3D"tr">
 <link rel=3D"alternate" href=3D"https://www.php.net/manual/uk/function.arr=
ay.php" hreflang=3D"uk">
 <link rel=3D"alternate" href=3D"https://www.php.net/manual/zh/function.arr=
ay.php" hreflang=3D"zh">

<link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.php.net/cach=
ed.php?t=3D1707321815&amp;f=3D/fonts/Fira/fira.css" media=3D"screen">
<link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.php.net/cach=
ed.php?t=3D1707321815&amp;f=3D/fonts/Font-Awesome/css/fontello.css" media=
=3D"screen">
<link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.php.net/cach=
ed.php?t=3D1720167002&amp;f=3D/styles/theme-base.css" media=3D"screen">
<link rel=3D"stylesheet" type=3D"text/css" href=3D"https://www.php.net/cach=
ed.php?t=3D1720213803&amp;f=3D/styles/theme-medium.css" media=3D"screen">

 <base href=3D"https://www.php.net/manual/en/function.array.php">

<meta name=3D"Description" content=3D"PHP is a popular general-purpose scri=
pting language that powers everything from your blog to the most popular we=
bsites in the world.">

<meta name=3D"twitter:card" content=3D"summary_large_image">
<meta name=3D"twitter:site" content=3D"@official_php">
<meta name=3D"twitter:title" content=3D"PHP: Hypertext Preprocessor">
<meta name=3D"twitter:description" content=3D"PHP is a popular general-purp=
ose scripting language that powers everything from your blog to the most po=
pular websites in the world.">
<meta name=3D"twitter:creator" content=3D"@official_php">
<meta name=3D"twitter:image:src" content=3D"https://www.php.net/images/meta=
-image.png">

<meta itemprop=3D"name" content=3D"PHP: Hypertext Preprocessor">
<meta itemprop=3D"description" content=3D"PHP is a popular general-purpose =
scripting language that powers everything from your blog to the most popula=
r websites in the world.">
<meta itemprop=3D"image" content=3D"https://www.php.net/images/meta-image.p=
ng">

<meta property=3D"og:image" content=3D"https://www.php.net/images/meta-imag=
e.png">
<meta property=3D"og:description" content=3D"PHP is a popular general-purpo=
se scripting language that powers everything from your blog to the most pop=
ular websites in the world.">

<link href=3D"https://fosstodon.org/@php" rel=3D"me">
</head>
<body class=3D"docs ">

<nav id=3D"head-nav" class=3D"navbar navbar-fixed-top">
  <div class=3D"navbar-inner clearfix">
    <a href=3D"https://www.php.net/" class=3D"brand"><img src=3D"https://ww=
w.php.net/images/logos/php-logo.svg" width=3D"48" height=3D"24" alt=3D"php"=
></a>
    <div id=3D"mainmenu-toggle-overlay"></div>
    <input type=3D"checkbox" id=3D"mainmenu-toggle">
    <ul class=3D"nav">
      <li class=3D""><a href=3D"https://www.php.net/downloads">Downloads</a=
></li>
      <li class=3D"active"><a href=3D"https://www.php.net/docs.php">Documen=
tation</a></li>
      <li class=3D""><a href=3D"https://www.php.net/get-involved">Get Invol=
ved</a></li>
      <li class=3D""><a href=3D"https://www.php.net/support">Help</a></li>
      <li class=3D"">
        <a href=3D"https://www.php.net/releases/8.3/index.php">
          <img src=3D"https://www.php.net/images/php8/logo_php8_3.svg" alt=
=3D"php8.3" height=3D"22" width=3D"60">
        </a>
      </li>
    </ul>
    <form class=3D"navbar-search" id=3D"topsearch" action=3D"https://www.ph=
p.net/search.php">
     =20
      <span class=3D"twitter-typeahead" style=3D"position: relative; displa=
y: inline-block;"><input class=3D"tt-hint search-query" type=3D"text" autoc=
omplete=3D"off" spellcheck=3D"off" disabled=3D"" style=3D"position: absolut=
e; top: 0px; left: 0px; border-color: transparent; box-shadow: none; backgr=
ound: none 0% 0% / auto repeat scroll padding-box border-box rgb(255, 255, =
255);"><input type=3D"search" name=3D"pattern" class=3D"search-query tt-que=
ry" placeholder=3D"Search" accesskey=3D"s" autocomplete=3D"off" spellcheck=
=3D"false" dir=3D"auto" style=3D"position: relative; vertical-align: top; b=
ackground-color: transparent;"><input type=3D"submit" style=3D"visibility: =
hidden; position: fixed"><span style=3D"position: absolute; left: -9999px; =
visibility: hidden; white-space: nowrap; font-family: &quot;Fira Sans&quot;=
, &quot;Source Sans Pro&quot;, ui-sans-serif, system-ui, -apple-system, &qu=
ot;system-ui&quot;, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot=
;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;,=
 &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color =
Emoji&quot;; font-size: 16px; font-style: normal; font-variant: normal; fon=
t-weight: 400; word-spacing: 0px; letter-spacing: 0px; text-indent: 0px; te=
xt-rendering: auto; text-transform: none;"></span><span class=3D"tt-dropdow=
n-menu" style=3D"position: absolute; top: 100%; left: 0px; z-index: 100; di=
splay: none;"></span></span>
    </form>
  </div>
  <div id=3D"flash-message"></div>
</nav>
<nav id=3D"trick"><div><dl>
<dt><a href=3D"https://www.php.net/manual/en/getting-started.php">Getting S=
tarted</a></dt>
	<dd><a href=3D"https://www.php.net/manual/en/introduction.php">Introductio=
n</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/tutorial.php">A simple tutori=
al</a></dd>
<dt><a href=3D"https://www.php.net/manual/en/langref.php">Language Referenc=
e</a></dt>
	<dd><a href=3D"https://www.php.net/manual/en/language.basic-syntax.php">Ba=
sic syntax</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.types.php">Types</a>=
</dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.variables.php">Varia=
bles</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.constants.php">Const=
ants</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.expressions.php">Exp=
ressions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.operators.php">Opera=
tors</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.control-structures.p=
hp">Control Structures</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.functions.php">Funct=
ions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.oop5.php">Classes an=
d Objects</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.namespaces.php">Name=
spaces</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.enumerations.php">En=
umerations</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.errors.php">Errors</=
a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.exceptions.php">Exce=
ptions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.fibers.php">Fibers</=
a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.generators.php">Gene=
rators</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.attributes.php">Attr=
ibutes</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/language.references.php">Refe=
rences Explained</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/reserved.variables.php">Prede=
fined Variables</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/reserved.exceptions.php">Pred=
efined Exceptions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/reserved.interfaces.php">Pred=
efined Interfaces and Classes</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/reserved.attributes.php">Pred=
efined Attributes</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/context.php">Context options =
and parameters</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/wrappers.php">Supported Proto=
cols and Wrappers</a></dd>
</dl>
<dl>
<dt><a href=3D"https://www.php.net/manual/en/security.php">Security</a></dt=
>
	<dd><a href=3D"https://www.php.net/manual/en/security.intro.php">Introduct=
ion</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/security.general.php">General=
 considerations</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/security.cgi-bin.php">Install=
ed as CGI binary</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/security.apache.php">Installe=
d as an Apache module</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/security.sessions.php">Sessio=
n Security</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/security.filesystem.php">File=
system Security</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/security.database.php">Databa=
se Security</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/security.errors.php">Error Re=
porting</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/security.variables.php">User =
Submitted Data</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/security.hiding.php">Hiding P=
HP</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/security.current.php">Keeping=
 Current</a></dd>
<dt><a href=3D"https://www.php.net/manual/en/features.php">Features</a></dt=
>
	<dd><a href=3D"https://www.php.net/manual/en/features.http-auth.php">HTTP =
authentication with PHP</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/features.cookies.php">Cookies=
</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/features.sessions.php">Sessio=
ns</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/features.file-upload.php">Han=
dling file uploads</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/features.remote-files.php">Us=
ing remote files</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/features.connection-handling.=
php">Connection handling</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/features.persistent-connectio=
ns.php">Persistent Database Connections</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/features.commandline.php">Com=
mand line usage</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/features.gc.php">Garbage Coll=
ection</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/features.dtrace.php">DTrace D=
ynamic Tracing</a></dd>
</dl>
<dl>
<dt><a href=3D"https://www.php.net/manual/en/funcref.php">Function Referenc=
e</a></dt>
	<dd><a href=3D"https://www.php.net/manual/en/refs.basic.php.php">Affecting=
 PHP's Behaviour</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.utilspec.audio.php">Audi=
o Formats Manipulation</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.remote.auth.php">Authent=
ication Services</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.utilspec.cmdline.php">Co=
mmand Line Specific Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.compression.php">Compres=
sion and Archive Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.crypto.php">Cryptography=
 Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.database.php">Database E=
xtensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.calendar.php">Date and T=
ime Related Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.fileprocess.file.php">Fi=
le System Related Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.international.php">Human=
 Language and Character Encoding Support</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.utilspec.image.php">Imag=
e Processing and Generation</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.remote.mail.php">Mail Re=
lated Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.math.php">Mathematical E=
xtensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.utilspec.nontext.php">No=
n-Text MIME Output</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.fileprocess.process.php"=
>Process Control Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.basic.other.php">Other B=
asic Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.remote.other.php">Other =
Services</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.search.php">Search Engin=
e Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.utilspec.server.php">Ser=
ver Specific Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.basic.session.php">Sessi=
on Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.basic.text.php">Text Pro=
cessing</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.basic.vartype.php">Varia=
ble and Type Related Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.webservice.php">Web Serv=
ices</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.utilspec.windows.php">Wi=
ndows Only Extensions</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.xml.php">XML Manipulatio=
n</a></dd>
	<dd><a href=3D"https://www.php.net/manual/en/refs.ui.php">GUI Extensions</=
a></dd>
</dl>
<dl>
<dt>Keyboard Shortcuts</dt><dt>?</dt>
<dd>This help</dd>
<dt>j</dt>
<dd>Next menu item</dd>
<dt>k</dt>
<dd>Previous menu item</dd>
<dt>g p</dt>
<dd>Previous man page</dd>
<dt>g n</dt>
<dd>Next man page</dd>
<dt>G</dt>
<dd>Scroll to bottom</dd>
<dt>g g</dt>
<dd>Scroll to top</dd>
<dt>g h</dt>
<dd>Goto homepage</dd>
<dt>g s</dt>
<dd>Goto search<br>(current page)</dd>
<dt>/</dt>
<dd>Focus search box</dd>
</dl></div></nav>
<div id=3D"goto">
    <div class=3D"search">
         <div class=3D"text"></div>
         <div class=3D"results"><ul></ul></div>
   </div>
</div>

  <div id=3D"breadcrumbs" class=3D"clearfix">
    <div id=3D"breadcrumbs-inner">
          <div class=3D"next">
        <a href=3D"https://www.php.net/manual/en/function.array-change-key-=
case.php">
          array_change_key_case =C2=BB
        </a>
      </div>
              <div class=3D"prev">
        <a href=3D"https://www.php.net/manual/en/ref.array.php">
          =C2=AB Array Functions        </a>
      </div>
          <ul>
            <li><a href=3D"https://www.php.net/manual/en/index.php">PHP Man=
ual</a></li>      <li><a href=3D"https://www.php.net/manual/en/funcref.php"=
>Function Reference</a></li>      <li><a href=3D"https://www.php.net/manual=
/en/refs.basic.vartype.php">Variable and Type Related Extensions</a></li>  =
    <li><a href=3D"https://www.php.net/manual/en/book.array.php">Arrays</a>=
</li>      <li><a href=3D"https://www.php.net/manual/en/ref.array.php">Arra=
y Functions</a></li>      </ul>
    </div>
  </div>




<div id=3D"layout" class=3D"clearfix">
  <section id=3D"layout-content">
  <div class=3D"page-tools">
    <div class=3D"change-language">
      <form action=3D"https://www.php.net/manual/change.php" method=3D"get"=
 id=3D"changelang" name=3D"changelang">
        <fieldset>
          <label for=3D"changelang-langs">Change language:</label>
          <select name=3D"page" id=3D"changelang-langs">
            <option value=3D"en/function.array.php" selected=3D"selected">E=
nglish</option>
            <option value=3D"de/function.array.php">German</option>
            <option value=3D"es/function.array.php">Spanish</option>
            <option value=3D"fr/function.array.php">French</option>
            <option value=3D"it/function.array.php">Italian</option>
            <option value=3D"ja/function.array.php">Japanese</option>
            <option value=3D"pt_BR/function.array.php">Brazilian Portuguese=
</option>
            <option value=3D"ru/function.array.php">Russian</option>
            <option value=3D"tr/function.array.php">Turkish</option>
            <option value=3D"uk/function.array.php">Ukrainian</option>
            <option value=3D"zh/function.array.php">Chinese (Simplified)</o=
ption>
            <option value=3D"help-translate.php">Other</option>
          </select>
        </fieldset>
      </form>
    </div>
  </div><div id=3D"function.array" class=3D"refentry">
 <div class=3D"refnamediv">
  <h1 class=3D"refname">array</h1>
  <p class=3D"verinfo">(PHP 4, PHP 5, PHP 7, PHP 8)</p><p class=3D"refpurpo=
se"><span class=3D"refname">array</span> =E2=80=94 <span class=3D"dc-title"=
>Create an array</span></p>

 </div>
 <div class=3D"refsect1 description" id=3D"refsect1-function.array-descript=
ion">
  <h3 class=3D"title">Description<a class=3D"genanchor" href=3D"https://www=
.php.net/manual/en/function.array.php#refsect1-function.array-description">=
 =C2=B6</a></h3>
  <div class=3D"methodsynopsis dc-description">
   <span class=3D"methodname"><strong>array</strong></span>(<span class=3D"=
methodparam"><span class=3D"type"><a href=3D"https://www.php.net/manual/en/=
language.types.mixed.php" class=3D"type mixed">mixed</a></span> <code class=
=3D"parameter">...$values</code></span>): <span class=3D"type"><a href=3D"h=
ttps://www.php.net/manual/en/language.types.array.php" class=3D"type array"=
>array</a></span></div>

  <p class=3D"para rdfs-comment">
   Creates an array. Read the section on the
   <a href=3D"https://www.php.net/manual/en/language.types.array.php" class=
=3D"link">array type</a> for more information
   on what an array is.
  </p>
 </div>

 <div class=3D"refsect1 parameters" id=3D"refsect1-function.array-parameter=
s">
  <h3 class=3D"title">Parameters<a class=3D"genanchor" href=3D"https://www.=
php.net/manual/en/function.array.php#refsect1-function.array-parameters"> =
=C2=B6</a></h3>
  <dl>
   =20
     <dt><code class=3D"parameter" style=3D"cursor: pointer;">values</code>=
</dt>
     <dd>
      <p class=3D"para">
       Syntax "index =3D&gt; values", separated by commas, define index
       and values. index may be of type string or integer. When index is
       omitted, an integer index is automatically generated, starting
       at 0. If index is an integer, next generated index will
       be the biggest integer index + 1. Note that when two identical
       indices are defined, the last overwrites the first.
      </p>
      <p class=3D"para">
       Having a trailing comma after the last defined array entry, while
       unusual, is a valid syntax.
      </p>
     </dd>
   =20
   </dl>
 =20
 </div>

 <div class=3D"refsect1 returnvalues" id=3D"refsect1-function.array-returnv=
alues">
  <h3 class=3D"title">Return Values<a class=3D"genanchor" href=3D"https://w=
ww.php.net/manual/en/function.array.php#refsect1-function.array-returnvalue=
s"> =C2=B6</a></h3>
  <p class=3D"para">
   Returns an array of the parameters.  The parameters can be given
   an index with the <code class=3D"literal">=3D&gt;</code> operator.  Read=
 the section
   on the <a href=3D"https://www.php.net/manual/en/language.types.array.php=
" class=3D"link">array type</a> for more
   information on what an array is.
  </p>
 </div>

 <div class=3D"refsect1 examples" id=3D"refsect1-function.array-examples">
  <h3 class=3D"title">Examples<a class=3D"genanchor" href=3D"https://www.ph=
p.net/manual/en/function.array.php#refsect1-function.array-examples"> =C2=
=B6</a></h3>
  <p class=3D"para">
   The following example demonstrates how to create a
   two-dimensional array, how to specify keys for associative
   arrays, and how to skip-and-continue numeric indices in normal
   arrays.
   </p><div class=3D"example" id=3D"example-5003">
    <p><strong>Example #1 <span class=3D"function"><strong>array()</strong>=
</span> example</strong></p>
    <div class=3D"example-contents">
<div class=3D"phpcode"><code><span style=3D"color: #000000"><span style=3D"=
color: #0000BB">&lt;?php<br>$fruits </span><span style=3D"color: #007700">=
=3D array (<br>    </span><span style=3D"color: #DD0000">"fruits"  </span><=
span style=3D"color: #007700">=3D&gt; array(</span><span style=3D"color: #D=
D0000">"a" </span><span style=3D"color: #007700">=3D&gt; </span><span style=
=3D"color: #DD0000">"orange"</span><span style=3D"color: #007700">, </span>=
<span style=3D"color: #DD0000">"b" </span><span style=3D"color: #007700">=
=3D&gt; </span><span style=3D"color: #DD0000">"banana"</span><span style=3D=
"color: #007700">, </span><span style=3D"color: #DD0000">"c" </span><span s=
tyle=3D"color: #007700">=3D&gt; </span><span style=3D"color: #DD0000">"appl=
e"</span><span style=3D"color: #007700">),<br>    </span><span style=3D"col=
or: #DD0000">"numbers" </span><span style=3D"color: #007700">=3D&gt; array(=
</span><span style=3D"color: #0000BB">1</span><span style=3D"color: #007700=
">, </span><span style=3D"color: #0000BB">2</span><span style=3D"color: #00=
7700">, </span><span style=3D"color: #0000BB">3</span><span style=3D"color:=
 #007700">, </span><span style=3D"color: #0000BB">4</span><span style=3D"co=
lor: #007700">, </span><span style=3D"color: #0000BB">5</span><span style=
=3D"color: #007700">, </span><span style=3D"color: #0000BB">6</span><span s=
tyle=3D"color: #007700">),<br>    </span><span style=3D"color: #DD0000">"ho=
les"   </span><span style=3D"color: #007700">=3D&gt; array(</span><span sty=
le=3D"color: #DD0000">"first"</span><span style=3D"color: #007700">, </span=
><span style=3D"color: #0000BB">5 </span><span style=3D"color: #007700">=3D=
&gt; </span><span style=3D"color: #DD0000">"second"</span><span style=3D"co=
lor: #007700">, </span><span style=3D"color: #DD0000">"third"</span><span s=
tyle=3D"color: #007700">)<br>);<br></span><span style=3D"color: #0000BB">?&=
gt;</span></span></code></div>
    </div>

   </div>
 =20
  <div class=3D"example" id=3D"example-5004">
    <p><strong>Example #2 Automatic index with <span class=3D"function"><st=
rong>array()</strong></span></strong></p>
    <div class=3D"example-contents">
<div class=3D"phpcode"><code><span style=3D"color: #000000"><span style=3D"=
color: #0000BB">&lt;?php<br>$array </span><span style=3D"color: #007700">=
=3D array(</span><span style=3D"color: #0000BB">1</span><span style=3D"colo=
r: #007700">, </span><span style=3D"color: #0000BB">1</span><span style=3D"=
color: #007700">, </span><span style=3D"color: #0000BB">1</span><span style=
=3D"color: #007700">, </span><span style=3D"color: #0000BB">1</span><span s=
tyle=3D"color: #007700">,  </span><span style=3D"color: #0000BB">1</span><s=
pan style=3D"color: #007700">, </span><span style=3D"color: #0000BB">8 </sp=
an><span style=3D"color: #007700">=3D&gt; </span><span style=3D"color: #000=
0BB">1</span><span style=3D"color: #007700">,  </span><span style=3D"color:=
 #0000BB">4 </span><span style=3D"color: #007700">=3D&gt; </span><span styl=
e=3D"color: #0000BB">1</span><span style=3D"color: #007700">, </span><span =
style=3D"color: #0000BB">19</span><span style=3D"color: #007700">, </span><=
span style=3D"color: #0000BB">3 </span><span style=3D"color: #007700">=3D&g=
t; </span><span style=3D"color: #0000BB">13</span><span style=3D"color: #00=
7700">);<br></span><span style=3D"color: #0000BB">print_r</span><span style=
=3D"color: #007700">(</span><span style=3D"color: #0000BB">$array</span><sp=
an style=3D"color: #007700">);<br></span><span style=3D"color: #0000BB">?&g=
t;</span></span></code></div>
    </div>

    <div class=3D"example-contents"><p>The above example will output:</p></=
div>
    <div class=3D"example-contents screen">
<div class=3D"examplescode"><pre class=3D"examplescode">Array
(
    [0] =3D&gt; 1
    [1] =3D&gt; 1
    [2] =3D&gt; 1
    [3] =3D&gt; 13
    [4] =3D&gt; 1
    [8] =3D&gt; 1
    [9] =3D&gt; 19
)</pre>
</div>
    </div>
   </div>
 =20
  <p class=3D"para">
   Note that index '3' is defined twice, and keep its final value of 13.
   Index 4 is defined after index 8, and next generated index (value 19)
   is 9, since biggest index was 8.
  </p>
  <p class=3D"para">
   This example creates a 1-based array.
   </p><div class=3D"example" id=3D"example-5005">
    <p><strong>Example #3 1-based index with <span class=3D"function"><stro=
ng>array()</strong></span></strong></p>
    <div class=3D"example-contents">
<div class=3D"phpcode"><code><span style=3D"color: #000000"><span style=3D"=
color: #0000BB">&lt;?php<br>$firstquarter </span><span style=3D"color: #007=
700">=3D array(</span><span style=3D"color: #0000BB">1 </span><span style=
=3D"color: #007700">=3D&gt; </span><span style=3D"color: #DD0000">'January'=
</span><span style=3D"color: #007700">, </span><span style=3D"color: #DD000=
0">'February'</span><span style=3D"color: #007700">, </span><span style=3D"=
color: #DD0000">'March'</span><span style=3D"color: #007700">);<br></span><=
span style=3D"color: #0000BB">print_r</span><span style=3D"color: #007700">=
(</span><span style=3D"color: #0000BB">$firstquarter</span><span style=3D"c=
olor: #007700">);<br></span><span style=3D"color: #0000BB">?&gt;</span></sp=
an></code></div>
    </div>

    <div class=3D"example-contents"><p>The above example will output:</p></=
div>
    <div class=3D"example-contents screen">
<div class=3D"examplescode"><pre class=3D"examplescode">Array
(
    [1] =3D&gt; January
    [2] =3D&gt; February
    [3] =3D&gt; March
)</pre>
</div>
    </div>
   </div>
 =20
  <p class=3D"para">
   As in Perl, you can access a value from the array inside double quotes.
   However, with PHP you'll need to enclose your array between curly braces=
.
   </p><div class=3D"example" id=3D"example-5006">
    <p><strong>Example #4 Accessing an array inside double quotes</strong><=
/p>
    <div class=3D"example-contents">
<div class=3D"phpcode"><code><span style=3D"color: #000000"><span style=3D"=
color: #0000BB">&lt;?php<br><br>$foo </span><span style=3D"color: #007700">=
=3D array(</span><span style=3D"color: #DD0000">'bar' </span><span style=3D=
"color: #007700">=3D&gt; </span><span style=3D"color: #DD0000">'baz'</span>=
<span style=3D"color: #007700">);<br>echo </span><span style=3D"color: #DD0=
000">"Hello </span><span style=3D"color: #007700">{</span><span style=3D"co=
lor: #0000BB">$foo</span><span style=3D"color: #007700">[</span><span style=
=3D"color: #DD0000">'bar'</span><span style=3D"color: #007700">]}</span><sp=
an style=3D"color: #DD0000">!"</span><span style=3D"color: #007700">; </spa=
n><span style=3D"color: #FF8000">// Hello baz!<br><br></span><span style=3D=
"color: #0000BB">?&gt;</span></span></code></div>
    </div>

   </div>
 =20
 </div>

 <div class=3D"refsect1 notes" id=3D"refsect1-function.array-notes">
  <h3 class=3D"title">Notes<a class=3D"genanchor" href=3D"https://www.php.n=
et/manual/en/function.array.php#refsect1-function.array-notes"> =C2=B6</a><=
/h3>
  <blockquote class=3D"note"><p><strong class=3D"note">Note</strong>:=20
    </p><p class=3D"para">
     <span class=3D"function"><strong>array()</strong></span> is a language=
 construct used to
     represent literal arrays, and not a regular function.
    </p>
   </blockquote>
 =20
 </div>

 <div class=3D"refsect1 seealso" id=3D"refsect1-function.array-seealso">
  <h3 class=3D"title">See Also<a class=3D"genanchor" href=3D"https://www.ph=
p.net/manual/en/function.array.php#refsect1-function.array-seealso"> =C2=B6=
</a></h3>
  <ul class=3D"simplelist">
    <li><span class=3D"function"><a href=3D"https://www.php.net/manual/en/f=
unction.array-pad.php" class=3D"function" rel=3D"rdfs-seeAlso">array_pad()<=
/a> - Pad array to the specified length with a value</span></li>
    <li><span class=3D"function"><a href=3D"https://www.php.net/manual/en/f=
unction.list.php" class=3D"function" rel=3D"rdfs-seeAlso">list()</a> - Assi=
gn variables as if they were an array</span></li>
    <li><span class=3D"function"><a href=3D"https://www.php.net/manual/en/f=
unction.count.php" class=3D"function" rel=3D"rdfs-seeAlso">count()</a> - Co=
unts all elements in an array or in a Countable object</span></li>
    <li><span class=3D"function"><a href=3D"https://www.php.net/manual/en/f=
unction.range.php" class=3D"function" rel=3D"rdfs-seeAlso">range()</a> - Cr=
eate an array containing a range of elements</span></li>
    <li><a href=3D"https://www.php.net/manual/en/control-structures.foreach=
.php" class=3D"link">foreach</a></li>
    <li>The <a href=3D"https://www.php.net/manual/en/language.types.array.p=
hp" class=3D"link">array</a> type</li>
   </ul>
 =20
 </div>

</div>    <div class=3D"contribute">
      <h3 class=3D"title">Improve This Page</h3>
      <div>
        =20
      </div>
      <div class=3D"edit-bug">
        <a href=3D"https://github.com/php/doc-base/blob/master/README.md" t=
itle=3D"This will take you to our contribution guidelines on GitHub." targe=
t=3D"_blank" rel=3D"noopener noreferrer">Learn How To Improve This Page</a>
        =E2=80=A2
        <a href=3D"https://github.com/php/doc-en/blob/master/reference/arra=
y/functions/array.xml">Submit a Pull Request</a>
        =E2=80=A2
        <a href=3D"https://github.com/php/doc-en/issues/new?body=3DFrom%20m=
anual%20page:%20https:%2F%2Fphp.net%2Ffunction.array%0A%0A---">Report a Bug=
</a>
      </div>
    </div><section id=3D"usernotes">
 <div class=3D"head">
  <span class=3D"action"><a href=3D"https://www.php.net/manual/add-note.php=
?sect=3Dfunction.array&amp;redirect=3Dhttps://www.php.net/manual/en/functio=
n.array.php">=EF=BC=8B<small>add a note</small></a></span>
  <h3 class=3D"title">User Contributed Notes <span class=3D"count">38 notes=
</span></h3>
 </div><div id=3D"allnotes">
  <div class=3D"note" id=3D"115181">  <div class=3D"votes">
    <div id=3D"Vu115181">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D115181&amp;pag=
e=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vot=
eu">up</a>
    </div>
    <div id=3D"Vd115181">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D115181&amp;pag=
e=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes=
-voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V115181" title=3D"64% like this...">
    116
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#115181" class=
=3D"name">
  <strong class=3D"user"><em>ole dot aanensen at gmail dot com</em></strong=
></a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.=
array.php#115181"> =C2=B6</a><div class=3D"date" title=3D"2014-06-10 08:13"=
><strong>10 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom115181">
<div class=3D"phpcode"><code><span class=3D"html">As of PHP 5.4.x you can n=
ow use 'short syntax arrays' which eliminates the need of this function.<br=
><br>Example #1 'short syntax array'<br><span class=3D"default">&lt;?php<br=
>    $a </span><span class=3D"keyword">=3D [</span><span class=3D"default">=
1</span><span class=3D"keyword">, </span><span class=3D"default">2</span><s=
pan class=3D"keyword">, </span><span class=3D"default">3</span><span class=
=3D"keyword">, </span><span class=3D"default">4</span><span class=3D"keywor=
d">];<br>    </span><span class=3D"default">print_r</span><span class=3D"ke=
yword">(</span><span class=3D"default">$a</span><span class=3D"keyword">);<=
br></span><span class=3D"default">?&gt;<br></span><br>The above example wil=
l output:<br>Array<br>(<br>    [0] =3D&gt; 1<br>    [1] =3D&gt; 2<br>    [2=
] =3D&gt; 3<br>    [3] =3D&gt; 4<br>)<br><br>Example #2 'short syntax assoc=
iative array'<br><span class=3D"default">&lt;?php<br>    $a </span><span cl=
ass=3D"keyword">=3D [</span><span class=3D"string">'one' </span><span class=
=3D"keyword">=3D&gt; </span><span class=3D"default">1</span><span class=3D"=
keyword">, </span><span class=3D"string">'two' </span><span class=3D"keywor=
d">=3D&gt; </span><span class=3D"default">2</span><span class=3D"keyword">,=
 </span><span class=3D"string">'three' </span><span class=3D"keyword">=3D&g=
t; </span><span class=3D"default">3</span><span class=3D"keyword">, </span>=
<span class=3D"string">'four' </span><span class=3D"keyword">=3D&gt; </span=
><span class=3D"default">4</span><span class=3D"keyword">];<br>    </span><=
span class=3D"default">print_r</span><span class=3D"keyword">(</span><span =
class=3D"default">$a</span><span class=3D"keyword">);<br></span><span class=
=3D"default">?&gt;<br></span><br>The above example will output:<br>Array<br=
>(<br>    [one] =3D&gt; 1<br>    [two] =3D&gt; 2<br>    [three] =3D&gt; 3<b=
r>    [four] =3D&gt; 4<br>)</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"90552">  <div class=3D"votes">
    <div id=3D"Vu90552">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D90552&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd90552">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D90552&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V90552" title=3D"52% like this...">
    2
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#90552" class=
=3D"name">
  <strong class=3D"user"><em>Marcel G</em></strong></a><a class=3D"genancho=
r" href=3D"https://www.php.net/manual/en/function.array.php#90552"> =C2=B6<=
/a><div class=3D"date" title=3D"2009-04-27 03:49"><strong>15 years ago</str=
ong></div>
  <div class=3D"text" id=3D"Hcom90552">
<div class=3D"phpcode"><code><span class=3D"html">I encountered the followi=
ng but didn't see it documented/reported anywhere so I'll just mentioned it=
 here.
<br>
<br>As written in the manual:
<br>"When index is omitted, an integer index is automatically generated, st=
arting at 0. If index is an integer, next generated index will be the bigge=
st integer index + 1".
<br>
<br>This generated index has always the largest integer used as a key so fa=
r. So adding $a[5] =3D 'foo'; after an $a[10] =3D 'bar'; will not force the=
 next generated index to be 6 but to be 11 as 10 was the highest index enco=
untered until here.
<br>
<br>Anyway, the following can happen:
<br><span class=3D"default">&lt;?php
<br>$max_int </span><span class=3D"keyword">=3D </span><span class=3D"defau=
lt">2147483647</span><span class=3D"keyword">; </span><span class=3D"commen=
t">// Max value for integer on a 32-bit system
<br></span><span class=3D"default">$arr </span><span class=3D"keyword">=3D =
array();
<br>
<br></span><span class=3D"default">$arr</span><span class=3D"keyword">[</sp=
an><span class=3D"default">1</span><span class=3D"keyword">] =3D </span><sp=
an class=3D"string">'foo'</span><span class=3D"keyword">; </span><span clas=
s=3D"comment">// New generated index will be 2
<br></span><span class=3D"default">$arr</span><span class=3D"keyword">[ </s=
pan><span class=3D"default">$max_int </span><span class=3D"keyword">] =3D <=
/span><span class=3D"string">'bar'</span><span class=3D"keyword">; </span><=
span class=3D"comment">// Caution: Next generated index will be -2147483648=
 due to the integer overflow!
<br></span><span class=3D"default">$arr</span><span class=3D"keyword">[</sp=
an><span class=3D"default">0</span><span class=3D"keyword">] =3D </span><sp=
an class=3D"string">'bar'</span><span class=3D"keyword">; </span><span clas=
s=3D"comment">// The highest value should be 2147483648 but due to the i-ov=
erflow it is -2147483648 so current index 0 is larger. The new generated in=
dex therefore is 1!
<br></span><span class=3D"default">$arr</span><span class=3D"keyword">[]  =
=3D </span><span class=3D"string">'failure'</span><span class=3D"keyword">;=
 </span><span class=3D"comment">// Warning: Cannot add element to the array=
 as the next element is already occupied.
<br></span><span class=3D"default">?&gt;</span></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"79235">  <div class=3D"votes">
    <div id=3D"Vu79235">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D79235&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd79235">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D79235&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V79235" title=3D"50% like this...">
    1
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#79235" class=
=3D"name">
  <strong class=3D"user"><em>jon hohle</em></strong></a><a class=3D"genanch=
or" href=3D"https://www.php.net/manual/en/function.array.php#79235"> =C2=B6=
</a><div class=3D"date" title=3D"2007-11-16 05:12"><strong>16 years ago</st=
rong></div>
  <div class=3D"text" id=3D"Hcom79235">
<div class=3D"phpcode"><code><span class=3D"html">Here are shorter versions=
 of sam barrow's functions. From a PHP perspective these are O(1) (without =
getting into what's going on in the interpreter), instead of O(n).<br><br><=
span class=3D"default">&lt;?php<br></span><span class=3D"keyword">function =
</span><span class=3D"default">randomKey</span><span class=3D"keyword">(arr=
ay </span><span class=3D"default">$array</span><span class=3D"keyword">)<br=
>{<br>    return </span><span class=3D"default">randomElement</span><span c=
lass=3D"keyword">(</span><span class=3D"default">array_keys</span><span cla=
ss=3D"keyword">(</span><span class=3D"default">$array</span><span class=3D"=
keyword">));<br>}<br><br>function </span><span class=3D"default">randomElem=
ent</span><span class=3D"keyword">(array </span><span class=3D"default">$ar=
ray</span><span class=3D"keyword">)<br>{<br>    if (</span><span class=3D"d=
efault">count</span><span class=3D"keyword">(</span><span class=3D"default"=
>$array</span><span class=3D"keyword">) =3D=3D=3D </span><span class=3D"def=
ault">0</span><span class=3D"keyword">)<br>    {<br>        </span><span cl=
ass=3D"default">trigger_error</span><span class=3D"keyword">(</span><span c=
lass=3D"string">'Array is empty.'</span><span class=3D"keyword">,  </span><=
span class=3D"default">E_USER_WARNING</span><span class=3D"keyword">);<br> =
       return </span><span class=3D"default">null</span><span class=3D"keyw=
ord">;<br>    }<br><br>    </span><span class=3D"default">$rand </span><spa=
n class=3D"keyword">=3D </span><span class=3D"default">mt_rand</span><span =
class=3D"keyword">(</span><span class=3D"default">0</span><span class=3D"ke=
yword">, </span><span class=3D"default">count</span><span class=3D"keyword"=
>(</span><span class=3D"default">$array</span><span class=3D"keyword">) - <=
/span><span class=3D"default">1</span><span class=3D"keyword">);<br>    </s=
pan><span class=3D"default">$array_keys </span><span class=3D"keyword">=3D =
</span><span class=3D"default">array_keys</span><span class=3D"keyword">(</=
span><span class=3D"default">$array</span><span class=3D"keyword">);<br>   =
 <br>    return </span><span class=3D"default">$array</span><span class=3D"=
keyword">[</span><span class=3D"default">$array_keys</span><span class=3D"k=
eyword">[</span><span class=3D"default">$rand</span><span class=3D"keyword"=
>]];<br>}<br></span><span class=3D"default">?&gt;</span></span></code></div=
>
  </div>
 </div>
  <div class=3D"note" id=3D"67028">  <div class=3D"votes">
    <div id=3D"Vu67028">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D67028&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd67028">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D67028&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V67028" title=3D"50% like this...">
    1
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#67028" class=
=3D"name">
  <strong class=3D"user"><em>jupiter at nospam dot com</em></strong></a><a =
class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.ph=
p#67028"> =C2=B6</a><div class=3D"date" title=3D"2006-06-02 03:33"><strong>=
18 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom67028">
<div class=3D"phpcode"><code><span class=3D"html"><span class=3D"default">&=
lt;?php<br><br></span><span class=3D"comment">// changes any combination of=
 multiarray elements and subarrays<br>// into a consistent 2nd level multia=
rray, tries to preserves keys<br></span><span class=3D"keyword">function </=
span><span class=3D"default">changeMultiarrayStructure</span><span class=3D=
"keyword">(</span><span class=3D"default">$multiarray</span><span class=3D"=
keyword">, </span><span class=3D"default">$asc </span><span class=3D"keywor=
d">=3D </span><span class=3D"default">1</span><span class=3D"keyword">) {<b=
r>  if (</span><span class=3D"default">$asc </span><span class=3D"keyword">=
=3D=3D </span><span class=3D"default">1</span><span class=3D"keyword">) {  =
</span><span class=3D"comment">// use first subarrays for new keys of array=
s<br>    </span><span class=3D"default">$multiarraykeys </span><span class=
=3D"keyword">=3D </span><span class=3D"default">array_reverse</span><span c=
lass=3D"keyword">(</span><span class=3D"default">$multiarray</span><span cl=
ass=3D"keyword">, </span><span class=3D"default">true</span><span class=3D"=
keyword">);<br>  } else {  </span><span class=3D"comment">// use the last a=
rray keys<br>    </span><span class=3D"default">$multiarraykeys </span><spa=
n class=3D"keyword">=3D </span><span class=3D"default">$multiarray</span><s=
pan class=3D"keyword">;  </span><span class=3D"comment">// use last subarra=
y keys<br>  </span><span class=3D"keyword">}  </span><span class=3D"comment=
">// end array reordering<br>  </span><span class=3D"default">$newarraykeys=
 </span><span class=3D"keyword">=3D array();  </span><span class=3D"comment=
">// establish array<br>  </span><span class=3D"keyword">foreach (</span><s=
pan class=3D"default">$multiarraykeys </span><span class=3D"keyword">as </s=
pan><span class=3D"default">$arrayvalue</span><span class=3D"keyword">) {  =
</span><span class=3D"comment">// build new array keys<br>    </span><span =
class=3D"keyword">if (</span><span class=3D"default">is_array</span><span c=
lass=3D"keyword">(</span><span class=3D"default">$arrayvalue</span><span cl=
ass=3D"keyword">)) {  </span><span class=3D"comment">// is subarray an arra=
y<br>      </span><span class=3D"default">$newarraykeys </span><span class=
=3D"keyword">=3D </span><span class=3D"default">array_keys</span><span clas=
s=3D"keyword">(</span><span class=3D"default">$arrayvalue</span><span class=
=3D"keyword">) + </span><span class=3D"default">$newarraykeys</span><span c=
lass=3D"keyword">;<br>    }  </span><span class=3D"comment">// if count(pre=
vsubarray)&gt;count(currentarray), extras survive <br>  </span><span class=
=3D"keyword">}  </span><span class=3D"comment">// end key building loop<br>=
  </span><span class=3D"keyword">foreach (</span><span class=3D"default">$m=
ultiarray </span><span class=3D"keyword">as </span><span class=3D"default">=
$newsubarraykey </span><span class=3D"keyword">=3D&gt; </span><span class=
=3D"default">$arrayvalue</span><span class=3D"keyword">) {<br>    if (</spa=
n><span class=3D"default">is_array</span><span class=3D"keyword">(</span><s=
pan class=3D"default">$arrayvalue</span><span class=3D"keyword">)) {  </spa=
n><span class=3D"comment">// multiarray element is an array<br>      </span=
><span class=3D"default">$i </span><span class=3D"keyword">=3D </span><span=
 class=3D"default">0</span><span class=3D"keyword">;  </span><span class=3D=
"comment">// start counter for subarray key<br>      </span><span class=3D"=
keyword">foreach (</span><span class=3D"default">$arrayvalue </span><span c=
lass=3D"keyword">as </span><span class=3D"default">$subarrayvalue</span><sp=
an class=3D"keyword">) {  </span><span class=3D"comment">// access subarray=
<br>        </span><span class=3D"default">$newmultiarray</span><span class=
=3D"keyword">[</span><span class=3D"default">$newarraykeys</span><span clas=
s=3D"keyword">[</span><span class=3D"default">$i</span><span class=3D"keywo=
rd">]][</span><span class=3D"default">$newsubarraykey</span><span class=3D"=
keyword">] =3D </span><span class=3D"default">$subarrayvalue</span><span cl=
ass=3D"keyword">;<br>        </span><span class=3D"default">$i</span><span =
class=3D"keyword">++;  </span><span class=3D"comment">// increase counter<b=
r>      </span><span class=3D"keyword">}  </span><span class=3D"comment">//=
 end subarray loop<br>    </span><span class=3D"keyword">} else {  </span><=
span class=3D"comment">// multiarray element is a value<br>      </span><sp=
an class=3D"keyword">foreach (</span><span class=3D"default">$newarraykeys =
</span><span class=3D"keyword">as </span><span class=3D"default">$newarrayk=
ey</span><span class=3D"keyword">) {  </span><span class=3D"comment">// new=
 subarray keys<br>        </span><span class=3D"default">$newmultiarray</sp=
an><span class=3D"keyword">[</span><span class=3D"default">$newarraykey</sp=
an><span class=3D"keyword">][</span><span class=3D"default">$newsubarraykey=
</span><span class=3D"keyword">] =3D </span><span class=3D"default">$arrayv=
alue</span><span class=3D"keyword">;<br>      }  </span><span class=3D"comm=
ent">// end loop for array variables<br>    </span><span class=3D"keyword">=
}  </span><span class=3D"comment">// end conditional<br>  </span><span clas=
s=3D"keyword">}  </span><span class=3D"comment">// end new multiarray build=
ing loop<br>  </span><span class=3D"keyword">return </span><span class=3D"d=
efault">$newmultiarray</span><span class=3D"keyword">;<br>}<br><br></span><=
span class=3D"comment">// will change <br></span><span class=3D"default">$o=
ld </span><span class=3D"keyword">=3D array(</span><span class=3D"string">'=
a'</span><span class=3D"keyword">=3D&gt;</span><span class=3D"default">1</s=
pan><span class=3D"keyword">,</span><span class=3D"string">'b'</span><span =
class=3D"keyword">=3D&gt;array(</span><span class=3D"string">'e'</span><spa=
n class=3D"keyword">=3D&gt;</span><span class=3D"default">2</span><span cla=
ss=3D"keyword">,</span><span class=3D"string">'f'</span><span class=3D"keyw=
ord">=3D&gt;</span><span class=3D"default">3</span><span class=3D"keyword">=
),</span><span class=3D"string">'c'</span><span class=3D"keyword">=3D&gt;ar=
ray(</span><span class=3D"string">'g'</span><span class=3D"keyword">=3D&gt;=
</span><span class=3D"default">4</span><span class=3D"keyword">),</span><sp=
an class=3D"string">'d'</span><span class=3D"keyword">=3D&gt;</span><span c=
lass=3D"default">5</span><span class=3D"keyword">);<br></span><span class=
=3D"comment">// to <br></span><span class=3D"default">$new </span><span cla=
ss=3D"keyword">=3D array(</span><span class=3D"string">'e'</span><span clas=
s=3D"keyword">=3D&gt;array(</span><span class=3D"string">'a'</span><span cl=
ass=3D"keyword">=3D&gt;</span><span class=3D"default">1</span><span class=
=3D"keyword">,</span><span class=3D"string">'b'</span><span class=3D"keywor=
d">=3D&gt;</span><span class=3D"default">2</span><span class=3D"keyword">,<=
/span><span class=3D"string">'c'</span><span class=3D"keyword">=3D&gt;</spa=
n><span class=3D"default">4</span><span class=3D"keyword">,</span><span cla=
ss=3D"string">'d'</span><span class=3D"keyword">=3D&gt;</span><span class=
=3D"default">5</span><span class=3D"keyword">),<br>  </span><span class=3D"=
string">'f'</span><span class=3D"keyword">=3D&gt;array(</span><span class=
=3D"string">'a'</span><span class=3D"keyword">=3D&gt;</span><span class=3D"=
default">1</span><span class=3D"keyword">,</span><span class=3D"string">'b'=
</span><span class=3D"keyword">=3D&gt;</span><span class=3D"default">3</spa=
n><span class=3D"keyword">,</span><span class=3D"string">'d'</span><span cl=
ass=3D"keyword">=3D&gt;</span><span class=3D"default">5</span><span class=
=3D"keyword">));<br><br></span><span class=3D"comment">// note: if $asc par=
ameter isn't default, last subarray keys used <br><br></span><span class=3D=
"default">?&gt;<br></span><br>The new key/value assignment pattern is clear=
er with bigger arrays.<br>I use this to manipulate input/output data from m=
y db. Enjoy.</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"84278">  <div class=3D"votes">
    <div id=3D"Vu84278">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D84278&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd84278">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D84278&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V84278" title=3D"50% like this...">
    0
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#84278" class=
=3D"name">
  <strong class=3D"user"><em>jonberglund at gmail dot com</em></strong></a>=
<a class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array=
.php#84278"> =C2=B6</a><div class=3D"date" title=3D"2008-07-07 09:25"><stro=
ng>16 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom84278">
<div class=3D"phpcode"><code><span class=3D"html">The following function (s=
imilar to one above) will render an array as a series of HTML select option=
s (i.e. "&lt;option&gt;...&lt;/option&gt;"). The problem with the one befor=
e is that there was no way to handle &lt;optgroup&gt;, so this function sol=
ves that issue.<br><br>function arrayToSelect($option, $selected =3D '', $o=
ptgroup =3D NULL)<br>{<br>    $returnStatement =3D '';<br><br>    if ($sele=
cted =3D=3D '') {<br>        $returnStatement .=3D '&lt;option value=3D"" s=
elected=3D"selected"&gt;Select one...&lt;/option&gt;';<br>    }<br><br>    =
if (isset($optgroup)) {<br>        foreach ($optgroup as $optgroupKey =3D&g=
t; $optgroupValue) {<br>            $returnStatement .=3D '&lt;optgroup lab=
el=3D"' . $optgroupValue . '"&gt;';<br><br>            foreach ($option[$op=
tgroupKey] as $optionKey =3D&gt; $optionValue) {<br>                if ($op=
tionKey =3D=3D $selected) {<br>                    $returnStatement .=3D '&=
lt;option selected=3D"selected" value=3D"' . $optionKey . '"&gt;' . $option=
Value . '&lt;/option&gt;';<br>                } else {<br>                 =
   $returnStatement .=3D '&lt;option value=3D"' . $optionKey . '"&gt;' . $o=
ptionValue . '&lt;/option&gt;';<br>                }<br>            }<br><b=
r>            $returnStatement .=3D '&lt;/optgroup&gt;';<br>        }<br>  =
  } else {<br>        foreach ($option as $key =3D&gt; $value) {<br>       =
     if ($key =3D=3D $selected) {<br>                $returnStatement .=3D =
'&lt;option selected=3D"selected" value=3D"' . $key . '"&gt;' . $value . '&=
lt;/option&gt;';<br>            } else {<br>                $returnStatemen=
t .=3D '&lt;option value=3D"' . $key . '"&gt;' . $value . '&lt;/option&gt;'=
;<br>            }<br>        }<br>    }<br><br>    return $returnStatement=
;<br>}<br><br> So, for example, I needed to render a list of states/provinc=
es for various countries in a select field, and I wanted to use each countr=
y name as an &lt;optgroup&gt; label. So, with this function, if only a sing=
le array is passed to the function (i.e. "arrayToSelect($stateList)") then =
it will simply spit out a bunch of "&lt;option&gt;" elements. On the other =
hand, if two arrays are passed to it, the second array becomes a "key" for =
translating the first array.<br><br>Here's a further example:<br><br>$count=
ryList =3D array(<br>    'CA'        =3D&gt; 'Canada',<br>    'US'        =
=3D&gt; 'United States');<br><br>$stateList['CA'] =3D array(<br>    'AB'   =
     =3D&gt; 'Alberta',<br>    'BC'        =3D&gt; 'British Columbia',<br> =
   'AB'        =3D&gt; 'Alberta',<br>    'BC'        =3D&gt; 'British Colum=
bia',<br>    'MB'        =3D&gt; 'Manitoba',<br>    'NB'        =3D&gt; 'Ne=
w Brunswick',<br>    'NL'        =3D&gt; 'Newfoundland/Labrador',<br>    'N=
S'        =3D&gt; 'Nova Scotia',<br>    'NT'        =3D&gt; 'Northwest Terr=
itories',<br>    'NU'        =3D&gt; 'Nunavut',<br>    'ON'        =3D&gt; =
'Ontario',<br>    'PE'        =3D&gt; 'Prince Edward Island',<br>    'QC'  =
      =3D&gt; 'Quebec',<br>    'SK'        =3D&gt; 'Saskatchewan',<br>    '=
YT'        =3D&gt; 'Yukon');<br><br>$stateList['US'] =3D array(<br>    'AL'=
        =3D&gt; 'Alabama',<br>    'AK'        =3D&gt; 'Alaska',<br>    'AZ'=
        =3D&gt; 'Arizona',<br>    'AR'        =3D&gt; 'Arkansas',<br>    'C=
A'        =3D&gt; 'California',<br>    'CO'        =3D&gt; 'Colorado',<br> =
   'CT'        =3D&gt; 'Connecticut',<br>    'DE'        =3D&gt; 'Delaware'=
,<br>    'DC'        =3D&gt; 'District of Columbia',<br>    'FL'        =3D=
&gt; 'Florida',<br>    'GA'        =3D&gt; 'Georgia',<br>    'HI'        =
=3D&gt; 'Hawaii',<br>    'ID'        =3D&gt; 'Idaho',<br>    'IL'        =
=3D&gt; 'Illinois',<br>    'IN'        =3D&gt; 'Indiana',<br>    'IA'      =
  =3D&gt; 'Iowa',<br>    'KS'        =3D&gt; 'Kansas',<br>    'KY'        =
=3D&gt; 'Kentucky',<br>    'LA'        =3D&gt; 'Louisiana',<br>    'ME'    =
    =3D&gt; 'Maine',<br>    'MD'        =3D&gt; 'Maryland',<br>    'MA'    =
    =3D&gt; 'Massachusetts',<br>    'MI'        =3D&gt; 'Michigan',<br>    =
'MN'        =3D&gt; 'Minnesota',<br>    'MS'        =3D&gt; 'Mississippi',<=
br>    'MO'        =3D&gt; 'Missouri',<br>    'MT'        =3D&gt; 'Montana'=
,<br>    'NE'        =3D&gt; 'Nebraska',<br>    'NV'        =3D&gt; 'Nevada=
',<br>    'NH'        =3D&gt; 'New Hampshire',<br>    'NJ'        =3D&gt; '=
New Jersey',<br>    'NM'        =3D&gt; 'New Mexico',<br>    'NY'        =
=3D&gt; 'New York',<br>    'NC'        =3D&gt; 'North Carolina',<br>    'ND=
'        =3D&gt; 'North Dakota',<br>    'OH'        =3D&gt; 'Ohio',<br>    =
'OK'        =3D&gt; 'Oklahoma',<br>    'OR'        =3D&gt; 'Oregon',<br>   =
 'PA'        =3D&gt; 'Pennsylvania',<br>    'RI'        =3D&gt; 'Rhode Isla=
nd',<br>    'SC'        =3D&gt; 'South Carolina',<br>    'SD'        =3D&gt=
; 'South Dakota',<br>    'TN'        =3D&gt; 'Tennessee',<br>    'TX'      =
  =3D&gt; 'Texas',<br>    'UT'        =3D&gt; 'Utah',<br>    'VT'        =
=3D&gt; 'Vermont',<br>    'VA'        =3D&gt; 'Virginia',<br>    'WA'      =
  =3D&gt; 'Washington',<br>    'WV'        =3D&gt; 'West Virginia',<br>    =
'WI'        =3D&gt; 'Wisconsin',<br>    'WY'        =3D&gt; 'Wyoming');<br>=
<br>...<br><br>&lt;select name=3D"state" id=3D"state"&gt;<span class=3D"def=
ault">&lt;?php </span><span class=3D"keyword">echo </span><span class=3D"de=
fault">arrayToSelect</span><span class=3D"keyword">(</span><span class=3D"d=
efault">$stateList</span><span class=3D"keyword">,</span><span class=3D"str=
ing">''</span><span class=3D"keyword">,</span><span class=3D"default">$coun=
tryList</span><span class=3D"keyword">) </span><span class=3D"default">?&gt=
;</span>&lt;/select&gt;<br>&lt;select name=3D"country" id=3D"country"&gt;<s=
pan class=3D"default">&lt;?php </span><span class=3D"keyword">echo </span><=
span class=3D"default">arrayToSelect</span><span class=3D"keyword">(</span>=
<span class=3D"default">$countryList</span><span class=3D"keyword">,</span>=
<span class=3D"string">'US'</span><span class=3D"keyword">) </span><span cl=
ass=3D"default">?&gt;</span>&lt;/select&gt;</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"78829">  <div class=3D"votes">
    <div id=3D"Vu78829">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D78829&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd78829">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D78829&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V78829" title=3D"49% like this...">
    -1
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#78829" class=
=3D"name">
  <strong class=3D"user"><em>Mike Mackintosh</em></strong></a><a class=3D"g=
enanchor" href=3D"https://www.php.net/manual/en/function.array.php#78829"> =
=C2=B6</a><div class=3D"date" title=3D"2007-10-29 09:38"><strong>16 years a=
go</strong></div>
  <div class=3D"text" id=3D"Hcom78829" style=3D"opacity: 0.75;">
<div class=3D"phpcode"><code><span class=3D"html">If you need to add an obj=
ect as an array key, for example an object from Simple XML Parser, you can =
use the following.<br><br>File.XML<br>&lt;?xml version=3D"1.0" encoding=3D"=
UTF-8"?&gt;<br>&lt;Settings type=3D"General"&gt;<br>  &lt;Setting name=3D"S=
ettingName"&gt;This This This&lt;/Setting&gt;<br>&lt;/Settings&gt;<br><br>T=
he script:<br><span class=3D"default">&lt;?php<br>$raw </span><span class=
=3D"keyword">=3D </span><span class=3D"default">$xml </span><span class=3D"=
keyword">=3D  new </span><span class=3D"default">SimpleXMLElement</span><sp=
an class=3D"keyword">(</span><span class=3D"string">'File.XML'</span><span =
class=3D"keyword">);<br>foreach(</span><span class=3D"default">$raw</span><=
span class=3D"keyword">-&gt;</span><span class=3D"default">Setting </span><=
span class=3D"keyword">as </span><span class=3D"default">$A </span><span cl=
ass=3D"keyword">=3D&gt; </span><span class=3D"default">$B</span><span class=
=3D"keyword">)<br>{        <br>    </span><span class=3D"comment">// Set Ar=
ray From XML<br>    </span><span class=3D"default">$Setting</span><span cla=
ss=3D"keyword">[(string) </span><span class=3D"default">$B</span><span clas=
s=3D"keyword">[</span><span class=3D"string">'name'</span><span class=3D"ke=
yword">]] =3D (string)  </span><span class=3D"default">$B</span><span class=
=3D"keyword">[</span><span class=3D"default">0</span><span class=3D"keyword=
">];<br>}<br></span><span class=3D"default">?&gt;<br></span>By telling the =
key to read the object as a string, it will let you set it.<br><br>Hope thi=
s helps someone out!</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"52138">  <div class=3D"votes">
    <div id=3D"Vu52138">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D52138&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd52138">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D52138&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V52138" title=3D"48% like this...">
    -4
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#52138" class=
=3D"name">
  <strong class=3D"user"><em>brian at blueeye dot us</em></strong></a><a cl=
ass=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.php#=
52138"> =C2=B6</a><div class=3D"date" title=3D"2005-04-21 05:34"><strong>19=
 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom52138" style=3D"opacity: 0.45;">
<div class=3D"phpcode"><code><span class=3D"html">If you need, for some rea=
son, to create variable Multi-Dimensional Arrays, here's a quick function t=
hat will allow you to have any number of sub elements without knowing how m=
any elements there will be ahead of time. Note that this will overwrite an =
existing array value of the same path.<br><br><span class=3D"default">&lt;?=
php<br></span><span class=3D"comment">// set_element(array path, mixed valu=
e)<br></span><span class=3D"keyword">function </span><span class=3D"default=
">set_element</span><span class=3D"keyword">(&amp;</span><span class=3D"def=
ault">$path</span><span class=3D"keyword">, </span><span class=3D"default">=
$data</span><span class=3D"keyword">) {<br>    return (</span><span class=
=3D"default">$key </span><span class=3D"keyword">=3D </span><span class=3D"=
default">array_pop</span><span class=3D"keyword">(</span><span class=3D"def=
ault">$path</span><span class=3D"keyword">)) ? </span><span class=3D"defaul=
t">set_element</span><span class=3D"keyword">(</span><span class=3D"default=
">$path</span><span class=3D"keyword">, array(</span><span class=3D"default=
">$key</span><span class=3D"keyword">=3D&gt;</span><span class=3D"default">=
$data</span><span class=3D"keyword">)) : </span><span class=3D"default">$da=
ta</span><span class=3D"keyword">;<br>}<br></span><span class=3D"default">?=
&gt;<br></span><br>For example:<br><br><span class=3D"default">&lt;?php<br>=
</span><span class=3D"keyword">echo </span><span class=3D"string">"&lt;pre&=
gt;"</span><span class=3D"keyword">;<br></span><span class=3D"default">$pat=
h </span><span class=3D"keyword">=3D array(</span><span class=3D"string">'b=
ase'</span><span class=3D"keyword">, </span><span class=3D"string">'categor=
y'</span><span class=3D"keyword">, </span><span class=3D"string">'subcatego=
ry'</span><span class=3D"keyword">, </span><span class=3D"string">'item'</s=
pan><span class=3D"keyword">);<br></span><span class=3D"default">$array </s=
pan><span class=3D"keyword">=3D </span><span class=3D"default">set_element<=
/span><span class=3D"keyword">(</span><span class=3D"default">$path</span><=
span class=3D"keyword">, </span><span class=3D"string">'item_value'</span><=
span class=3D"keyword">);<br></span><span class=3D"default">print_r</span><=
span class=3D"keyword">(</span><span class=3D"default">$array</span><span c=
lass=3D"keyword">);<br>echo </span><span class=3D"string">"&lt;/pre&gt;"</s=
pan><span class=3D"keyword">;<br></span><span class=3D"default">?&gt;<br></=
span><br>Will display:<br>Array<br>(<br>    [base] =3D&gt; Array<br>       =
 (<br>            [category] =3D&gt; Array<br>                (<br>        =
            [subcategory] =3D&gt; Array<br>                        (<br>   =
                         [item] =3D&gt; item_value<br>                     =
   )<br>                )<br>        )<br>)</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"102281">  <div class=3D"votes">
    <div id=3D"Vu102281">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D102281&amp;pag=
e=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vot=
eu">up</a>
    </div>
    <div id=3D"Vd102281">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D102281&amp;pag=
e=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes=
-voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V102281" title=3D"47% like this...">
    -4
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#102281" class=
=3D"name">
  <strong class=3D"user"><em>r0h4rd at gmail dot com</em></strong></a><a cl=
ass=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.php#=
102281"> =C2=B6</a><div class=3D"date" title=3D"2011-02-06 02:59"><strong>1=
3 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom102281" style=3D"opacity: 0.45;">
<div class=3D"phpcode"><code><span class=3D"html">"Quick and dirty" class t=
o get an offset of multidimensional array by given path (sorry, that withou=
t comments).<br><br><span class=3D"default">&lt;?php<br><br>    </span><spa=
n class=3D"keyword">class </span><span class=3D"default">ArrayAsPathExcepti=
on </span><span class=3D"keyword">extends </span><span class=3D"default">Ex=
ception </span><span class=3D"keyword">{} <br><br>    class </span><span cl=
ass=3D"default">ArrayAsPath </span><span class=3D"keyword">{<br>        pro=
tected<br>            </span><span class=3D"default">$data </span><span cla=
ss=3D"keyword">=3D array(),<br>            </span><span class=3D"default">$=
separator </span><span class=3D"keyword">=3D </span><span class=3D"string">=
'.'</span><span class=3D"keyword">;<br><br>        public function </span><=
span class=3D"default">__construct </span><span class=3D"keyword">(array </=
span><span class=3D"default">$data </span><span class=3D"keyword">=3D array=
()) {<br>            </span><span class=3D"default">$this</span><span class=
=3D"keyword">-&gt;</span><span class=3D"default">data </span><span class=3D=
"keyword">=3D </span><span class=3D"default">$data</span><span class=3D"key=
word">;<br>        }<br><br>        public function </span><span class=3D"d=
efault">set </span><span class=3D"keyword">(</span><span class=3D"default">=
$value</span><span class=3D"keyword">, </span><span class=3D"default">$path=
 </span><span class=3D"keyword">=3D </span><span class=3D"default">null</sp=
an><span class=3D"keyword">) {<br>            if (!isset(</span><span class=
=3D"default">$path</span><span class=3D"keyword">)) {<br>                </=
span><span class=3D"default">$this</span><span class=3D"keyword">-&gt;</spa=
n><span class=3D"default">data </span><span class=3D"keyword">=3D </span><s=
pan class=3D"default">$value</span><span class=3D"keyword">;<br>           =
 }<br><br>            </span><span class=3D"default">$separator </span><spa=
n class=3D"keyword">=3D </span><span class=3D"default">$this</span><span cl=
ass=3D"keyword">-&gt;</span><span class=3D"default">separator</span><span c=
lass=3D"keyword">;<br>            </span><span class=3D"default">$pathtoken=
 </span><span class=3D"keyword">=3D </span><span class=3D"default">strtok</=
span><span class=3D"keyword">(</span><span class=3D"default">$path</span><s=
pan class=3D"keyword">, </span><span class=3D"default">$separator</span><sp=
an class=3D"keyword">);<br><br>            </span><span class=3D"default">$=
code </span><span class=3D"keyword">=3D </span><span class=3D"string">''</s=
pan><span class=3D"keyword">;<br>            </span><span class=3D"default"=
>$pices </span><span class=3D"keyword">=3D </span><span class=3D"string">'[=
\''</span><span class=3D"keyword">.</span><span class=3D"default">$pathtoke=
n</span><span class=3D"keyword">.</span><span class=3D"string">'\']'</span>=
<span class=3D"keyword">;<br>            while (</span><span class=3D"defau=
lt">$pathtoken </span><span class=3D"keyword">!=3D=3D </span><span class=3D=
"default">false</span><span class=3D"keyword">) {<br>                if ((<=
/span><span class=3D"default">$pathtoken </span><span class=3D"keyword">=3D=
 </span><span class=3D"default">strtok</span><span class=3D"keyword">(</spa=
n><span class=3D"default">$separator</span><span class=3D"keyword">)) !=3D=
=3D </span><span class=3D"default">false</span><span class=3D"keyword">) {<=
br>                    </span><span class=3D"default">$code </span><span cl=
ass=3D"keyword">.=3D </span><span class=3D"string">'if (!isset($this-&gt;da=
ta'</span><span class=3D"keyword">.</span><span class=3D"default">$pices</s=
pan><span class=3D"keyword">.</span><span class=3D"string">')) $this-&gt;da=
ta'</span><span class=3D"keyword">.</span><span class=3D"default">$pices</s=
pan><span class=3D"keyword">.</span><span class=3D"string">' =3D array(); '=
</span><span class=3D"keyword">;<br>                    </span><span class=
=3D"default">$pices </span><span class=3D"keyword">.=3D </span><span class=
=3D"string">'[\''</span><span class=3D"keyword">.</span><span class=3D"defa=
ult">$pathtoken</span><span class=3D"keyword">.</span><span class=3D"string=
">'\']'</span><span class=3D"keyword">;<br>                } else {<br>    =
                </span><span class=3D"default">$code </span><span class=3D"=
keyword">.=3D </span><span class=3D"string">'return $this-&gt;data'</span><=
span class=3D"keyword">.</span><span class=3D"default">$pices</span><span c=
lass=3D"keyword">.</span><span class=3D"string">' =3D $value;'</span><span =
class=3D"keyword">;<br>                }<br>            }<br><br>          =
  return eval(</span><span class=3D"default">$code</span><span class=3D"key=
word">);<br>        }<br><br>        public function </span><span class=3D"=
default">get </span><span class=3D"keyword">(</span><span class=3D"default"=
>$path </span><span class=3D"keyword">=3D </span><span class=3D"string">''<=
/span><span class=3D"keyword">, </span><span class=3D"default">$default </s=
pan><span class=3D"keyword">=3D </span><span class=3D"default">null</span><=
span class=3D"keyword">) {<br>            </span><span class=3D"default">$r=
esult </span><span class=3D"keyword">=3D </span><span class=3D"default">$th=
is</span><span class=3D"keyword">-&gt;</span><span class=3D"default">data</=
span><span class=3D"keyword">;<br>            </span><span class=3D"default=
">$separator </span><span class=3D"keyword">=3D </span><span class=3D"defau=
lt">$this</span><span class=3D"keyword">-&gt;</span><span class=3D"default"=
>separator</span><span class=3D"keyword">;<br>            </span><span clas=
s=3D"default">$pathtoken </span><span class=3D"keyword">=3D </span><span cl=
ass=3D"default">strtok</span><span class=3D"keyword">(</span><span class=3D=
"default">$path</span><span class=3D"keyword">, </span><span class=3D"defau=
lt">$separator</span><span class=3D"keyword">);<br><br>            while (<=
/span><span class=3D"default">$pathtoken </span><span class=3D"keyword">!=
=3D=3D </span><span class=3D"default">false</span><span class=3D"keyword">)=
 {<br>                if (!isset(</span><span class=3D"default">$result</sp=
an><span class=3D"keyword">[</span><span class=3D"default">$pathtoken</span=
><span class=3D"keyword">]) || </span><span class=3D"default">is_string</sp=
an><span class=3D"keyword">(</span><span class=3D"default">$result</span><s=
pan class=3D"keyword">)) {<br>                    if (isset(</span><span cl=
ass=3D"default">$default</span><span class=3D"keyword">)) {<br>            =
            return </span><span class=3D"default">$default</span><span clas=
s=3D"keyword">;<br>                    }<br><br>                    throw n=
ew </span><span class=3D"default">ArrayAsPathException </span><span class=
=3D"keyword">(</span><span class=3D"string">'Can\'t find "'</span><span cla=
ss=3D"keyword">.</span><span class=3D"default">$pathtoken</span><span class=
=3D"keyword">.</span><span class=3D"string">'" in "'</span><span class=3D"k=
eyword">.</span><span class=3D"default">$path</span><span class=3D"keyword"=
>.</span><span class=3D"string">'"'</span><span class=3D"keyword">);<br>   =
             }<br><br>                </span><span class=3D"default">$resul=
t </span><span class=3D"keyword">=3D </span><span class=3D"default">$result=
</span><span class=3D"keyword">[</span><span class=3D"default">$pathtoken</=
span><span class=3D"keyword">];<br>                </span><span class=3D"de=
fault">$pathtoken </span><span class=3D"keyword">=3D </span><span class=3D"=
default">strtok</span><span class=3D"keyword">(</span><span class=3D"defaul=
t">$separator</span><span class=3D"keyword">);<br>            }<br><br>    =
        return </span><span class=3D"default">$result </span><span class=3D=
"keyword">? </span><span class=3D"default">$result </span><span class=3D"ke=
yword">: </span><span class=3D"default">$default</span><span class=3D"keywo=
rd">;<br>        }<br><br>        public function </span><span class=3D"def=
ault">has </span><span class=3D"keyword">(</span><span class=3D"default">$p=
ath</span><span class=3D"keyword">) {<br>            </span><span class=3D"=
default">$result </span><span class=3D"keyword">=3D </span><span class=3D"d=
efault">$this</span><span class=3D"keyword">-&gt;</span><span class=3D"defa=
ult">data</span><span class=3D"keyword">;<br>            </span><span class=
=3D"default">$separator </span><span class=3D"keyword">=3D </span><span cla=
ss=3D"default">$this</span><span class=3D"keyword">-&gt;</span><span class=
=3D"default">separator</span><span class=3D"keyword">;<br>            </spa=
n><span class=3D"default">$pathtoken </span><span class=3D"keyword">=3D </s=
pan><span class=3D"default">strtok</span><span class=3D"keyword">(</span><s=
pan class=3D"default">$path</span><span class=3D"keyword">, </span><span cl=
ass=3D"default">$separator</span><span class=3D"keyword">);<br><br>        =
    while (</span><span class=3D"default">$pathtoken </span><span class=3D"=
keyword">!=3D=3D </span><span class=3D"default">false</span><span class=3D"=
keyword">) {<br>                if (!isset(</span><span class=3D"default">$=
result</span><span class=3D"keyword">[</span><span class=3D"default">$patht=
oken</span><span class=3D"keyword">]) || </span><span class=3D"default">is_=
string</span><span class=3D"keyword">(</span><span class=3D"default">$resul=
t</span><span class=3D"keyword">)) {<br>                    return </span><=
span class=3D"default">false</span><span class=3D"keyword">;<br>           =
     }<br><br>                </span><span class=3D"default">$result </span=
><span class=3D"keyword">=3D </span><span class=3D"default">$result</span><=
span class=3D"keyword">[</span><span class=3D"default">$pathtoken</span><sp=
an class=3D"keyword">];<br>                </span><span class=3D"default">$=
pathtoken </span><span class=3D"keyword">=3D </span><span class=3D"default"=
>strtok</span><span class=3D"keyword">(</span><span class=3D"default">$sepa=
rator</span><span class=3D"keyword">);<br>            }<br><br>            =
return </span><span class=3D"default">true</span><span class=3D"keyword">;<=
br>        }<br><br>        public function </span><span class=3D"default">=
setSepatator </span><span class=3D"keyword">(</span><span class=3D"default"=
>$separator</span><span class=3D"keyword">) {<br>            </span><span c=
lass=3D"default">$this</span><span class=3D"keyword">-&gt;</span><span clas=
s=3D"default">separator </span><span class=3D"keyword">=3D </span><span cla=
ss=3D"default">$separator</span><span class=3D"keyword">;<br>        }<br><=
br>        public function </span><span class=3D"default">getSeparator </sp=
an><span class=3D"keyword">(</span><span class=3D"default">$separator</span=
><span class=3D"keyword">) {<br>            return </span><span class=3D"de=
fault">$this</span><span class=3D"keyword">-&gt;</span><span class=3D"defau=
lt">separator</span><span class=3D"keyword">;<br>        }<br>    }<br><br>=
</span><span class=3D"default">?&gt;<br></span><br>Code:<br><span class=3D"=
default">&lt;?php<br><br>    $params </span><span class=3D"keyword">=3D new=
 </span><span class=3D"default">ArrayAsPath</span><span class=3D"keyword">;=
<br>    </span><span class=3D"default">$params</span><span class=3D"keyword=
">-&gt;</span><span class=3D"default">set</span><span class=3D"keyword">(ar=
ray(<br>        </span><span class=3D"string">'foo' </span><span class=3D"k=
eyword">=3D&gt; array(<br>            </span><span class=3D"string">'bar' <=
/span><span class=3D"keyword">=3D&gt; array(<br>                </span><spa=
n class=3D"string">'item' </span><span class=3D"keyword">=3D&gt; </span><sp=
an class=3D"string">'Value'<br>            </span><span class=3D"keyword">)=
<br>        )<br>    ));<br><br>    try {<br>        </span><span class=3D"=
default">$params</span><span class=3D"keyword">-&gt;</span><span class=3D"d=
efault">set</span><span class=3D"keyword">(</span><span class=3D"string">'t=
est'</span><span class=3D"keyword">, </span><span class=3D"string">'foo.bar=
.far.new'</span><span class=3D"keyword">);<br>        </span><span class=3D=
"default">printf</span><span class=3D"keyword">(<br>            </span><spa=
n class=3D"string">'Array:&lt;pre&gt;%s&lt;/pre&gt;<br>            foo.bar.=
item:&lt;pre&gt;%s&lt;/pre&gt;<br>            foo.bar.far:&lt;pre&gt;%s&lt;=
/pre&gt;<br>            foo.bar.far.new&lt;pre&gt;%s&lt;/pre&gt;'</span><sp=
an class=3D"keyword">,<br>            </span><span class=3D"default">var_ex=
port</span><span class=3D"keyword">(</span><span class=3D"default">$params<=
/span><span class=3D"keyword">-&gt;</span><span class=3D"default">get</span=
><span class=3D"keyword">(), </span><span class=3D"default">true</span><spa=
n class=3D"keyword">),<br>            </span><span class=3D"default">var_ex=
port</span><span class=3D"keyword">(</span><span class=3D"default">$params<=
/span><span class=3D"keyword">-&gt;</span><span class=3D"default">get</span=
><span class=3D"keyword">(</span><span class=3D"string">'foo.bar.item'</spa=
n><span class=3D"keyword">), </span><span class=3D"default">true</span><spa=
n class=3D"keyword">),<br>            </span><span class=3D"default">var_ex=
port</span><span class=3D"keyword">(</span><span class=3D"default">$params<=
/span><span class=3D"keyword">-&gt;</span><span class=3D"default">get</span=
><span class=3D"keyword">(</span><span class=3D"string">'foo.bar.far'</span=
><span class=3D"keyword">), </span><span class=3D"default">true</span><span=
 class=3D"keyword">),<br>            </span><span class=3D"default">var_exp=
ort</span><span class=3D"keyword">(</span><span class=3D"default">$params</=
span><span class=3D"keyword">-&gt;</span><span class=3D"default">get</span>=
<span class=3D"keyword">(</span><span class=3D"string">'foo.bar.far.new'</s=
pan><span class=3D"keyword">), </span><span class=3D"default">true</span><s=
pan class=3D"keyword">)<br>        );<br>    } catch (</span><span class=3D=
"default">ArrayAsPathException $e</span><span class=3D"keyword">) {<br>    =
    echo </span><span class=3D"string">'Oops! It seems that something is wr=
ong. '</span><span class=3D"keyword">.</span><span class=3D"default">$e</sp=
an><span class=3D"keyword">-&gt;</span><span class=3D"default">getMessage</=
span><span class=3D"keyword">();<br>    }<br><br></span><span class=3D"defa=
ult">?&gt;<br></span><br>Will display:<br>Array:<br>array (<br>  'foo' =3D&=
gt; <br>  array (<br>    'bar' =3D&gt; <br>    array (<br>      'item' =3D&=
gt; 'Value',<br>      'far' =3D&gt; <br>      array (<br>        'new' =3D&=
gt; 'test',<br>      ),<br>    ),<br>  ),<br>)<br><br>foo.bar.item:<br>'Val=
ue'<br><br>foo.bar.far:<br>array (<br>  'new' =3D&gt; 'test',<br>)<br><br>f=
oo.bar.far.new:<br>'test'</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"12055">  <div class=3D"votes">
    <div id=3D"Vu12055">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D12055&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd12055">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D12055&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V12055" title=3D"48% like this...">
    -2
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#12055" class=
=3D"name">
  <strong class=3D"user"><em>slicky at newshelix dot com</em></strong></a><=
a class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.=
php#12055"> =C2=B6</a><div class=3D"date" title=3D"2001-03-20 01:57"><stron=
g>23 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom12055" style=3D"opacity: 0.65;">
<div class=3D"phpcode"><code><span class=3D"html">Notice that you can also =
add arrays to other arrays with the $array[] "operator" while the dimension=
 doesn't matter.
<br>
<br>Here's an example:
<br>$x[w][x] =3D $y[y][z];
<br>this will give you a 4dimensional assosiative array.
<br>$x[][] =3D $y[][];
<br>this will give you a 4dimensional non assosiative array.
<br>
<br>So let me come to the point. This get interessting for shortening thing=
s up. For instance:
<br>
<br><span class=3D"default">&lt;?php
<br>        </span><span class=3D"keyword">foreach (</span><span class=3D"d=
efault">$lines </span><span class=3D"keyword">as </span><span class=3D"defa=
ult">$line</span><span class=3D"keyword">){
<br>            if(!</span><span class=3D"default">trim</span><span class=
=3D"keyword">(</span><span class=3D"default">$line</span><span class=3D"key=
word">)) continue;
<br>            </span><span class=3D"default">$tds</span><span class=3D"ke=
yword">[] =3D </span><span class=3D"default">explode</span><span class=3D"k=
eyword">(</span><span class=3D"string">"</span><span class=3D"default">$del=
imiter</span><span class=3D"string">"</span><span class=3D"keyword">,</span=
><span class=3D"default">$line</span><span class=3D"keyword">);
<br>        }
<br></span><span class=3D"default">?&gt;</span></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"125025">  <div class=3D"votes">
    <div id=3D"Vu125025">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D125025&amp;pag=
e=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vot=
eu">up</a>
    </div>
    <div id=3D"Vd125025">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D125025&amp;pag=
e=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes=
-voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V125025" title=3D"45% like this...">
    -3
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#125025" class=
=3D"name">
  <strong class=3D"user"><em>razvan_bc at yahoo dot com</em></strong></a><a=
 class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.p=
hp#125025"> =C2=B6</a><div class=3D"date" title=3D"2020-05-18 06:49"><stron=
g>4 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom125025" style=3D"opacity: 0.55;">
<div class=3D"phpcode"><code><span class=3D"html">an array can execute code=
.<br>i try this on php 7.4 (xampp version)<br><br><span class=3D"default">&=
lt;?php<br><br></span><span class=3D"keyword">[<br>     </span><span class=
=3D"default">$msg</span><span class=3D"keyword">=3D</span><span class=3D"st=
ring">'HI GUYS !'<br>    </span><span class=3D"keyword">,print (</span><spa=
n class=3D"default">$msg</span><span class=3D"keyword">)<br>    ,(function(=
)use (</span><span class=3D"default">$msg</span><span class=3D"keyword">){<=
br>        print </span><span class=3D"string">'here is php'</span><span cl=
ass=3D"keyword">;<br>    })()<br>    ,print </span><span class=3D"string">'=
 I`m just an array ,alive one'<br></span><span class=3D"keyword">];<br><br>=
</span><span class=3D"default">?&gt;</span></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"19774">  <div class=3D"votes">
    <div id=3D"Vu19774">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D19774&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd19774">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D19774&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V19774" title=3D"46% like this...">
    -2
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#19774" class=
=3D"name">
  <strong class=3D"user"><em>jjm152 at hotmail dot com</em></strong></a><a =
class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.ph=
p#19774"> =C2=B6</a><div class=3D"date" title=3D"2002-03-10 06:22"><strong>=
22 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom19774" style=3D"opacity: 0.65;">
<div class=3D"phpcode"><code><span class=3D"html">The easiest way to "list"=
 the values of either a normal 1 list array or a multi dimensional array is=
 to use a foreach() clause.
<br>
<br>Example for 1 dim array:
<br>
<br><span class=3D"default">&lt;?php
<br>   $arr </span><span class=3D"keyword">=3D array( </span><span class=3D=
"default">1</span><span class=3D"keyword">, </span><span class=3D"default">=
2</span><span class=3D"keyword">, </span><span class=3D"default">3</span><s=
pan class=3D"keyword">, </span><span class=3D"default">4</span><span class=
=3D"keyword">, </span><span class=3D"default">5 </span><span class=3D"keywo=
rd">);
<br>   foreach ( </span><span class=3D"default">$arr </span><span class=3D"=
keyword">as </span><span class=3D"default">$val </span><span class=3D"keywo=
rd">) {=20
<br>       echo </span><span class=3D"string">"Value: </span><span class=3D=
"default">$Val</span><span class=3D"string">\n"</span><span class=3D"keywor=
d">;
<br>      }
<br></span><span class=3D"default">?&gt;
<br></span>
<br>For multi dim array:
<br>
<br><span class=3D"default">&lt;?php
<br>     $arr </span><span class=3D"keyword">=3D array( </span><span class=
=3D"default">1 </span><span class=3D"keyword">=3D&gt; </span><span class=3D=
"string">'one'</span><span class=3D"keyword">, </span><span class=3D"defaul=
t">2 </span><span class=3D"keyword">=3D&gt; </span><span class=3D"string">'=
two'</span><span class=3D"keyword">, </span><span class=3D"default">3 </spa=
n><span class=3D"keyword">=3D&gt; </span><span class=3D"string">'three'</sp=
an><span class=3D"keyword">, </span><span class=3D"default">4 </span><span =
class=3D"keyword">=3D&gt; </span><span class=3D"string">'four, 5 =3D&gt; '<=
/span><span class=3D"default">five</span><span class=3D"string">');
<br>      foreach ( $arr as $key =3D&gt; $value ) {=20
<br>       echo "Key: $key, Value: $value\n";
<br>      }
<br>?&gt;
<br>
<br>This is quite possibly the easiest way i'</span><span class=3D"default"=
>ve found to iterate through an </span><span class=3D"keyword">array.</span=
></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"8740">  <div class=3D"votes">
    <div id=3D"Vu8740">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D8740&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd8740">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D8740&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V8740" title=3D"44% like this...">
    -4
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#8740" class=
=3D"name">
  <strong class=3D"user"><em>rubein at earthlink dot net</em></strong></a><=
a class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.=
php#8740"> =C2=B6</a><div class=3D"date" title=3D"2000-09-26 11:07"><strong=
>23 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom8740" style=3D"opacity: 0.45;">
<div class=3D"phpcode"><code><span class=3D"html">Multidimensional arrays a=
re actually single-dimensional arrays nested inside other single-dimensiona=
l arrays.
<br>
<br>$array[0] refers to element 0 of $array
<br>$array[0][2] refers to element 2 of element 0 of $array.
<br>
<br>If an array was initialized like this:
<br>
<br>$array[0] =3D "foo";
<br>$array[1][0] =3D "bar";
<br>$array[1][1] =3D "baz";
<br>$array[1][2] =3D "bam";
<br>
<br>then:
<br>is_array($array) =3D TRUE
<br>is_array($array[0]) =3D FALSE
<br>is_array($array[1]) =3D TRUE
<br>count($array) =3D 2 (elements 0 and 1)
<br>count($array[1] =3D 3 (elements 0 thru 2)
<br>
<br>This can be really useful if you want to return a list of arrays that w=
ere stored in a file or something:
<br>
<br>$array[0] =3D unserialize($somedata);
<br>$array[1] =3D unserialize($someotherdata);
<br>
<br>if $somedata["foo"] =3D 42 before it was serialized previously, you'd n=
ow have this:
<br>$array[0]["foo"] =3D 42</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"60451">  <div class=3D"votes">
    <div id=3D"Vu60451">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D60451&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd60451">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D60451&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V60451" title=3D"42% like this...">
    -4
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#60451" class=
=3D"name">
  <strong class=3D"user"><em>php</em></strong></a><a class=3D"genanchor" hr=
ef=3D"https://www.php.net/manual/en/function.array.php#60451"> =C2=B6</a><d=
iv class=3D"date" title=3D"2006-01-07 03:30"><strong>18 years ago</strong><=
/div>
  <div class=3D"text" id=3D"Hcom60451" style=3D"opacity: 0.45;">
<div class=3D"phpcode"><code><span class=3D"html">This function converts ch=
unks of a string in an array:<br><br>function array_str($str, $len) {<br>  =
$newstr =3D '';<br>  for($i =3D 0; $i &lt; strlen($str); $i++) {<br>    $ne=
wstr .=3D substr($str, $i, $len);<br>  }<br>  return $newstr;<br>}<br><br>u=
se it as:<br><br>$str =3D "abcdefghilmn";<br>echo "&lt;table width=3D\"100%=
\"&gt;\n";<br>foreach(array_str($str, 4) as $chunk) {<br>  echo "&lt;tr&gt;=
&lt;td&gt;".$chunk."&lt;/td&gt;&lt;/tr&gt;\n";<br>}<br>echo "&lt;/table&gt;=
";<br><br>this prints:<br><br>------<br>abcd<br>------<br>efgh<br>------<br=
>ilmn<br>------<br><br>It don't use regular expressions. Please add this fu=
nction to php :)</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"117137">  <div class=3D"votes">
    <div id=3D"Vu117137">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D117137&amp;pag=
e=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vot=
eu">up</a>
    </div>
    <div id=3D"Vd117137">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D117137&amp;pag=
e=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes=
-voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V117137" title=3D"41% like this...">
    -6
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#117137" class=
=3D"name">
  <strong class=3D"user"><em>majkel</em></strong></a><a class=3D"genanchor"=
 href=3D"https://www.php.net/manual/en/function.array.php#117137"> =C2=B6</=
a><div class=3D"date" title=3D"2015-04-20 09:13"><strong>9 years ago</stron=
g></div>
  <div class=3D"text" id=3D"Hcom117137" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">During initialization php=
 parses every value as expression. One can declare variables, do calculatio=
ns, or even manipulate "current" array<br><br><span class=3D"default">&lt;?=
php<br><br>$arr</span><span class=3D"keyword">[</span><span class=3D"string=
">'A'</span><span class=3D"keyword">] =3D [<br>    &amp;</span><span class=
=3D"default">$arr</span><span class=3D"keyword">, </span><span class=3D"com=
ment">// circular reference<br>    </span><span class=3D"string">'key' </sp=
an><span class=3D"keyword">=3D&gt; </span><span class=3D"string">'val'</spa=
n><span class=3D"keyword">,<br>    </span><span class=3D"default">$arr</spa=
n><span class=3D"keyword">[</span><span class=3D"string">'B'</span><span cl=
ass=3D"keyword">] =3D [ </span><span class=3D"comment">// declare array, in=
sert key and then value<br>        </span><span class=3D"string">'a' </span=
><span class=3D"keyword">=3D&gt; </span><span class=3D"string">'b'</span><s=
pan class=3D"keyword">,<br>    ],<br>    </span><span class=3D"default">ucf=
irst</span><span class=3D"keyword">(</span><span class=3D"default">strtolow=
er</span><span class=3D"keyword">(</span><span class=3D"string">'SOME TEXT'=
</span><span class=3D"keyword">)), <br>    </span><span class=3D"default">t=
rue </span><span class=3D"keyword">? </span><span class=3D"string">'TRUE' <=
/span><span class=3D"keyword">: </span><span class=3D"string">'FALSE'</span=
><span class=3D"keyword">, </span><span class=3D"comment">// evaluate expre=
ssion<br>    </span><span class=3D"default">$x  </span><span class=3D"keywo=
rd">=3D </span><span class=3D"default">3</span><span class=3D"keyword">, </=
span><span class=3D"comment">// declare variable<br>    </span><span class=
=3D"default">$x </span><span class=3D"keyword">*=3D </span><span class=3D"d=
efault">3</span><span class=3D"keyword">, </span><span class=3D"comment">//=
 perform calculations<br></span><span class=3D"keyword">];<br><br></span><s=
pan class=3D"default">var_dump</span><span class=3D"keyword">(</span><span =
class=3D"default">$arr</span><span class=3D"keyword">);<br><br></span><span=
 class=3D"comment">// Output<br>/*<br>array(2) {<br>  'B' =3D&gt; array(1) =
{<br>    'a' =3D&gt; string(1) "b"<br>  }<br>  'A' =3D&gt; array(7) {<br>  =
  [0] =3D&gt; array(2) {<br>      'B' =3D&gt; array(1) {<br>        ...<br>=
      }<br>      'A' =3D&gt; &amp;array<br>    }<br>    'key' =3D&gt; strin=
g(3) "val"<br>    [1] =3D&gt; array(1) {<br>      'a' =3D&gt; string(1) "b"=
<br>    }<br>    [2] =3D&gt; string(9) "Some text"<br>    [3] =3D&gt; strin=
g(4) "TRUE"<br>    [4] =3D&gt; int(3)<br>    [5] =3D&gt; int(9)<br>  }<br>}=
<br>*/<br></span><span class=3D"default">?&gt;</span></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"61422">  <div class=3D"votes">
    <div id=3D"Vu61422">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D61422&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd61422">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D61422&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V61422" title=3D"42% like this...">
    -4
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#61422" class=
=3D"name">
  <strong class=3D"user"><em>bill at carneyco dot com</em></strong></a><a c=
lass=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.php=
#61422"> =C2=B6</a><div class=3D"date" title=3D"2006-02-02 08:42"><strong>1=
8 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom61422" style=3D"opacity: 0.45;">
<div class=3D"phpcode"><code><span class=3D"html">I wanted to be able to co=
ntrol the flow of data in a loop instead of just building tables with it or=
 having to write 500 select statements for single line items. This is what =
I came up with thanks to the help of my PHP brother in FL. Hope someone els=
e gets some use out it. <br>&lt;?<br><br>//set array variable <br>$results =
=3D array();<br><br>//talk to the db<br>$query =3D "SELECT * FROM yourtable=
";<br>$result =3D mysql_query($query) or die(mysql_error());<br><br>//count=
 the rows and fields<br>$totalRows =3D mysql_num_rows($result);<br>$totalFi=
elds =3D mysql_num_fields($result);<br><br>//start the loop<br>for ( $i =3D=
 0; $i &lt; $totalRows; ++$i ) {<br><br>//make it 2 dim in case you change =
your order<br>  $results[$i] =3D mysql_fetch_array($result); <br><br>//call=
 data at will controlling the loop with the array<br>echo $results[your_row=
_id]['your_field_name']; }<br><br>//print the entire array to see what live=
s where<br>print_r($results);  ?&gt;</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"31957">  <div class=3D"votes">
    <div id=3D"Vu31957">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D31957&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd31957">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D31957&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V31957" title=3D"42% like this...">
    -3
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#31957" class=
=3D"name"><strong class=3D"user"><em>Anonymous</em></strong></a><a class=3D=
"genanchor" href=3D"https://www.php.net/manual/en/function.array.php#31957"=
> =C2=B6</a><div class=3D"date" title=3D"2003-05-10 03:53"><strong>21 years=
 ago</strong></div>
  <div class=3D"text" id=3D"Hcom31957" style=3D"opacity: 0.55;">
<div class=3D"phpcode"><code><span class=3D"html">Similarly to a comment by=
 stlawson at sbcglobal dot net on this page:
<br><a href=3D"http://www.php.net/basic-syntax.instruction-separation" rel=
=3D"nofollow" target=3D"_blank">http://www.php.net/basic-syntax.instruction=
-separation</a>
<br>
<br>It is usually advisable to define your arrays like this:
<br>$array =3D array(
<br>     'foo',
<br>     'bar',
<br>);
<br>
<br>Note the comma after the last element - this is perfectly legal. Moreov=
er,
<br>it's best to add that last comma so that when you add new elements to t=
he
<br>array, you don't have to worry about adding a comma after what used to =
be
<br>the last element.
<br>
<br><span class=3D"default">&lt;?php
<br>$array </span><span class=3D"keyword">=3D array(
<br>     </span><span class=3D"string">'foo'</span><span class=3D"keyword">=
,
<br>     </span><span class=3D"string">'bar'</span><span class=3D"keyword">=
,
<br>     </span><span class=3D"string">'baz'</span><span class=3D"keyword">=
,
<br>);
<br></span><span class=3D"default">?&gt;</span></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"50097">  <div class=3D"votes">
    <div id=3D"Vu50097">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D50097&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd50097">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D50097&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V50097" title=3D"41% like this...">
    -5
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#50097" class=
=3D"name">
  <strong class=3D"user"><em>rdude at fuzzelish dot com</em></strong></a><a=
 class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.p=
hp#50097"> =C2=B6</a><div class=3D"date" title=3D"2005-02-17 01:35"><strong=
>19 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom50097" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">If you are creating an ar=
ray with a large number of static items, you will find serious performance =
differences between using the array() function and the $array[] construct. =
For example:<br>&lt;?<br> // Slower method<br> $my_array =3D array(1, 2, 3,=
 ? 500);<br> <br> // Faster method<br> $my_array[] =3D 1;<br> $my_array[] =
=3D 2;<br> $my_array[] =3D 3;<br> ?<br> $my_array[] =3D 500;<br>?&gt;</span=
></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"20898">  <div class=3D"votes">
    <div id=3D"Vu20898">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D20898&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd20898">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D20898&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V20898" title=3D"40% like this...">
    -4
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#20898" class=
=3D"name">
  <strong class=3D"user"><em>jay at ezlasvegas dot net</em></strong></a><a =
class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.ph=
p#20898"> =C2=B6</a><div class=3D"date" title=3D"2002-04-20 04:21"><strong>=
22 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom20898" style=3D"opacity: 0.45;">
<div class=3D"phpcode"><code><span class=3D"html">If you want to create an =
array of a set size and you have PHP4, use<br>array_pad(array(), $SIZE, $IN=
ITIAL_VALUE); This can be handy if you wish<br>to initialize a bunch of var=
iables at once: <br><br>list($Var1, $Var2, etc) =3D array_pad(array(), $NUM=
BER_OF_VARS,<br>$INITIAL_VALUE);<br><br>Jay Walker<br>Las Vegas Hotel Assoc=
iate<br><a href=3D"http://www.ezlasvegas.net/" rel=3D"nofollow" target=3D"_=
blank">http://www.ezlasvegas.net</a></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"68682">  <div class=3D"votes">
    <div id=3D"Vu68682">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D68682&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd68682">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D68682&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V68682" title=3D"40% like this...">
    -6
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#68682" class=
=3D"name">
  <strong class=3D"user"><em>webmaster at phpemailformprocessor dot com</em=
></strong></a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/=
function.array.php#68682"> =C2=B6</a><div class=3D"date" title=3D"2006-08-0=
6 09:48"><strong>17 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom68682" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">When using an array to cr=
eate a list of keys and values for a select box generator which will consis=
t of states I found using "NULL" as an index and ""(empty value) as a value=
 to be useful:<br><br><span class=3D"default">&lt;?php<br><br>$states </spa=
n><span class=3D"keyword">=3D array(<br>    </span><span class=3D"default">=
0    </span><span class=3D"keyword">=3D&gt; </span><span class=3D"string">'=
Select a State'</span><span class=3D"keyword">,<br>    </span><span class=
=3D"default">NULL </span><span class=3D"keyword">=3D&gt; </span><span class=
=3D"string">''</span><span class=3D"keyword">,<br>    </span><span class=3D=
"default">1    </span><span class=3D"keyword">=3D&gt; </span><span class=3D=
"string">'AL - Alabama'</span><span class=3D"keyword">,<br>    </span><span=
 class=3D"default">2    </span><span class=3D"keyword">=3D&gt; </span><span=
 class=3D"string">'AK - Alaska'</span><span class=3D"keyword">,<br>    </sp=
an><span class=3D"comment"># And so on ...<br></span><span class=3D"keyword=
">);<br><br></span><span class=3D"default">$select </span><span class=3D"ke=
yword">=3D </span><span class=3D"string">'&lt;select name=3D"state" id=3D"s=
tate" size=3D"1"&gt;'</span><span class=3D"keyword">.</span><span class=3D"=
string">"\r\n"</span><span class=3D"keyword">;<br><br>foreach(</span><span =
class=3D"default">$states </span><span class=3D"keyword">as </span><span cl=
ass=3D"default">$key </span><span class=3D"keyword">=3D&gt; </span><span cl=
ass=3D"default">$value</span><span class=3D"keyword">){<br>    </span><span=
 class=3D"default">$select </span><span class=3D"keyword">.=3D </span><span=
 class=3D"string">"\t"</span><span class=3D"keyword">.</span><span class=3D=
"string">'&lt;option value=3D"'</span><span class=3D"keyword">.</span><span=
 class=3D"default">$key</span><span class=3D"keyword">.</span><span class=
=3D"string">'"&gt;' </span><span class=3D"keyword">. </span><span class=3D"=
default">$value</span><span class=3D"keyword">.</span><span class=3D"string=
">'&lt;/option&gt;'</span><span class=3D"keyword">.</span><span class=3D"st=
ring">"\r\n"</span><span class=3D"keyword">;<br>}<br><br></span><span class=
=3D"default">$select </span><span class=3D"keyword">.=3D </span><span class=
=3D"string">'&lt;/select&gt;'</span><span class=3D"keyword">;<br><br>echo <=
/span><span class=3D"default">$select</span><span class=3D"keyword">;<br><b=
r></span><span class=3D"default">?&gt;<br></span><br> This will print out:<=
br><br>&lt;select name=3D"state" id=3D"state" size=3D"1"&gt;<br>    &lt;opt=
ion value=3D"0"&gt;Select a State&lt;/option&gt;<br>    &lt;option value=3D=
""&gt;&lt;/option&gt;<br>    &lt;option value=3D"1"&gt;AL - Alabama&lt;/opt=
ion&gt;<br>    &lt;option value=3D"2"&gt;AK - Alaska&lt;/option&gt;<br>    =
# And so on ...<br><br>&lt;/select&gt;<br><br>Now a user has a blank value =
to select if they later decide to not provide their address in the form. Th=
e first two options will return TRUE when checked against the php function =
- EMPTY() after the form is submitted when processing the form</span></code=
></div>
  </div>
 </div>
  <div class=3D"note" id=3D"26470">  <div class=3D"votes">
    <div id=3D"Vu26470">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D26470&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd26470">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D26470&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V26470" title=3D"41% like this...">
    -7
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#26470" class=
=3D"name">
  <strong class=3D"user"><em>MadLogic at Paradise dot net dot nz</em></stro=
ng></a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/functio=
n.array.php#26470"> =C2=B6</a><div class=3D"date" title=3D"2002-10-31 02:39=
"><strong>21 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom26470" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">Heres a simple yet intell=
igent way of setting an array, grabbing the values from the array using a l=
oop.
<br>
<br><span class=3D"default">&lt;?php
<br>$ary </span><span class=3D"keyword">=3D array(</span><span class=3D"str=
ing">"1"</span><span class=3D"keyword">=3D&gt;</span><span class=3D"string"=
>'One'</span><span class=3D"keyword">,</span><span class=3D"string">'Two'</=
span><span class=3D"keyword">,</span><span class=3D"string">"3"</span><span=
 class=3D"keyword">=3D&gt;</span><span class=3D"string">'Three'</span><span=
 class=3D"keyword">);
<br></span><span class=3D"default">$a </span><span class=3D"keyword">=3D </=
span><span class=3D"string">'0'</span><span class=3D"keyword">; </span><spa=
n class=3D"default">$b </span><span class=3D"keyword">=3D </span><span clas=
s=3D"default">count</span><span class=3D"keyword">(</span><span class=3D"de=
fault">$ary</span><span class=3D"keyword">);
<br>while (</span><span class=3D"default">$a </span><span class=3D"keyword"=
>&lt;=3D </span><span class=3D"default">$b</span><span class=3D"keyword">) =
{
<br>  </span><span class=3D"default">$pr </span><span class=3D"keyword">=3D=
 </span><span class=3D"default">$ary</span><span class=3D"keyword">[</span>=
<span class=3D"default">$a</span><span class=3D"keyword">];
<br>  print </span><span class=3D"string">"</span><span class=3D"default">$=
pr</span><span class=3D"string">&lt;br&gt;"</span><span class=3D"keyword">;
<br>  </span><span class=3D"default">$a</span><span class=3D"keyword">++;
<br>}
<br></span><span class=3D"default">?&gt;</span></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"50115">  <div class=3D"votes">
    <div id=3D"Vu50115">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D50115&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd50115">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D50115&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V50115" title=3D"41% like this...">
    -8
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#50115" class=
=3D"name">
  <strong class=3D"user"><em>mortoray at ecircle-ag dot com</em></strong></=
a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.arr=
ay.php#50115"> =C2=B6</a><div class=3D"date" title=3D"2005-02-18 05:35"><st=
rong>19 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom50115" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">Be careful if you need to=
 use mixed types with a key of 0 in an array, as several distinct forms end=
 up being the same key:<br><br>$a =3D array();<br>$a[null] =3D 1;<br>$a[0] =
=3D 2;<br>$a['0'] =3D 3;<br>$a["0"] =3D 4;<br>$a[false] =3D 5;<br>$a[0.0] =
=3D 6;<br>$a[''] =3D 7;<br>$a[] =3D 8;<br><br>print_r( $a );<br><br>This wi=
ll print out only 3 values: 6, 7, 8.</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"107817">  <div class=3D"votes">
    <div id=3D"Vu107817">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D107817&amp;pag=
e=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vot=
eu">up</a>
    </div>
    <div id=3D"Vd107817">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D107817&amp;pag=
e=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes=
-voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V107817" title=3D"38% like this...">
    -8
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#107817" class=
=3D"name">
  <strong class=3D"user"><em>qeremy</em></strong></a><a class=3D"genanchor"=
 href=3D"https://www.php.net/manual/en/function.array.php#107817"> =C2=B6</=
a><div class=3D"date" title=3D"2012-03-07 02:50"><strong>12 years ago</stro=
ng></div>
  <div class=3D"text" id=3D"Hcom107817" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">Some tricky functions;<br=
><br><span class=3D"default">&lt;?php<br></span><span class=3D"keyword">fun=
ction </span><span class=3D"default">is_array_assoc</span><span class=3D"ke=
yword">(</span><span class=3D"default">$arr</span><span class=3D"keyword">)=
 {<br>    if (</span><span class=3D"default">is_array</span><span class=3D"=
keyword">(</span><span class=3D"default">$arr</span><span class=3D"keyword"=
>)) {<br>        foreach (</span><span class=3D"default">$arr </span><span =
class=3D"keyword">as </span><span class=3D"default">$k </span><span class=
=3D"keyword">=3D&gt; </span><span class=3D"default">$v</span><span class=3D=
"keyword">) {<br>            if (</span><span class=3D"default">is_string</=
span><span class=3D"keyword">(</span><span class=3D"default">$k</span><span=
 class=3D"keyword">) || (</span><span class=3D"default">is_int</span><span =
class=3D"keyword">(</span><span class=3D"default">$k</span><span class=3D"k=
eyword">) &amp;&amp; </span><span class=3D"default">$k </span><span class=
=3D"keyword">&lt; </span><span class=3D"default">0</span><span class=3D"key=
word">)) {<br>                return </span><span class=3D"default">1</span=
><span class=3D"keyword">;<br>            }<br>        }<br>        return =
</span><span class=3D"default">0</span><span class=3D"keyword">;<br>    }<b=
r>    return -</span><span class=3D"default">1</span><span class=3D"keyword=
">;<br>}<br><br>function </span><span class=3D"default">is_array_multi</spa=
n><span class=3D"keyword">(</span><span class=3D"default">$arr</span><span =
class=3D"keyword">) {<br>    return </span><span class=3D"default">is_array=
</span><span class=3D"keyword">(</span><span class=3D"default">$arr</span><=
span class=3D"keyword">)<br>        ? (</span><span class=3D"default">count=
</span><span class=3D"keyword">(</span><span class=3D"default">$arr</span><=
span class=3D"keyword">) !=3D </span><span class=3D"default">count</span><s=
pan class=3D"keyword">(</span><span class=3D"default">$arr</span><span clas=
s=3D"keyword">, </span><span class=3D"default">COUNT_RECURSIVE</span><span =
class=3D"keyword">) ? </span><span class=3D"default">1 </span><span class=
=3D"keyword">: </span><span class=3D"default">0</span><span class=3D"keywor=
d">)<br>        : -</span><span class=3D"default">1</span><span class=3D"ke=
yword">;<br>}<br><br></span><span class=3D"default">$arr</span><span class=
=3D"keyword">[] =3D array(</span><span class=3D"string">"foo"</span><span c=
lass=3D"keyword">, </span><span class=3D"string">"bar"</span><span class=3D=
"keyword">, </span><span class=3D"default">1.09</span><span class=3D"keywor=
d">);<br></span><span class=3D"default">$arr</span><span class=3D"keyword">=
[] =3D array(</span><span class=3D"string">"red"</span><span class=3D"keywo=
rd">, </span><span class=3D"string">"yellow"</span><span class=3D"keyword">=
, </span><span class=3D"default">1 </span><span class=3D"keyword">=3D&gt; <=
/span><span class=3D"string">"foo"</span><span class=3D"keyword">);<br></sp=
an><span class=3D"default">$arr</span><span class=3D"keyword">[] =3D array(=
</span><span class=3D"string">"red"</span><span class=3D"keyword">, </span>=
<span class=3D"string">"yellow"</span><span class=3D"keyword">, -</span><sp=
an class=3D"default">1 </span><span class=3D"keyword">=3D&gt; </span><span =
class=3D"string">"foo"</span><span class=3D"keyword">);<br></span><span cla=
ss=3D"default">$arr</span><span class=3D"keyword">[] =3D array(</span><span=
 class=3D"string">"x" </span><span class=3D"keyword">=3D&gt; array(</span><=
span class=3D"string">"red"</span><span class=3D"keyword">, </span><span cl=
ass=3D"string">"yellow"</span><span class=3D"keyword">), </span><span class=
=3D"string">"y" </span><span class=3D"keyword">=3D&gt; array(</span><span c=
lass=3D"string">"one"</span><span class=3D"keyword">, </span><span class=3D=
"string">"two"</span><span class=3D"keyword">));<br></span><span class=3D"d=
efault">$arr</span><span class=3D"keyword">[] =3D array();<br></span><span =
class=3D"default">$arr</span><span class=3D"keyword">[] =3D </span><span cl=
ass=3D"string">"s"</span><span class=3D"keyword">;<br><br>foreach (</span><=
span class=3D"default">$arr </span><span class=3D"keyword">as </span><span =
class=3D"default">$a</span><span class=3D"keyword">) {<br>    echo </span><=
span class=3D"default">is_array_assoc</span><span class=3D"keyword">(</span=
><span class=3D"default">$a</span><span class=3D"keyword">) .</span><span c=
lass=3D"string">"\n"</span><span class=3D"keyword">;<br>}<br>echo </span><s=
pan class=3D"string">"\n"</span><span class=3D"keyword">;<br>foreach (</spa=
n><span class=3D"default">$arr </span><span class=3D"keyword">as </span><sp=
an class=3D"default">$a</span><span class=3D"keyword">) {<br>    echo </spa=
n><span class=3D"default">is_array_multi</span><span class=3D"keyword">(</s=
pan><span class=3D"default">$a</span><span class=3D"keyword">) .</span><spa=
n class=3D"string">"\n"</span><span class=3D"keyword">;<br>}<br></span><spa=
n class=3D"default">?&gt;<br></span><br>0<br>0<br>1<br>1<br>0<br>-1<br><br>=
0<br>0<br>0<br>1<br>0<br>-1<br><br><span class=3D"default">&lt;?php<br></sp=
an><span class=3D"keyword">function </span><span class=3D"default">array_co=
unt</span><span class=3D"keyword">(</span><span class=3D"default">$arr</spa=
n><span class=3D"keyword">) {<br>    </span><span class=3D"default">$r </sp=
an><span class=3D"keyword">=3D </span><span class=3D"default">0</span><span=
 class=3D"keyword">;<br>    foreach (</span><span class=3D"default">$arr </=
span><span class=3D"keyword">as </span><span class=3D"default">$k </span><s=
pan class=3D"keyword">=3D&gt; </span><span class=3D"default">$v</span><span=
 class=3D"keyword">) {<br>        if (</span><span class=3D"default">is_arr=
ay</span><span class=3D"keyword">(</span><span class=3D"default">$v</span><=
span class=3D"keyword">)) {<br>            </span><span class=3D"default">$=
r</span><span class=3D"keyword">++;<br>        }<br>    }<br>    return </s=
pan><span class=3D"default">$r</span><span class=3D"keyword">;<br>}<br><br>=
function </span><span class=3D"default">array_count_all</span><span class=
=3D"keyword">(</span><span class=3D"default">$arr</span><span class=3D"keyw=
ord">, </span><span class=3D"default">$r </span><span class=3D"keyword">=3D=
 </span><span class=3D"default">0</span><span class=3D"keyword">) {<br>    =
foreach (</span><span class=3D"default">$arr </span><span class=3D"keyword"=
>as </span><span class=3D"default">$k </span><span class=3D"keyword">=3D&gt=
; </span><span class=3D"default">$v</span><span class=3D"keyword">) {<br>  =
      if (</span><span class=3D"default">is_array</span><span class=3D"keyw=
ord">(</span><span class=3D"default">$v</span><span class=3D"keyword">)) {<=
br>            </span><span class=3D"default">$r </span><span class=3D"keyw=
ord">=3D </span><span class=3D"default">array_count_all</span><span class=
=3D"keyword">(</span><span class=3D"default">$v</span><span class=3D"keywor=
d">, </span><span class=3D"default">$r</span><span class=3D"keyword">);<br>=
            </span><span class=3D"default">$r</span><span class=3D"keyword"=
>++;<br>        }<br>    }<br>    return </span><span class=3D"default">$r<=
/span><span class=3D"keyword">;<br>}<br><br></span><span class=3D"default">=
$a </span><span class=3D"keyword">=3D array(</span><span class=3D"string">"=
foo"</span><span class=3D"keyword">, </span><span class=3D"string">"bar"</s=
pan><span class=3D"keyword">, </span><span class=3D"default">1.09</span><sp=
an class=3D"keyword">, array(</span><span class=3D"default">1</span><span c=
lass=3D"keyword">,</span><span class=3D"default">2</span><span class=3D"key=
word">,</span><span class=3D"default">3</span><span class=3D"keyword">), ar=
ray(</span><span class=3D"string">"a" </span><span class=3D"keyword">=3D&gt=
; </span><span class=3D"string">"aaa"</span><span class=3D"keyword">));<br>=
echo </span><span class=3D"default">array_count</span><span class=3D"keywor=
d">(</span><span class=3D"default">$a</span><span class=3D"keyword">); </sp=
an><span class=3D"comment">// 2<br><br></span><span class=3D"default">$a </=
span><span class=3D"keyword">=3D array(<br>    </span><span class=3D"string=
">"foo"</span><span class=3D"keyword">, </span><span class=3D"string">"bar"=
</span><span class=3D"keyword">, </span><span class=3D"default">1.09</span>=
<span class=3D"keyword">, <br>    </span><span class=3D"string">"x" </span>=
<span class=3D"keyword">=3D&gt; array(</span><span class=3D"default">1</spa=
n><span class=3D"keyword">,</span><span class=3D"default">2</span><span cla=
ss=3D"keyword">,</span><span class=3D"default">3</span><span class=3D"keywo=
rd">), <br>    array(</span><span class=3D"string">"a" </span><span class=
=3D"keyword">=3D&gt; </span><span class=3D"string">"aaa"</span><span class=
=3D"keyword">, </span><span class=3D"string">"b" </span><span class=3D"keyw=
ord">=3D&gt; array(), </span><span class=3D"string">"c" </span><span class=
=3D"keyword">=3D&gt; array(</span><span class=3D"string">""</span><span cla=
ss=3D"keyword">), </span><span class=3D"string">"d" </span><span class=3D"k=
eyword">=3D&gt; array(</span><span class=3D"string">""</span><span class=3D=
"keyword">)), <br>    </span><span class=3D"string">"e" </span><span class=
=3D"keyword">=3D&gt; array(</span><span class=3D"string">""</span><span cla=
ss=3D"keyword">), <br>    </span><span class=3D"string">"z" </span><span cl=
ass=3D"keyword">=3D&gt; array(</span><span class=3D"string">""</span><span =
class=3D"keyword">), <br>    </span><span class=3D"string">"q" </span><span=
 class=3D"keyword">=3D&gt; array(</span><span class=3D"string">""</span><sp=
an class=3D"keyword">, array()),<br>    </span><span class=3D"string">"w" <=
/span><span class=3D"keyword">=3D&gt; array(</span><span class=3D"string">"=
lorem"</span><span class=3D"keyword">, </span><span class=3D"default">1 </s=
pan><span class=3D"keyword">=3D&gt; </span><span class=3D"string">"impsum"<=
/span><span class=3D"keyword">, </span><span class=3D"default">18</span><sp=
an class=3D"keyword">, </span><span class=3D"string">"dolor"</span><span cl=
ass=3D"keyword">, array(</span><span class=3D"string">"last as 11th array"<=
/span><span class=3D"keyword">))<br>);<br>echo </span><span class=3D"defaul=
t">array_count_all</span><span class=3D"keyword">(</span><span class=3D"def=
ault">$a</span><span class=3D"keyword">); </span><span class=3D"comment">//=
 11<br></span><span class=3D"default">?&gt;</span></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"52885">  <div class=3D"votes">
    <div id=3D"Vu52885">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D52885&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd52885">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D52885&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V52885" title=3D"40% like this...">
    -11
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#52885" class=
=3D"name">
  <strong class=3D"user"><em>aissatya at yahoo dot com</em></strong></a><a =
class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.ph=
p#52885"> =C2=B6</a><div class=3D"date" title=3D"2005-05-16 01:48"><strong>=
19 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom52885" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html"><span class=3D"default">&=
lt;?php<br><br>$foo </span><span class=3D"keyword">=3D array(</span><span c=
lass=3D"string">'bar' </span><span class=3D"keyword">=3D&gt; </span><span c=
lass=3D"string">'baz'</span><span class=3D"keyword">);<br>echo </span><span=
 class=3D"string">"Hello </span><span class=3D"keyword">{</span><span class=
=3D"default">$foo</span><span class=3D"keyword">[</span><span class=3D"stri=
ng">'bar'</span><span class=3D"keyword">]}</span><span class=3D"string">!"<=
/span><span class=3D"keyword">; </span><span class=3D"comment">// Hello baz=
!<br><br></span><span class=3D"default">?&gt;</span> <br><span class=3D"def=
ault">&lt;?php<br>$firstquarter </span><span class=3D"keyword">=3D array(</=
span><span class=3D"default">1 </span><span class=3D"keyword">=3D&gt; </spa=
n><span class=3D"string">'January'</span><span class=3D"keyword">, </span><=
span class=3D"string">'February'</span><span class=3D"keyword">, </span><sp=
an class=3D"string">'March'</span><span class=3D"keyword">);<br></span><spa=
n class=3D"default">print_r</span><span class=3D"keyword">(</span><span cla=
ss=3D"default">$firstquarter</span><span class=3D"keyword">);<br></span><sp=
an class=3D"default">?&gt;</span> <br><span class=3D"default">&lt;?php<br>$=
fruits </span><span class=3D"keyword">=3D array (<br>   </span><span class=
=3D"string">"fruits"  </span><span class=3D"keyword">=3D&gt; array(</span><=
span class=3D"string">"a" </span><span class=3D"keyword">=3D&gt; </span><sp=
an class=3D"string">"orange"</span><span class=3D"keyword">, </span><span c=
lass=3D"string">"b" </span><span class=3D"keyword">=3D&gt; </span><span cla=
ss=3D"string">"banana"</span><span class=3D"keyword">, </span><span class=
=3D"string">"c" </span><span class=3D"keyword">=3D&gt; </span><span class=
=3D"string">"apple"</span><span class=3D"keyword">),<br>   </span><span cla=
ss=3D"string">"numbers" </span><span class=3D"keyword">=3D&gt; array(</span=
><span class=3D"default">1</span><span class=3D"keyword">, </span><span cla=
ss=3D"default">2</span><span class=3D"keyword">, </span><span class=3D"defa=
ult">3</span><span class=3D"keyword">, </span><span class=3D"default">4</sp=
an><span class=3D"keyword">, </span><span class=3D"default">5</span><span c=
lass=3D"keyword">, </span><span class=3D"default">6</span><span class=3D"ke=
yword">),<br>   </span><span class=3D"string">"holes"  </span><span class=
=3D"keyword">=3D&gt; array(</span><span class=3D"string">"first"</span><spa=
n class=3D"keyword">, </span><span class=3D"default">5 </span><span class=
=3D"keyword">=3D&gt; </span><span class=3D"string">"second"</span><span cla=
ss=3D"keyword">, </span><span class=3D"string">"third"</span><span class=3D=
"keyword">)<br>);<br></span><span class=3D"default">?&gt;</span></span></co=
de></div>
  </div>
 </div>
  <div class=3D"note" id=3D"96520">  <div class=3D"votes">
    <div id=3D"Vu96520">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D96520&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd96520">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D96520&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V96520" title=3D"38% like this...">
    -6
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#96520" class=
=3D"name">
  <strong class=3D"user"><em>eugene at ultimatecms dot co dot za</em></stro=
ng></a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/functio=
n.array.php#96520"> =C2=B6</a><div class=3D"date" title=3D"2010-03-03 06:29=
"><strong>14 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom96520" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">This is a useful way to g=
et foreign key variables from a specific sql table.<br>This function can be=
 used to include all relevant data from all relating tables:<br><br><span c=
lass=3D"default">&lt;?php<br></span><span class=3D"keyword">function </span=
><span class=3D"default">get_string_between</span><span class=3D"keyword">(=
</span><span class=3D"default">$string</span><span class=3D"keyword">, </sp=
an><span class=3D"default">$start</span><span class=3D"keyword">, </span><s=
pan class=3D"default">$end</span><span class=3D"keyword">){<br>         </s=
pan><span class=3D"default">$string </span><span class=3D"keyword">=3D </sp=
an><span class=3D"string">" "</span><span class=3D"keyword">.</span><span c=
lass=3D"default">$string</span><span class=3D"keyword">; <br>         </spa=
n><span class=3D"default">$ini </span><span class=3D"keyword">=3D </span><s=
pan class=3D"default">strpos</span><span class=3D"keyword">(</span><span cl=
ass=3D"default">$string</span><span class=3D"keyword">,</span><span class=
=3D"default">$start</span><span class=3D"keyword">);<br>         if(</span>=
<span class=3D"default">$ini </span><span class=3D"keyword">=3D=3D </span><=
span class=3D"default">0</span><span class=3D"keyword">)  <br>             =
   return </span><span class=3D"default">$tbl</span><span class=3D"keyword"=
>; <br>         </span><span class=3D"default">$ini </span><span class=3D"k=
eyword">+=3D </span><span class=3D"default">strlen</span><span class=3D"key=
word">(</span><span class=3D"default">$start</span><span class=3D"keyword">=
); <br>         </span><span class=3D"default">$len </span><span class=3D"k=
eyword">=3D </span><span class=3D"default">strpos</span><span class=3D"keyw=
ord">(</span><span class=3D"default">$string</span><span class=3D"keyword">=
,</span><span class=3D"default">$end</span><span class=3D"keyword">,</span>=
<span class=3D"default">$ini</span><span class=3D"keyword">) - </span><span=
 class=3D"default">$ini</span><span class=3D"keyword">; <br>         return=
 </span><span class=3D"default">substr</span><span class=3D"keyword">(</spa=
n><span class=3D"default">$string</span><span class=3D"keyword">,</span><sp=
an class=3D"default">$ini</span><span class=3D"keyword">,</span><span class=
=3D"default">$len</span><span class=3D"keyword">); <br>} <br><br>function <=
/span><span class=3D"default">get_foreign_keys</span><span class=3D"keyword=
">(</span><span class=3D"default">$tbl</span><span class=3D"keyword">) {<br=
>        </span><span class=3D"default">$query </span><span class=3D"keywor=
d">=3D </span><span class=3D"default">query_getrow</span><span class=3D"key=
word">(</span><span class=3D"string">"SHOW CREATE TABLE "</span><span class=
=3D"keyword">.</span><span class=3D"default">mysql_escape_string</span><spa=
n class=3D"keyword">(</span><span class=3D"default">$tbl</span><span class=
=3D"keyword">));<br><br>        </span><span class=3D"default">$dat </span>=
<span class=3D"keyword">=3D </span><span class=3D"default">explode</span><s=
pan class=3D"keyword">(</span><span class=3D"string">'CONSTRAINT'</span><sp=
an class=3D"keyword">,</span><span class=3D"default">$query</span><span cla=
ss=3D"keyword">[</span><span class=3D"default">1</span><span class=3D"keywo=
rd">]);<br>        foreach(</span><span class=3D"default">$dat </span><span=
 class=3D"keyword">as </span><span class=3D"default">$d </span><span class=
=3D"keyword">=3D&gt; </span><span class=3D"default">$a</span><span class=3D=
"keyword">) {<br>                if(</span><span class=3D"default">strpos</=
span><span class=3D"keyword">(</span><span class=3D"default">$a</span><span=
 class=3D"keyword">,</span><span class=3D"string">"FOREIGN KEY"</span><span=
 class=3D"keyword">))<br>                </span><span class=3D"default">$da=
ta</span><span class=3D"keyword">[</span><span class=3D"string">'keys'</spa=
n><span class=3D"keyword">][] =3D array(</span><span class=3D"default">$tbl=
</span><span class=3D"keyword">,</span><span class=3D"default">get_string_b=
etween</span><span class=3D"keyword">(</span><span class=3D"default">$a</sp=
an><span class=3D"keyword">,</span><span class=3D"string">"` FOREIGN KEY (`=
"</span><span class=3D"keyword">,</span><span class=3D"string">"`) REFERENC=
ES"</span><span class=3D"keyword">));<br>        }                       <b=
r><br>        foreach(</span><span class=3D"default">$dat </span><span clas=
s=3D"keyword">as </span><span class=3D"default">$d </span><span class=3D"ke=
yword">=3D&gt; </span><span class=3D"default">$a</span><span class=3D"keywo=
rd">) {<br>                if(</span><span class=3D"default">strpos</span><=
span class=3D"keyword">(</span><span class=3D"default">$a</span><span class=
=3D"keyword">,</span><span class=3D"string">"REFERENCE"</span><span class=
=3D"keyword">))<br>                </span><span class=3D"default">$data</sp=
an><span class=3D"keyword">[</span><span class=3D"string">'references'</spa=
n><span class=3D"keyword">][] =3D </span><span class=3D"default">explode</s=
pan><span class=3D"keyword">(</span><span class=3D"string">'` (`'</span><sp=
an class=3D"keyword">,</span><span class=3D"default">get_string_between</sp=
an><span class=3D"keyword">(</span><span class=3D"default">$a</span><span c=
lass=3D"keyword">,</span><span class=3D"string">"REFERENCES `"</span><span =
class=3D"keyword">,</span><span class=3D"string">"`) ON"</span><span class=
=3D"keyword">));<br>        }<br>        return </span><span class=3D"defau=
lt">$data</span><span class=3D"keyword">;<br>}<br><br></span><span class=3D=
"comment">//Example code:<br><br>        </span><span class=3D"default">$da=
ta </span><span class=3D"keyword">=3D </span><span class=3D"default">get_fo=
reign_keys</span><span class=3D"keyword">(</span><span class=3D"string">'ta=
sk_table'</span><span class=3D"keyword">);<br>        echo </span><span cla=
ss=3D"string">'&lt;pre&gt;'</span><span class=3D"keyword">;<br>        </sp=
an><span class=3D"default">print_r</span><span class=3D"keyword">(</span><s=
pan class=3D"default">$data</span><span class=3D"keyword">);<br>        ech=
o </span><span class=3D"string">'&lt;/pre&gt;'</span><span class=3D"keyword=
">;<br><br></span><span class=3D"default">?&gt;<br></span><br>// $query[1] =
outputs:<br><br>CREATE TABLE `task_table` (<br>  `task_id` int(64) NOT NULL=
 auto_increment,<br>  `ticket_id` int(64) NOT NULL,<br>  `task_type` varcha=
r(64) NOT NULL,<br>  `comment` text,<br>  `assigned_to` int(11) default NUL=
L,<br>  `dependant` int(64) default NULL,<br>  `resolved` int(1) default NU=
LL,<br>  PRIMARY KEY  (`task_id`),<br>  KEY `ticket_id` (`ticket_id`,`depen=
dant`),<br>  KEY `assigned_to` (`assigned_to`),<br>  KEY `task_dependant` (=
`dependant`),<br>  CONSTRAINT `task_table_ibfk_1` FOREIGN KEY (`ticket_id`)=
 REFERENCES `tickets_table` (`ticket_id`) ON DELETE CASCADE ON UPDATE CASCA=
DE,<br>  CONSTRAINT `task_table_ibfk_2` FOREIGN KEY (`assigned_to`) REFEREN=
CES `contact_table` (`contact_id`) ON DELETE CASCADE ON UPDATE CASCADE,<br>=
  CONSTRAINT `task_table_ibfk_3` FOREIGN KEY (`dependant`) REFERENCES `task=
_table` (`task_id`) ON DELETE CASCADE ON UPDATE CASCADE<br>) ENGINE=3DInnoD=
B DEFAULT CHARSET=3Dlatin1<br><br>// $data outputs:<br>Array (<br>    [keys=
] =3D&gt; Array<br>        (<br>            [0] =3D&gt; Array<br>          =
      (<br>                    [0] =3D&gt; task_table<br>                  =
  [1] =3D&gt; ticket_id<br>                )<br><br>            [1] =3D&gt;=
 Array<br>                (<br>                    [0] =3D&gt; task_table<b=
r>                    [1] =3D&gt; assigned_to<br>                )<br><br> =
           [2] =3D&gt; Array<br>                (<br>                    [0=
] =3D&gt; task_table<br>                    [1] =3D&gt; dependant<br>      =
          )<br>        )<br><br>    [references] =3D&gt; Array<br>        (=
<br>            [0] =3D&gt; Array<br>                (<br>                 =
   [0] =3D&gt; tickets_table<br>                    [1] =3D&gt; ticket_id<b=
r>                )<br><br>            [1] =3D&gt; Array<br>               =
 (<br>                    [0] =3D&gt; contact_table<br>                    =
[1] =3D&gt; contact_id<br>                )<br><br>            [2] =3D&gt; =
Array<br>                (<br>                    [0] =3D&gt; task_table<br=
>                    [1] =3D&gt; task_id<br>                )<br>        )<=
br>)</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"119189">  <div class=3D"votes">
    <div id=3D"Vu119189">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D119189&amp;pag=
e=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vot=
eu">up</a>
    </div>
    <div id=3D"Vd119189">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D119189&amp;pag=
e=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes=
-voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V119189" title=3D"39% like this...">
    -12
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#119189" class=
=3D"name">
  <strong class=3D"user"><em>ayyappan dot ashok at gmail dot com</em></stro=
ng></a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/functio=
n.array.php#119189"> =C2=B6</a><div class=3D"date" title=3D"2016-04-18 06:2=
6"><strong>8 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom119189" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">The code bellow by dave@w=
p.pl:<br><br>$var_name=3D'var';<br>$var=3Darray(0,1,2,3,4);<br>echo $$var_n=
ame[2]; <br><br>//prints NOTHING instead 2.<br>// prints 2 with PHP version=
 7.01 onwards<br><br>Note :<br>This results 2 with PHP version 7.01 onwards=
. Other versions throws a notice error</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"18613">  <div class=3D"votes">
    <div id=3D"Vu18613">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D18613&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd18613">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D18613&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V18613" title=3D"40% like this...">
    -11
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#18613" class=
=3D"name">
  <strong class=3D"user"><em>tobiasquinteiro at ig dot com dot br</em></str=
ong></a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/functi=
on.array.php#18613"> =C2=B6</a><div class=3D"date" title=3D"2002-01-29 12:2=
5"><strong>22 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom18613" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">&lt;?<br>        // This =
is a small script that shows how to use an multiple array<br>        for($x=
 =3D 0;$x &lt; 10;$x++){<br>                for($y =3D 0;$y &lt; 10;$y++){<=
br>                        $mat[$x][$y] =3D "$x,$y";<br>                }<b=
r>        }<br><br>        for($x =3D 0;$x &lt; count($mat);$x++){<br>     =
           for($y =3D 0;$y &lt; count($mat[$x]);$y++){<br>                 =
       echo    "mat[$x][$y]: " .<br>                                $mat[$x=
][$y] . " ";<br>                }<br>                echo "\n";<br>        =
}<br>?&gt;</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"36633">  <div class=3D"votes">
    <div id=3D"Vu36633">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D36633&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd36633">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D36633&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V36633" title=3D"40% like this...">
    -13
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#36633" class=
=3D"name">
  <strong class=3D"user"><em>baZz</em></strong></a><a class=3D"genanchor" h=
ref=3D"https://www.php.net/manual/en/function.array.php#36633"> =C2=B6</a><=
div class=3D"date" title=3D"2003-10-16 03:27"><strong>20 years ago</strong>=
</div>
  <div class=3D"text" id=3D"Hcom36633" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">Chek this out!!!. Suppose=
 that you want to create an array like the following:<br><span class=3D"def=
ault">&lt;?php<br>  $arr1 </span><span class=3D"keyword">=3D (<br>    </spa=
n><span class=3D"default">0 </span><span class=3D"keyword">=3D&gt; array (<=
/span><span class=3D"string">"customer"</span><span class=3D"keyword">=3D&g=
t;</span><span class=3D"string">"Client 1"</span><span class=3D"keyword">,<=
/span><span class=3D"string">"Item a"</span><span class=3D"keyword">),<br> =
   </span><span class=3D"default">1 </span><span class=3D"keyword">=3D&gt; =
array (</span><span class=3D"string">"customer"</span><span class=3D"keywor=
d">=3D&gt;</span><span class=3D"string">"Client 2"</span><span class=3D"key=
word">,</span><span class=3D"string">"Item b"</span><span class=3D"keyword"=
>)<br>  );<br></span><span class=3D"default">?&gt;<br></span>Seems prety ea=
sy, but what if you want to generate it dinamically woops!!!.  Imagine that=
 you have a file with thousands of lines and each line is a purchase order =
from diferent clients:<br><span class=3D"default">&lt;?php<br></span><span =
class=3D"comment">/*function to add elements*/<br></span><span class=3D"key=
word">function </span><span class=3D"default">addArray</span><span class=3D=
"keyword">(&amp;</span><span class=3D"default">$array</span><span class=3D"=
keyword">, </span><span class=3D"default">$id</span><span class=3D"keyword"=
>, </span><span class=3D"default">$var</span><span class=3D"keyword">)<br>{=
<br>    </span><span class=3D"default">$tempArray </span><span class=3D"key=
word">=3D array( </span><span class=3D"default">$var </span><span class=3D"=
keyword">=3D&gt; </span><span class=3D"default">$id</span><span class=3D"ke=
yword">);<br>    </span><span class=3D"default">$array </span><span class=
=3D"keyword">=3D </span><span class=3D"default">array_merge </span><span cl=
ass=3D"keyword">(</span><span class=3D"default">$array</span><span class=3D=
"keyword">, </span><span class=3D"default">$tempArray</span><span class=3D"=
keyword">);<br>}<br></span><span class=3D"comment">/*The same as above but =
the element is an array*/<br></span><span class=3D"keyword">function </span=
><span class=3D"default">addArrayArr</span><span class=3D"keyword">(&amp;</=
span><span class=3D"default">$array</span><span class=3D"keyword">, </span>=
<span class=3D"default">$var</span><span class=3D"keyword">, &amp;</span><s=
pan class=3D"default">$array1</span><span class=3D"keyword">)<br>{<br>    <=
/span><span class=3D"default">$tempArray </span><span class=3D"keyword">=3D=
 array(</span><span class=3D"default">$var </span><span class=3D"keyword">=
=3D&gt; </span><span class=3D"default">$array1</span><span class=3D"keyword=
">);<br>    </span><span class=3D"default">$array </span><span class=3D"key=
word">=3D </span><span class=3D"default">array_merge </span><span class=3D"=
keyword">(</span><span class=3D"default">$array</span><span class=3D"keywor=
d">, </span><span class=3D"default">$tempArray</span><span class=3D"keyword=
">);<br>}<br></span><span class=3D"comment">/*labels of our array or heders=
 of the file*/<br></span><span class=3D"default">$keyarr </span><span class=
=3D"keyword">=3D array(</span><span class=3D"string">"customer"</span><span=
 class=3D"keyword">,</span><span class=3D"string">"item"</span><span class=
=3D"keyword">);<br></span><span class=3D"comment">/*info that may you read =
from a file line 1 and 2*/<br></span><span class=3D"default">$valarr0 </spa=
n><span class=3D"keyword">=3D array(</span><span class=3D"string">"Client 1=
"</span><span class=3D"keyword">,</span><span class=3D"string">"Item a"</sp=
an><span class=3D"keyword">);<br></span><span class=3D"default">$valarr1 </=
span><span class=3D"keyword">=3D array(</span><span class=3D"string">"Clien=
t 2"</span><span class=3D"keyword">,</span><span class=3D"string">"Item b"<=
/span><span class=3D"keyword">);<br><br></span><span class=3D"default">$num=
ofrows </span><span class=3D"keyword">=3D </span><span class=3D"default">2<=
/span><span class=3D"keyword">;</span><span class=3D"comment">/*In our case=
 is just two lines*/<br></span><span class=3D"default">$tmpArray </span><sp=
an class=3D"keyword">=3D array();<br>for(</span><span class=3D"default">$i =
</span><span class=3D"keyword">=3D </span><span class=3D"default">0</span><=
span class=3D"keyword">; </span><span class=3D"default">$i </span><span cla=
ss=3D"keyword">&lt; </span><span class=3D"default">$numofrows</span><span c=
lass=3D"keyword">; </span><span class=3D"default">$i</span><span class=3D"k=
eyword">++){<br>  </span><span class=3D"default">$tmp </span><span class=3D=
"keyword">=3D </span><span class=3D"string">"valarr</span><span class=3D"de=
fault">$i</span><span class=3D"string">"</span><span class=3D"keyword">;<br=
>  </span><span class=3D"default">$tmpvar </span><span class=3D"keyword">=
=3D ${</span><span class=3D"default">$tmp</span><span class=3D"keyword">};<=
/span><span class=3D"comment">/*Using var of vars tricky tricky*/<br>  </sp=
an><span class=3D"keyword">foreach( </span><span class=3D"default">$keyarr =
</span><span class=3D"keyword">as </span><span class=3D"default">$key</span=
><span class=3D"keyword">=3D&gt;</span><span class=3D"default">$value</span=
><span class=3D"keyword">){     <br>    </span><span class=3D"default">addA=
rray</span><span class=3D"keyword">(</span><span class=3D"default">$tmparr<=
/span><span class=3D"keyword">,</span><span class=3D"default">$tmpvar</span=
><span class=3D"keyword">[</span><span class=3D"default">$key</span><span c=
lass=3D"keyword">],</span><span class=3D"default">$value</span><span class=
=3D"keyword">);<br>  }<br>  </span><span class=3D"default">addArrayArr</spa=
n><span class=3D"keyword">(</span><span class=3D"default">$finalarr</span><=
span class=3D"keyword">,</span><span class=3D"default">$i</span><span class=
=3D"keyword">,</span><span class=3D"default">$tmparr</span><span class=3D"k=
eyword">);<br>} </span><span class=3D"comment">/*voila all it's perfectly o=
rdered on finalarr*/<br><br>/*Here we just print the info but you can inser=
t it into a database*/<br></span><span class=3D"keyword">echo </span><span =
class=3D"string">"Customer: "</span><span class=3D"keyword">.</span><span c=
lass=3D"default">$finalarr</span><span class=3D"keyword">[</span><span clas=
s=3D"default">0</span><span class=3D"keyword">][</span><span class=3D"strin=
g">"customer"</span><span class=3D"keyword">].</span><span class=3D"string"=
>"&lt;br&gt;"</span><span class=3D"keyword">;<br>echo </span><span class=3D=
"string">"Item: "</span><span class=3D"keyword">.</span><span class=3D"defa=
ult">$finalarr</span><span class=3D"keyword">[</span><span class=3D"default=
">0</span><span class=3D"keyword">][</span><span class=3D"string">"item"</s=
pan><span class=3D"keyword">].</span><span class=3D"string">"&lt;br&gt;"</s=
pan><span class=3D"keyword">;<br>echo </span><span class=3D"string">"Custom=
er: "</span><span class=3D"keyword">.</span><span class=3D"default">$finala=
rr</span><span class=3D"keyword">[</span><span class=3D"default">1</span><s=
pan class=3D"keyword">][</span><span class=3D"string">"customer"</span><spa=
n class=3D"keyword">].</span><span class=3D"string">"&lt;br&gt;"</span><spa=
n class=3D"keyword">;<br>echo </span><span class=3D"string">"Item: "</span>=
<span class=3D"keyword">.</span><span class=3D"default">$finalarr</span><sp=
an class=3D"keyword">[</span><span class=3D"default">1</span><span class=3D=
"keyword">][</span><span class=3D"string">"item"</span><span class=3D"keywo=
rd">].</span><span class=3D"string">"&lt;br&gt;"</span><span class=3D"keywo=
rd">;          <br></span><span class=3D"default">?&gt;<br></span><br>The l=
ines above should print something like:<br>Customer: Client 1<br>Item: Item=
 a<br>Customer: Client 2<br>Item: Item b<br>I hope someone find this useful=
.</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"29779">  <div class=3D"votes">
    <div id=3D"Vu29779">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D29779&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd29779">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D29779&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V29779" title=3D"38% like this...">
    -6
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#29779" class=
=3D"name">
  <strong class=3D"user"><em>marcel at labor-club dot de</em></strong></a><=
a class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.=
php#29779"> =C2=B6</a><div class=3D"date" title=3D"2003-02-24 07:58"><stron=
g>21 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom29779" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">i tried to find a way to =
create BIG multidimensional-arrays. but the notes below only show the usage=
 of it, or the creation of small arrays like $matrix=3Darray('birne', 'apfe=
l', 'beere');
<br>
<br>for an online game, i use a big array (50x80) elements.
<br>it's no fun, to write the declaration of it in the ordinary way.
<br>
<br>here's my solution, to create an 2d-array, filled for example with rais=
ing numbers.
<br>
<br><span class=3D"default">&lt;?php
<br>$matrix</span><span class=3D"keyword">=3Darray();
<br></span><span class=3D"default">$sx</span><span class=3D"keyword">=3D</s=
pan><span class=3D"default">30</span><span class=3D"keyword">;
<br></span><span class=3D"default">$sy</span><span class=3D"keyword">=3D</s=
pan><span class=3D"default">40</span><span class=3D"keyword">;
<br></span><span class=3D"default">$i</span><span class=3D"keyword">=3D</sp=
an><span class=3D"default">1</span><span class=3D"keyword">;
<br>for (</span><span class=3D"default">$y</span><span class=3D"keyword">=
=3D</span><span class=3D"default">0</span><span class=3D"keyword">; </span>=
<span class=3D"default">$y</span><span class=3D"keyword">&lt;</span><span c=
lass=3D"default">$sy</span><span class=3D"keyword">; </span><span class=3D"=
default">$y</span><span class=3D"keyword">++)
<br>{
<br>    </span><span class=3D"default">array_push</span><span class=3D"keyw=
ord">(</span><span class=3D"default">$matrix</span><span class=3D"keyword">=
,array());
<br>    for (</span><span class=3D"default">$x</span><span class=3D"keyword=
">=3D</span><span class=3D"default">0</span><span class=3D"keyword">; </spa=
n><span class=3D"default">$x</span><span class=3D"keyword">&lt;</span><span=
 class=3D"default">$sx</span><span class=3D"keyword">; </span><span class=
=3D"default">$x</span><span class=3D"keyword">++)
<br>    {
<br>        </span><span class=3D"default">array_push</span><span class=3D"=
keyword">(</span><span class=3D"default">$matrix</span><span class=3D"keywo=
rd">[</span><span class=3D"default">$y</span><span class=3D"keyword">],arra=
y());
<br>        </span><span class=3D"default">$matrix</span><span class=3D"key=
word">[</span><span class=3D"default">$x</span><span class=3D"keyword">][</=
span><span class=3D"default">$y</span><span class=3D"keyword">]=3D</span><s=
pan class=3D"default">$i</span><span class=3D"keyword">;
<br>        </span><span class=3D"default">$i</span><span class=3D"keyword"=
>++;
<br>    }
<br>}
<br></span><span class=3D"default">?&gt;
<br></span>
<br>if there is a better way, plz send an email. i always want to learn mor=
e php!</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"26226">  <div class=3D"votes">
    <div id=3D"Vu26226">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D26226&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd26226">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D26226&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V26226" title=3D"38% like this...">
    -5
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#26226" class=
=3D"name">
  <strong class=3D"user"><em>mads at __nospam__westermann dot dk</em></stro=
ng></a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/functio=
n.array.php#26226"> =C2=B6</a><div class=3D"date" title=3D"2002-10-23 07:39=
"><strong>21 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom26226" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">In PHP 4.2.3 (and maybe e=
arlier versions) arrays with numeric indexes may be initialized to start at=
 a specific index and then automatically increment the index. This will sav=
e you having to write the index in front of every element for arrays that a=
re not zero-based.=20
<br>
<br>The code:
<br>
<br><span class=3D"default">&lt;?php
<br>                  $a </span><span class=3D"keyword">=3D array
<br>        (
<br>            </span><span class=3D"default">21    </span><span class=3D"=
keyword">=3D&gt; </span><span class=3D"default">1</span><span class=3D"keyw=
ord">,
<br>            </span><span class=3D"default">2</span><span class=3D"keywo=
rd">,
<br>            </span><span class=3D"default">3</span><span class=3D"keywo=
rd">,
<br>        );
<br>    print </span><span class=3D"string">'&lt;pre&gt;'</span><span class=
=3D"keyword">;
<br>    </span><span class=3D"default">print_r</span><span class=3D"keyword=
">(</span><span class=3D"default">$a</span><span class=3D"keyword">);
<br>    print </span><span class=3D"string">'&lt;/pre&gt;'</span><span clas=
s=3D"keyword">;
<br></span><span class=3D"default">?&gt;
<br></span>
<br>will print:
<br>
<br><span class=3D"default">&lt;?php
<br></span><span class=3D"keyword">Array
<br>(
<br>    [</span><span class=3D"default">21</span><span class=3D"keyword">] =
=3D&gt; </span><span class=3D"default">1
<br>    </span><span class=3D"keyword">[</span><span class=3D"default">22</=
span><span class=3D"keyword">] =3D&gt; </span><span class=3D"default">2
<br>    </span><span class=3D"keyword">[</span><span class=3D"default">23</=
span><span class=3D"keyword">] =3D&gt; </span><span class=3D"default">3
<br></span><span class=3D"keyword">)
<br></span><span class=3D"default">?&gt;</span></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"53411">  <div class=3D"votes">
    <div id=3D"Vu53411">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D53411&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd53411">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D53411&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V53411" title=3D"35% like this...">
    -6
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#53411" class=
=3D"name">
  <strong class=3D"user"><em>matthiasDELETETHIS at ansorgs dot de</em></str=
ong></a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/functi=
on.array.php#53411"> =C2=B6</a><div class=3D"date" title=3D"2005-05-31 02:5=
2"><strong>19 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom53411" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">How to use array() to cre=
ate an array of references rather than of copies? (Especially needed when d=
ealing with objects.) I played around somewhat and found a solution: place =
&amp; before the parameters of array() that shall be references. My PHP ver=
sion is 4.3.10.<br><br>Demonstration:<br><br><span class=3D"default">&lt;?p=
hp<br>$ref1 </span><span class=3D"keyword">=3D </span><span class=3D"string=
">'unchanged'</span><span class=3D"keyword">;<br></span><span class=3D"defa=
ult">$ref2 </span><span class=3D"keyword">=3D &amp; </span><span class=3D"d=
efault">$ref1</span><span class=3D"keyword">;<br><br></span><span class=3D"=
default">$array_of_copies </span><span class=3D"keyword">=3D array(</span><=
span class=3D"default">$ref1</span><span class=3D"keyword">, </span><span c=
lass=3D"default">$ref2</span><span class=3D"keyword">);<br></span><span cla=
ss=3D"default">print_r</span><span class=3D"keyword">(</span><span class=3D=
"default">$array_of_copies</span><span class=3D"keyword">); </span><span cl=
ass=3D"comment">// prints: Array ( [0] =3D&gt; unchanged [1] =3D&gt; unchan=
ged ) <br></span><span class=3D"default">$array_of_copies</span><span class=
=3D"keyword">[</span><span class=3D"default">0</span><span class=3D"keyword=
">] =3D </span><span class=3D"string">'changed'</span><span class=3D"keywor=
d">; </span><span class=3D"comment">// $ref1 =3D 'changed'; is not equivale=
nt, as it was _copied_ to the array<br></span><span class=3D"default">print=
_r</span><span class=3D"keyword">(</span><span class=3D"default">$array_of_=
copies</span><span class=3D"keyword">); </span><span class=3D"comment">// p=
rints: Array ( [0] =3D&gt; changed [1] =3D&gt; unchanged ) <br><br></span><=
span class=3D"default">$array_of_refs </span><span class=3D"keyword">=3D ar=
ray(&amp; </span><span class=3D"default">$ref1</span><span class=3D"keyword=
">, &amp; </span><span class=3D"default">$ref2</span><span class=3D"keyword=
">); </span><span class=3D"comment">// the difference: place &amp; before a=
rguments<br></span><span class=3D"default">print_r</span><span class=3D"key=
word">(</span><span class=3D"default">$array_of_refs</span><span class=3D"k=
eyword">); </span><span class=3D"comment">// prints: Array ( [0] =3D&gt; un=
changed [1] =3D&gt; unchanged ) <br></span><span class=3D"default">$array_o=
f_refs</span><span class=3D"keyword">[</span><span class=3D"default">0</spa=
n><span class=3D"keyword">] =3D </span><span class=3D"string">'changed'</sp=
an><span class=3D"keyword">; </span><span class=3D"comment">// $ref1 =3D 'c=
hanged'; is equivalent as $array_of_refs[0] references $ref1<br></span><spa=
n class=3D"default">print_r</span><span class=3D"keyword">(</span><span cla=
ss=3D"default">$array_of_refs</span><span class=3D"keyword">, </span><span =
class=3D"default">true</span><span class=3D"keyword">); </span><span class=
=3D"comment">// prints: Array ( [0] =3D&gt; changed [1] =3D&gt; changed ) <=
br></span><span class=3D"default">?&gt;</span></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"35495">  <div class=3D"votes">
    <div id=3D"Vu35495">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D35495&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd35495">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D35495&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V35495" title=3D"35% like this...">
    -8
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#35495" class=
=3D"name">
  <strong class=3D"user"><em>TCross1 at hotmail dot com</em></strong></a><a=
 class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.p=
hp#35495"> =C2=B6</a><div class=3D"date" title=3D"2003-09-03 12:38"><strong=
>20 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom35495" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">here is the sort of "text=
book" way to output the contents of an array which avoids using foreach() a=
nd allows you to index &amp; iterate through the array as you see fit:<br><=
br><span class=3D"default">&lt;?php<br><br>$arrayName </span><span class=3D=
"keyword">=3D array(</span><span class=3D"string">"apples"</span><span clas=
s=3D"keyword">, </span><span class=3D"string">"bananas"</span><span class=
=3D"keyword">, </span><span class=3D"string">"oranges"</span><span class=3D=
"keyword">, </span><span class=3D"string">"pears"</span><span class=3D"keyw=
ord">);<br></span><span class=3D"default">$arrayLength </span><span class=
=3D"keyword">=3D </span><span class=3D"default">count</span><span class=3D"=
keyword">(</span><span class=3D"default">$arrayName</span><span class=3D"ke=
yword">);<br><br>for (</span><span class=3D"default">$i </span><span class=
=3D"keyword">=3D </span><span class=3D"default">0</span><span class=3D"keyw=
ord">; </span><span class=3D"default">$i </span><span class=3D"keyword">&lt=
; </span><span class=3D"default">$arrayLength</span><span class=3D"keyword"=
>; </span><span class=3D"default">$i</span><span class=3D"keyword">++){<br>=
    echo </span><span class=3D"string">"arrayName at[" </span><span class=
=3D"keyword">. </span><span class=3D"default">$i </span><span class=3D"keyw=
ord">. </span><span class=3D"string">"] is: [" </span><span class=3D"keywor=
d">.</span><span class=3D"default">$arrayName</span><span class=3D"keyword"=
>[</span><span class=3D"default">$i</span><span class=3D"keyword">] . </spa=
n><span class=3D"string">"]&lt;br&gt;\n"</span><span class=3D"keyword">;<br=
>}<br><br></span><span class=3D"default">?&gt;<br></span><br>enjoy!<br><br>=
-tim</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"113367">  <div class=3D"votes">
    <div id=3D"Vu113367">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D113367&amp;pag=
e=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vot=
eu">up</a>
    </div>
    <div id=3D"Vd113367">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D113367&amp;pag=
e=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes=
-voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V113367" title=3D"33% like this...">
    -7
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#113367" class=
=3D"name">
  <strong class=3D"user"><em>sergei dot solomonov at gmail dot com</em></st=
rong></a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/funct=
ion.array.php#113367"> =C2=B6</a><div class=3D"date" title=3D"2013-10-02 08=
:53"><strong>10 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom113367" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">Consider:<br>file inc1.ph=
p<br>-------------<br><span class=3D"default">&lt;?php<br></span><span clas=
s=3D"keyword">return </span><span class=3D"string">'key'</span><span class=
=3D"keyword">;<br><br></span><span class=3D"default">file inc2</span><span =
class=3D"keyword">.</span><span class=3D"default">php<br></span><span class=
=3D"keyword">-------------<br>&lt;?</span><span class=3D"default">php<br></=
span><span class=3D"keyword">return </span><span class=3D"string">'value'</=
span><span class=3D"keyword">;<br><br></span><span class=3D"default">Test</=
span><span class=3D"keyword">:<br>&lt;?</span><span class=3D"default">php<b=
r>$a </span><span class=3D"keyword">=3D [<br>    include </span><span class=
=3D"string">'inc1.php' </span><span class=3D"keyword">=3D&gt; include </spa=
n><span class=3D"string">'inc2.php'<br></span><span class=3D"keyword">];<br=
></span><span class=3D"default">var_dump</span><span class=3D"keyword">(</s=
pan><span class=3D"default">$a</span><span class=3D"keyword">);<br><br></sp=
an><span class=3D"comment">/* It works!!!<br>array(1) {<br>  'key' =3D&gt;<=
br>  string(5) "value"<br>}<br>*/</span></span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"91272">  <div class=3D"votes">
    <div id=3D"Vu91272">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D91272&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd91272">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D91272&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V91272" title=3D"32% like this...">
    -11
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#91272" class=
=3D"name">
  <strong class=3D"user"><em>kamil at navikam dot pl</em></strong></a><a cl=
ass=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.php#=
91272"> =C2=B6</a><div class=3D"date" title=3D"2009-06-03 03:42"><strong>15=
 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom91272" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">Easy function to unarray =
an array :-)<br>It will make $array['something'] =3D&gt; $something.<br>Use=
full for making code more clear.<br><br>example of use:<br>&lt;?<br>functio=
n unarray($row) {<br>    foreach($row as $key =3D&gt; $value) {<br>        =
global $$key;<br>        $$key =3D $value;<br>    }<br>}<br><br>$sql =3D my=
sql_query("SELECT * FROM `pracownicy`");<br>while ($row =3D mysql_fetch_ass=
oc($sql)) {<br>    unarray($row);<br>    echo $idpracownika.'&lt;br&gt;'; /=
/instead of $row['idpracownika']<br>}<br>?&gt;</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"13059">  <div class=3D"votes">
    <div id=3D"Vu13059">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D13059&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd13059">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D13059&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V13059" title=3D"32% like this...">
    -9
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#13059" class=
=3D"name">
  <strong class=3D"user"><em>joshua dot e at usa dot net</em></strong></a><=
a class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.=
php#13059"> =C2=B6</a><div class=3D"date" title=3D"2001-05-24 11:12"><stron=
g>23 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom13059" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">Here's a cool tip for wor=
king with associative arrays-=20
<br>Here's what I was trying to accomplish:=20
<br>
<br>I wanted to hit a DB, and load the results into an associative array, s=
ince I only had key/value pairs returned. I loaded them into an array, beca=
use I wanted to manipulate the data further after the DB select, but I didn=
't want to hit the DB more than necessary.=20
<br>
<br>Here's how I did it:=20
<br>
<br><span class=3D"default">&lt;?php
<br></span><span class=3D"comment">//assume db connectivity
<br>//load it all into the associative array
<br></span><span class=3D"default">$sql </span><span class=3D"keyword">=3D =
</span><span class=3D"string">"SELECT key,value FROM table"</span><span cla=
ss=3D"keyword">;
<br></span><span class=3D"default">$result </span><span class=3D"keyword">=
=3D </span><span class=3D"default">mysql_query</span><span class=3D"keyword=
">(</span><span class=3D"default">$sql</span><span class=3D"keyword">);
<br>while(</span><span class=3D"default">$row </span><span class=3D"keyword=
">=3D </span><span class=3D"default">mysql_fetch_row</span><span class=3D"k=
eyword">(</span><span class=3D"default">$result</span><span class=3D"keywor=
d">)) {
<br></span><span class=3D"default">$myArray</span><span class=3D"keyword">[=
</span><span class=3D"default">$row</span><span class=3D"keyword">[</span><=
span class=3D"default">0</span><span class=3D"keyword">]] =3D </span><span =
class=3D"default">$row</span><span class=3D"keyword">[</span><span class=3D=
"default">1</span><span class=3D"keyword">];
<br>}
<br></span><span class=3D"comment">//now we expand it
<br></span><span class=3D"keyword">while(list(</span><span class=3D"default=
">$key</span><span class=3D"keyword">,</span><span class=3D"default">$value=
</span><span class=3D"keyword">) =3D </span><span class=3D"default">each</s=
pan><span class=3D"keyword">(</span><span class=3D"default">$myArray</span>=
<span class=3D"keyword">)) {
<br>echo </span><span class=3D"string">"</span><span class=3D"default">$key=
</span><span class=3D"string"> : </span><span class=3D"default">$value</spa=
n><span class=3D"string">"</span><span class=3D"keyword">;
<br>}=20
<br></span><span class=3D"default">?&gt;
<br></span>
<br>I found this to be super efficient, and extremely cool.</span></code></=
div>
  </div>
 </div>
  <div class=3D"note" id=3D"116786">  <div class=3D"votes">
    <div id=3D"Vu116786">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D116786&amp;pag=
e=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vot=
eu">up</a>
    </div>
    <div id=3D"Vd116786">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D116786&amp;pag=
e=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes=
-voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V116786" title=3D"26% like this...">
    -7
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#116786" class=
=3D"name">
  <strong class=3D"user"><em>dave at wp dot pl</em></strong></a><a class=3D=
"genanchor" href=3D"https://www.php.net/manual/en/function.array.php#116786=
"> =C2=B6</a><div class=3D"date" title=3D"2015-02-27 03:55"><strong>9 years=
 ago</strong></div>
  <div class=3D"text" id=3D"Hcom116786" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">The code bellow:<br><br>$=
var_name=3D'var';<br>$var=3Darray(0,1,2,3,4);<br>echo $$var_name[2]; <br><b=
r>prints NOTHING instead 2.</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"81050">  <div class=3D"votes">
    <div id=3D"Vu81050">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D81050&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd81050">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D81050&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V81050" title=3D"27% like this...">
    -13
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#81050" class=
=3D"name">
  <strong class=3D"user"><em>sebasg37 at gmail dot com</em></strong></a><a =
class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.array.ph=
p#81050"> =C2=B6</a><div class=3D"date" title=3D"2008-02-12 11:32"><strong>=
16 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom81050" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">Recursive function simila=
r to print_r for describing anidated arrays in html &lt;ol&gt;. Maybe it's =
useful for someone.<br><br><span class=3D"default">&lt;?php<br></span><span=
 class=3D"keyword">function </span><span class=3D"default">describeAnidated=
Array</span><span class=3D"keyword">(</span><span class=3D"default">$array<=
/span><span class=3D"keyword">)<br>{<br>    </span><span class=3D"default">=
$buf </span><span class=3D"keyword">=3D </span><span class=3D"string">''</s=
pan><span class=3D"keyword">;<br>    foreach(</span><span class=3D"default"=
>$array </span><span class=3D"keyword">as </span><span class=3D"default">$k=
ey </span><span class=3D"keyword">=3D&gt; </span><span class=3D"default">$v=
alue</span><span class=3D"keyword">)<br>    {<br>        if(</span><span cl=
ass=3D"default">is_array</span><span class=3D"keyword">(</span><span class=
=3D"default">$value</span><span class=3D"keyword">))<br>        {<br>      =
      </span><span class=3D"default">$buf </span><span class=3D"keyword">.=
=3D </span><span class=3D"string">'&lt;ol&gt;' </span><span class=3D"keywor=
d">. </span><span class=3D"default">describeAnidatedArray</span><span class=
=3D"keyword">(</span><span class=3D"default">$value</span><span class=3D"ke=
yword">) . </span><span class=3D"string">'&lt;/ol&gt;'</span><span class=3D=
"keyword">;<br>        }<br>        else<br>            </span><span class=
=3D"default">$buf </span><span class=3D"keyword">.=3D </span><span class=3D=
"string">"&lt;li&gt;</span><span class=3D"default">$value</span><span class=
=3D"string">&lt;/li&gt;"</span><span class=3D"keyword">;<br>    }<br>    re=
turn </span><span class=3D"default">$buf</span><span class=3D"keyword">;<br=
>}<br><br></span><span class=3D"comment">// Example: <br></span><span class=
=3D"default">$array </span><span class=3D"keyword">=3D array(</span><span c=
lass=3D"string">"a"</span><span class=3D"keyword">, </span><span class=3D"s=
tring">"b"</span><span class=3D"keyword">, </span><span class=3D"string">"c=
"</span><span class=3D"keyword">, array(</span><span class=3D"string">"1"</=
span><span class=3D"keyword">, </span><span class=3D"string">"2"</span><spa=
n class=3D"keyword">, array(</span><span class=3D"string">"A"</span><span c=
lass=3D"keyword">, </span><span class=3D"string">"B"</span><span class=3D"k=
eyword">)), array(</span><span class=3D"string">"3"</span><span class=3D"ke=
yword">, </span><span class=3D"string">"4"</span><span class=3D"keyword">),=
 </span><span class=3D"string">"d"</span><span class=3D"keyword">);<br><br>=
echo </span><span class=3D"default">describeAnidatedArray</span><span class=
=3D"keyword">(</span><span class=3D"default">$array</span><span class=3D"ke=
yword">);<br></span><span class=3D"default">?&gt;<br></span><br>output:<br>=
<br># a<br># b<br># c<br><br>   1. 1<br>   2. 2<br>         1. A<br>       =
  2. B<br><br>   1. 3<br>   2. 4<br><br># d</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"23441">  <div class=3D"votes">
    <div id=3D"Vu23441">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D23441&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd23441">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D23441&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V23441" title=3D"26% like this...">
    -12
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#23441" class=
=3D"name">
  <strong class=3D"user"><em>John</em></strong></a><a class=3D"genanchor" h=
ref=3D"https://www.php.net/manual/en/function.array.php#23441"> =C2=B6</a><=
div class=3D"date" title=3D"2002-07-18 11:48"><strong>22 years ago</strong>=
</div>
  <div class=3D"text" id=3D"Hcom23441" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">Be careful not to create =
an array on top of an already existing variable:
<br>
<br><span class=3D"default">&lt;?php
<br>$name </span><span class=3D"keyword">=3D </span><span class=3D"string">=
"John"</span><span class=3D"keyword">;
<br></span><span class=3D"default">$name</span><span class=3D"keyword">[</s=
pan><span class=3D"string">'last'</span><span class=3D"keyword">] =3D </spa=
n><span class=3D"string">"Doe"</span><span class=3D"keyword">;=20
<br></span><span class=3D"default">?&gt;
<br></span>
<br>$name becomes "Dohn" since 'last' evaluates to the 0th position of $nam=
e.
<br>Same is true for multi-arrays.</span></code></div>
  </div>
 </div>
  <div class=3D"note" id=3D"48906">  <div class=3D"votes">
    <div id=3D"Vu48906">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D48906&amp;page=
=3Dfunction.array&amp;vote=3Dup" title=3D"Vote up!" class=3D"usernotes-vote=
u">up</a>
    </div>
    <div id=3D"Vd48906">
    <a href=3D"https://www.php.net/manual/vote-note.php?id=3D48906&amp;page=
=3Dfunction.array&amp;vote=3Ddown" title=3D"Vote down!" class=3D"usernotes-=
voted">down</a>
    </div>
    <div class=3D"tally" id=3D"V48906" title=3D"26% like this...">
    -16
    </div>
  </div>
  <a href=3D"https://www.php.net/manual/en/function.array.php#48906" class=
=3D"name">
  <strong class=3D"user"><em>phpm at nreynolds dot me dot uk</em></strong><=
/a><a class=3D"genanchor" href=3D"https://www.php.net/manual/en/function.ar=
ray.php#48906"> =C2=B6</a><div class=3D"date" title=3D"2005-01-11 08:24"><s=
trong>19 years ago</strong></div>
  <div class=3D"text" id=3D"Hcom48906" style=3D"opacity: 0.35;">
<div class=3D"phpcode"><code><span class=3D"html">This helper function crea=
tes a multi-dimensional array. For example, creating a three dimensional ar=
ray measuring 10x20x30: <span class=3D"default">&lt;?php $my_array </span><=
span class=3D"keyword">=3D </span><span class=3D"default">multi_dim</span><=
span class=3D"keyword">(</span><span class=3D"default">10</span><span class=
=3D"keyword">, </span><span class=3D"default">20</span><span class=3D"keywo=
rd">, </span><span class=3D"default">30</span><span class=3D"keyword">); </=
span><span class=3D"default">?&gt;<br></span><br><span class=3D"default">&l=
t;?php<br><br></span><span class=3D"keyword">function </span><span class=3D=
"default">multi_dim</span><span class=3D"keyword">()<br>{    <br>    </span=
><span class=3D"default">$fill_value </span><span class=3D"keyword">=3D </s=
pan><span class=3D"default">null</span><span class=3D"keyword">;<br>    <br=
>    for (</span><span class=3D"default">$arg_index </span><span class=3D"k=
eyword">=3D </span><span class=3D"default">func_num_args</span><span class=
=3D"keyword">() - </span><span class=3D"default">1</span><span class=3D"key=
word">; </span><span class=3D"default">$arg_index </span><span class=3D"key=
word">&gt;=3D </span><span class=3D"default">0</span><span class=3D"keyword=
">; </span><span class=3D"default">$arg_index</span><span class=3D"keyword"=
>--) {<br>        </span><span class=3D"default">$dim_size </span><span cla=
ss=3D"keyword">=3D </span><span class=3D"default">func_get_arg</span><span =
class=3D"keyword">(</span><span class=3D"default">$arg_index</span><span cl=
ass=3D"keyword">);<br>        </span><span class=3D"default">$fill_value </=
span><span class=3D"keyword">=3D </span><span class=3D"default">array_fill<=
/span><span class=3D"keyword">(</span><span class=3D"default">0</span><span=
 class=3D"keyword">, </span><span class=3D"default">$dim_size</span><span c=
lass=3D"keyword">, </span><span class=3D"default">$fill_value</span><span c=
lass=3D"keyword">);<br>    }<br>    <br>    return </span><span class=3D"de=
fault">$fill_value</span><span class=3D"keyword">;<br>}<br><br></span><span=
 class=3D"default">?&gt;</span></span></code></div>
  </div>
 </div></div>
<div class=3D"foot"><a href=3D"https://www.php.net/manual/add-note.php?sect=
=3Dfunction.array&amp;redirect=3Dhttps://www.php.net/manual/en/function.arr=
ay.php">=EF=BC=8B<small>add a note</small></a></div>
</section>    </section><!-- layout-content -->
        <aside class=3D"layout-menu">

        <ul class=3D"parent-menu-list">
                                    <li>
                <a href=3D"https://www.php.net/manual/en/ref.array.php">Arr=
ay Functions</a>

                                    <ul class=3D"child-menu-list">

                                                <li class=3D"current">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array.php" title=3D"array">array</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-change-key-case.php" title=3D"array_=E2=80=8Bchange_=E2=80=8Bkey_=
=E2=80=8Bcase">array_=E2=80=8Bchange_=E2=80=8Bkey_=E2=80=8Bcase</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-chunk.php" title=3D"array_=E2=80=8Bchunk">array_=E2=80=8Bchunk</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-column.php" title=3D"array_=E2=80=8Bcolumn">array_=E2=80=8Bcolumn<=
/a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-combine.php" title=3D"array_=E2=80=8Bcombine">array_=E2=80=8Bcombi=
ne</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-count-values.php" title=3D"array_=E2=80=8Bcount_=E2=80=8Bvalues">a=
rray_=E2=80=8Bcount_=E2=80=8Bvalues</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-diff.php" title=3D"array_=E2=80=8Bdiff">array_=E2=80=8Bdiff</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-diff-assoc.php" title=3D"array_=E2=80=8Bdiff_=E2=80=8Bassoc">array=
_=E2=80=8Bdiff_=E2=80=8Bassoc</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-diff-key.php" title=3D"array_=E2=80=8Bdiff_=E2=80=8Bkey">array_=E2=
=80=8Bdiff_=E2=80=8Bkey</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-diff-uassoc.php" title=3D"array_=E2=80=8Bdiff_=E2=80=8Buassoc">arr=
ay_=E2=80=8Bdiff_=E2=80=8Buassoc</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-diff-ukey.php" title=3D"array_=E2=80=8Bdiff_=E2=80=8Bukey">array_=
=E2=80=8Bdiff_=E2=80=8Bukey</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-fill.php" title=3D"array_=E2=80=8Bfill">array_=E2=80=8Bfill</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-fill-keys.php" title=3D"array_=E2=80=8Bfill_=E2=80=8Bkeys">array_=
=E2=80=8Bfill_=E2=80=8Bkeys</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-filter.php" title=3D"array_=E2=80=8Bfilter">array_=E2=80=8Bfilter<=
/a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-flip.php" title=3D"array_=E2=80=8Bflip">array_=E2=80=8Bflip</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-intersect.php" title=3D"array_=E2=80=8Bintersect">array_=E2=80=8Bi=
ntersect</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-intersect-assoc.php" title=3D"array_=E2=80=8Bintersect_=E2=80=8Bas=
soc">array_=E2=80=8Bintersect_=E2=80=8Bassoc</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-intersect-key.php" title=3D"array_=E2=80=8Bintersect_=E2=80=8Bkey"=
>array_=E2=80=8Bintersect_=E2=80=8Bkey</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-intersect-uassoc.php" title=3D"array_=E2=80=8Bintersect_=E2=80=8Bu=
assoc">array_=E2=80=8Bintersect_=E2=80=8Buassoc</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-intersect-ukey.php" title=3D"array_=E2=80=8Bintersect_=E2=80=8Buke=
y">array_=E2=80=8Bintersect_=E2=80=8Bukey</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-is-list.php" title=3D"array_=E2=80=8Bis_=E2=80=8Blist">array_=E2=
=80=8Bis_=E2=80=8Blist</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-key-exists.php" title=3D"array_=E2=80=8Bkey_=E2=80=8Bexists">array=
_=E2=80=8Bkey_=E2=80=8Bexists</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-key-first.php" title=3D"array_=E2=80=8Bkey_=E2=80=8Bfirst">array_=
=E2=80=8Bkey_=E2=80=8Bfirst</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-key-last.php" title=3D"array_=E2=80=8Bkey_=E2=80=8Blast">array_=E2=
=80=8Bkey_=E2=80=8Blast</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-keys.php" title=3D"array_=E2=80=8Bkeys">array_=E2=80=8Bkeys</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-map.php" title=3D"array_=E2=80=8Bmap">array_=E2=80=8Bmap</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-merge.php" title=3D"array_=E2=80=8Bmerge">array_=E2=80=8Bmerge</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-merge-recursive.php" title=3D"array_=E2=80=8Bmerge_=E2=80=8Brecurs=
ive">array_=E2=80=8Bmerge_=E2=80=8Brecursive</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-multisort.php" title=3D"array_=E2=80=8Bmultisort">array_=E2=80=8Bm=
ultisort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-pad.php" title=3D"array_=E2=80=8Bpad">array_=E2=80=8Bpad</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-pop.php" title=3D"array_=E2=80=8Bpop">array_=E2=80=8Bpop</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-product.php" title=3D"array_=E2=80=8Bproduct">array_=E2=80=8Bprodu=
ct</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-push.php" title=3D"array_=E2=80=8Bpush">array_=E2=80=8Bpush</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-rand.php" title=3D"array_=E2=80=8Brand">array_=E2=80=8Brand</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-reduce.php" title=3D"array_=E2=80=8Breduce">array_=E2=80=8Breduce<=
/a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-replace.php" title=3D"array_=E2=80=8Breplace">array_=E2=80=8Brepla=
ce</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-replace-recursive.php" title=3D"array_=E2=80=8Breplace_=E2=80=8Bre=
cursive">array_=E2=80=8Breplace_=E2=80=8Brecursive</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-reverse.php" title=3D"array_=E2=80=8Breverse">array_=E2=80=8Brever=
se</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-search.php" title=3D"array_=E2=80=8Bsearch">array_=E2=80=8Bsearch<=
/a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-shift.php" title=3D"array_=E2=80=8Bshift">array_=E2=80=8Bshift</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-slice.php" title=3D"array_=E2=80=8Bslice">array_=E2=80=8Bslice</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-splice.php" title=3D"array_=E2=80=8Bsplice">array_=E2=80=8Bsplice<=
/a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-sum.php" title=3D"array_=E2=80=8Bsum">array_=E2=80=8Bsum</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-udiff.php" title=3D"array_=E2=80=8Budiff">array_=E2=80=8Budiff</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-udiff-assoc.php" title=3D"array_=E2=80=8Budiff_=E2=80=8Bassoc">arr=
ay_=E2=80=8Budiff_=E2=80=8Bassoc</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-udiff-uassoc.php" title=3D"array_=E2=80=8Budiff_=E2=80=8Buassoc">a=
rray_=E2=80=8Budiff_=E2=80=8Buassoc</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-uintersect.php" title=3D"array_=E2=80=8Buintersect">array_=E2=80=
=8Buintersect</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-uintersect-assoc.php" title=3D"array_=E2=80=8Buintersect_=E2=80=8B=
assoc">array_=E2=80=8Buintersect_=E2=80=8Bassoc</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-uintersect-uassoc.php" title=3D"array_=E2=80=8Buintersect_=E2=80=
=8Buassoc">array_=E2=80=8Buintersect_=E2=80=8Buassoc</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-unique.php" title=3D"array_=E2=80=8Bunique">array_=E2=80=8Bunique<=
/a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-unshift.php" title=3D"array_=E2=80=8Bunshift">array_=E2=80=8Bunshi=
ft</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-values.php" title=3D"array_=E2=80=8Bvalues">array_=E2=80=8Bvalues<=
/a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-walk.php" title=3D"array_=E2=80=8Bwalk">array_=E2=80=8Bwalk</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.array-walk-recursive.php" title=3D"array_=E2=80=8Bwalk_=E2=80=8Brecursiv=
e">array_=E2=80=8Bwalk_=E2=80=8Brecursive</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.arsort.php" title=3D"arsort">arsort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.asort.php" title=3D"asort">asort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.compact.php" title=3D"compact">compact</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.count.php" title=3D"count">count</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.current.php" title=3D"current">current</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.end.php" title=3D"end">end</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.extract.php" title=3D"extract">extract</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.in-array.php" title=3D"in_=E2=80=8Barray">in_=E2=80=8Barray</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.key.php" title=3D"key">key</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.key-exists.php" title=3D"key_=E2=80=8Bexists">key_=E2=80=8Bexists</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.krsort.php" title=3D"krsort">krsort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.ksort.php" title=3D"ksort">ksort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.list.php" title=3D"list">list</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.natcasesort.php" title=3D"natcasesort">natcasesort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.natsort.php" title=3D"natsort">natsort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.next.php" title=3D"next">next</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.pos.php" title=3D"pos">pos</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.prev.php" title=3D"prev">prev</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.range.php" title=3D"range">range</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.reset.php" title=3D"reset">reset</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.rsort.php" title=3D"rsort">rsort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.shuffle.php" title=3D"shuffle">shuffle</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.sizeof.php" title=3D"sizeof">sizeof</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.sort.php" title=3D"sort">sort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.uasort.php" title=3D"uasort">uasort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.uksort.php" title=3D"uksort">uksort</a>
                        </li>
                                                <li class=3D"">
                            <a href=3D"https://www.php.net/manual/en/functi=
on.usort.php" title=3D"usort">usort</a>
                        </li>
                       =20
                    </ul>
               =20
            </li>
                       =20
                        <li>
                <span class=3D"header">Deprecated</span>
                <ul class=3D"child-menu-list">
                                    <li class=3D"">
                        <a href=3D"https://www.php.net/manual/en/function.e=
ach.php" title=3D"each">each</a>
                    </li>
                                </ul>
            </li>
                    </ul>
    </aside>


  </div><!-- layout -->

  <footer>
    <div class=3D"container footer-content">
      <div class=3D"row-fluid">
      <ul class=3D"footmenu">
        <li><a href=3D"https://www.php.net/manual/en/copyright.php">Copyrig=
ht =C2=A9 2001-2024 The PHP Documentation Group</a></li>
        <li><a href=3D"https://www.php.net/my.php">My PHP.net</a></li>
        <li><a href=3D"https://www.php.net/contact.php">Contact</a></li>
        <li><a href=3D"https://www.php.net/sites.php">Other PHP.net sites</=
a></li>
        <li><a href=3D"https://www.php.net/privacy.php">Privacy policy</a><=
/li>
      </ul>
      </div>
    </div>
  </footer>

   =20
 <!-- External and third party libraries. -->
=20







<a id=3D"toTop"><span id=3D"toTopHover"></span><img width=3D"40" height=3D"=
40" alt=3D"To Top" src=3D"https://www.php.net/images/to-top@2x.png"></a>



</body></html>
------MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.php.net/cached.php?t=1707321815&f=/fonts/Fira/fira.css

@charset "utf-8";

@font-face { font-family: "Fira Sans"; src: local("Fira Sans Book"), local(=
"FiraSans-Book"), url("/fonts/Fira/woff2/FiraSans-Book.woff2") format("woff=
2"), url("/fonts/Fira/woff/FiraSans-Book.woff") format("woff"), url("/fonts=
/Fira/ttf/FiraSans-Book.ttf") format("truetype"); font-weight: 400; font-st=
yle: normal; font-display: swap; }

@font-face { font-family: "Fira Sans"; src: local("Fira Sans Book Italic"),=
 local("FiraSans-BookItalic"), url("/fonts/Fira/woff2/FiraSans-BookItalic.w=
off2") format("woff2"), url("/fonts/Fira/woff/FiraSans-BookItalic.woff") fo=
rmat("woff"), url("/fonts/Fira/ttf/FiraSans-BookItalic.ttf") format("truety=
pe"); font-weight: 400; font-style: italic; font-display: swap; }

@font-face { font-family: "Fira Sans"; src: local("Fira Sans Medium"), loca=
l("FiraSans-Medium"), url("/fonts/Fira/woff2/FiraSans-Medium.woff2") format=
("woff2"), url("/fonts/Fira/woff/FiraSans-Medium.woff") format("woff"), url=
("/fonts/Fira/ttf/FiraSans-Medium.ttf") format("truetype"); font-weight: 50=
0; font-style: normal; font-display: swap; }

@font-face { font-family: "Fira Sans"; src: local("Fira Sans Medium Italic"=
), local("FiraSans-MediumItalic"), url("/fonts/Fira/woff2/FiraSans-MediumIt=
alic.woff2") format("woff2"), url("/fonts/Fira/woff/FiraSans-MediumItalic.w=
off") format("woff"), url("/fonts/Fira/ttf/FiraSans-MediumItalic.ttf") form=
at("truetype"); font-weight: 500; font-style: italic; font-display: swap; }

@font-face { font-family: "Fira Mono"; src: local("Fira Mono"), local("Fira=
Mono-Regular"), url("/fonts/Fira/woff2/FiraMono-Regular.woff2") format("wof=
f2"), url("/fonts/Fira/woff/FiraMono-Regular.woff") format("woff"), url("/f=
onts/Fira/ttf/FiraMono-Regular.ttf") format("truetype"); font-weight: 400; =
font-style: normal; font-display: swap; }

@font-face { font-family: "Fira Mono"; src: local("Fira Mono Bold"), local(=
"FiraMono-Bold"), url("/fonts/Fira/woff2/FiraMono-Bold.woff2") format("woff=
2"), url("/fonts/Fira/woff/FiraMono-Bold.woff") format("woff"), url("/fonts=
/Fira/ttf/FiraMono-Bold.ttf") format("truetype"); font-weight: 700; font-st=
yle: normal; font-display: swap; }
------MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.php.net/cached.php?t=1707321815&f=/fonts/Font-Awesome/css/fontello.css

@charset "utf-8";

@font-face { font-family: fontello; src: url("/fonts/Font-Awesome/font/font=
ello.woff2?96103027") format("woff2"), url("/fonts/Font-Awesome/font/fontel=
lo.woff?96103027") format("woff"), url("/fonts/Font-Awesome/font/fontello.t=
tf?96103027") format("truetype"); font-weight: normal; font-style: normal; =
}

[class^=3D"icon-"]::before, [class*=3D" icon-"]::before { font-family: font=
ello; font-style: normal; font-weight: normal; display: inline-block; text-=
decoration: inherit; width: 1em; margin-right: 0.2em; text-align: center; f=
ont-variant: normal; text-transform: none; line-height: 1em; margin-left: 0=
.2em; -webkit-font-smoothing: antialiased; }

.icon-x-twitter::before { content: "=EE=A0=80"; }

.icon-mastodon::before { content: "=EE=A0=81"; }
------MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.php.net/cached.php?t=1720167002&f=/styles/theme-base.css

@charset "utf-8";

:root { --font-family-sans-serif: "Fira Sans", "Source Sans Pro", ui-sans-s=
erif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "He=
lvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe =
UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; --font-family-mono: "Fira=
 Mono", "Source Code Pro", ui-monospace, SFMono-Regular, Menlo, Monaco, Con=
solas, "Liberation Mono", "Courier New", monospace; --dark-grey-color: #333=
; --dark-blue-color: #4F5B93; --medium-blue-color: #7A86B8; --light-blue-co=
lor: #E2E4EF; --dark-magenta-color: #793862; --medium-magenta-color: #AE508=
D; --light-magenta-color: #CF82B1; }

.clearfix { }

.clearfix::before, .clearfix::after { display: table; content: ""; line-hei=
ght: 0; }

.clearfix::after { clear: both; }

.hide-text { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

article, aside, details, figcaption, figure, footer, header, hgroup, nav, s=
ection { display: block; }

audio, canvas, video { display: inline-block; }

audio:not([controls]) { display: none; }

html { font-size: 100%; text-size-adjust: 100%; scroll-behavior: smooth; }

a { border-bottom: 1px solid; }

a:focus { outline: thin dotted var(--dark-grey-color); outline-offset: -2px=
; }

a:hover, a:active { outline: 0px; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

pre { white-space: pre-wrap; }

#map_canvas img, .google-maps img { max-width: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { appearance: button; cursor: pointer; }

label, select, button, input[type=3D"button"], input[type=3D"reset"], input=
[type=3D"submit"], input[type=3D"radio"], input[type=3D"checkbox"] { cursor=
: pointer; }

input[type=3D"search"]::-webkit-search-decoration, input[type=3D"search"]::=
-webkit-search-cancel-button { appearance: none; }

textarea { overflow: auto; vertical-align: top; }

@media print {
  * { text-shadow: none !important; color: rgb(0, 0, 0) !important; backgro=
und: transparent !important; box-shadow: none !important; }
  a, a:visited { text-decoration: underline; }
  a[href]::after { content: " (" attr(href) ")"; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  .ir a::after, a[href^=3D"javascript:"]::after, a[href^=3D"#"]::after { co=
ntent: ""; }
  pre, blockquote { border: 1px solid rgb(153, 153, 153); break-inside: avo=
id; }
  thead { display: table-header-group; }
  tr, img { break-inside: avoid; }
  img { max-width: 100% !important; }
  @page { margin: 0.5cm; }
  p, h2, h3 { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
}

.navbar .brand { margin-right: 0.75rem; float: left; display: block; height=
: 1.5rem; padding: 0.75rem 0.75rem 0.75rem 1.5rem; }

.navbar .brand:hover, .navbar .brand:focus { text-decoration: none; }

.navbar-search { position: relative; float: left; margin-top: 0.77rem; marg=
in-bottom: 0px; width: 100%; box-sizing: border-box; }

.navbar-search .search-query { margin-bottom: 0px; padding: 0.125rem 0.5rem=
; box-sizing: border-box; width: 100%; }

.navbar-fixed-top .navbar-inner { margin: 0px auto; }

.navbar .nav { position: relative; left: 0px; display: block; float: left; =
margin: 0px 10px 0px 0px; }

.navbar .nav > li { float: left; }

.navbar .nav > li > a { float: none; padding: 0.75rem; }

.navbar .nav > li > a > img { vertical-align: middle; }

.hidden { display: none; visibility: hidden; }

.visible-phone { display: none !important; }

.visible-tablet { display: none !important; }

.hidden-desktop { display: none !important; }

.visible-desktop { display: inherit !important; }

#intro .container { margin: 0px auto; display: table; }

@media (max-width: 480px) {
  #intro .download-php { margin: 0px; }
}

@media (min-width: 768px) and (max-width: 979px) {
  .hidden-desktop { display: inherit !important; }
  .visible-desktop { display: none !important; }
  .visible-tablet { display: inherit !important; }
  .hidden-tablet { display: none !important; }
}

@media (max-width: 767px) {
  .hidden-desktop { display: inherit !important; }
  .visible-desktop { display: none !important; }
  .visible-phone { display: inherit !important; }
  .hidden-phone { display: none !important; }
}

@media (max-width: 979px) {
}

@media (min-width: 980px) {
}

@media (min-width: 1200px) {
}

@media (min-width: 1500px) {
}

body, input, textarea { font-family: var(--font-family-sans-serif); font-we=
ight: 400; }

code, pre.info, .docs .classsynopsis, .docs .classsynopsis code { font: nor=
mal 0.875rem/1.5rem var(--font-family-mono); overflow-x: auto; }

p code, li code, dt code, dl code { line-height: 1.375rem; }

body { font-size: 1rem; line-height: 1.5rem; padding-left: 0px; padding-rig=
ht: 0px; padding-bottom: 0px; margin: 0px; }

button, input, select, textarea { font-family: inherit; font-size: 100%; ma=
rgin: 0px; }

button, input { line-height: normal; }

input[type=3D"search"] { appearance: textfield; box-sizing: content-box; }

h1, h2, h3, h4, h5, h6 { line-height: 3rem; margin: 0px 0px 1.5rem; overflo=
w: hidden; text-rendering: optimizelegibility; }

h1 { font-size: 1.75rem; }

h2 { font-size: 1.5rem; }

h3 { font-size: 1.25rem; }

h4 { font-size: 1.125rem; }

h5, h6 { font-size: 1rem; }

p { margin: 0px 0px 1.5rem; }

ul, ol { margin: 0px 0px 1.5rem 1.5rem; padding: 0px; }

p:empty { margin: 0px; height: 0px; display: none; }

small { font-size: 0.75rem; }

.big { font-size: 1.2rem; }

blockquote { margin: 0.75rem 0px 0.75rem 0.75rem; }

abbr { cursor: help; }

a { text-decoration: none; }

hr { margin: 1.5rem 0px; border-width: 0.25rem 0px 0px; border-right-style:=
 initial; border-bottom-style: initial; border-left-style: initial; border-=
right-color: initial; border-bottom-color: initial; border-left-color: init=
ial; border-image: initial; height: 0px; border-top-style: solid; border-to=
p-color: rgb(153, 153, 204); }

.navbar .brand img { padding: 0px; opacity: 0.75; border: 0px; }

.navbar a { border: 0px; }

.navbar { border-bottom: 0.25rem solid; overflow: visible; }

.page-tools { text-align: right; }

.page-tools #changelang-langs { font-size: 0.75rem; }

.contribute { border: 1px solid rgb(136, 136, 136); border-radius: 3px; mar=
gin: 0px -10px; padding: 0px 10px 5px; background-color: rgb(226, 226, 226)=
; }

.contribute .edit-bug a { border: 0px; }

#usernotes { position: relative; margin-top: 1.5rem; }

#usernotes .count { display: inline-block; vertical-align: text-top; paddin=
g: 0.25rem 0.375rem; font-size: 0.75rem; line-height: 1rem; }

#usernotes .action { display: block; top: 8px; right: 12px; position: absol=
ute; text-align: right; z-index: 1; }

#usernotes .foot { text-align: right; margin-bottom: 1rem; }

#usernotes .note { margin: 1.5rem 0px; position: relative; }

#usernotes .note .votes { float: left; }

#usernotes .note .name { border-bottom: 0px; margin-left: 1rem; font-size: =
1.125rem; }

#usernotes .note .name em { font-style: normal; font-weight: normal; }

#usernotes .note .date { float: right; text-align: right; }

#usernotes .note .date strong { font-weight: normal; }

#usernotes .note .admin { float: left; padding-left: 1rem; }

#usernotes .note .admin a { border-bottom: 0px; }

#usernotes .note .text { padding: 0.75rem; border-radius: 0px 0px 2px 2px; =
}

#usernotes .note .votes > div:first-child { float: left; }

#usernotes .note .votes > div { float: right; }

#usernotes .note .votes a { display: block; height: 0px; width: 0px; overfl=
ow: hidden; margin: 8px 0px 0px; border-left: 8px solid transparent; border=
-right: 8px solid transparent; border-bottom: 0px; }

#usernotes .note .votes .usernotes-voteu { border-bottom: 10px solid rgb(15=
3, 153, 153); }

#usernotes .note .votes .usernotes-voted { border-top: 10px solid rgb(153, =
153, 153); }

#usernotes .note .votes .usernotes-voteu:hover, #usernotes .note .votes .us=
ernotes-voteu:focus { border-bottom: 10px solid rgb(0, 17, 85); }

#usernotes .note .votes .usernotes-voted:hover, #usernotes .note .votes .us=
ernotes-voted:focus { border-top: 10px solid rgb(0, 17, 85); }

#usernotes .note .votes .tally { padding: 0px 0.3rem; }

dl dd { margin: 0px 0px 1.5rem; padding: 0px 1.5rem; }

.php8-code.phpcode { overflow-x: auto; }

.phpcode, div.classsynopsis { text-align: left; }

div.classsynopsisinfo_comment { margin-top: 1.5rem; }

.warn { padding: 0.75rem 1rem; margin: 1.5rem 0px 1.5rem 1.5rem; border-top=
: 0.1875rem solid; }

pre.info { border: 1px solid; margin: 1rem 0.8rem 1.3rem 2rem; }

#langform { float: right; }

#layout { margin: 0px auto 1.5rem; clear: both; }

.layout-menu { padding: 0.75rem 1.5rem 1.5rem; box-sizing: border-box; }

#layout-content { padding: 1.5rem; box-sizing: border-box; }

#layout-content:only-child { width: 100%; }

#search-results { margin: 10px 40px; }

#search-results li { padding: 1rem 0px; list-style: none; }

#search-results li .result { font-size: 1.25rem; }

#results_nav_list { margin: 0px; padding: 1rem 0px; }

#results_nav_list li { list-style: none; display: inline-block; }

#results_nav_list li a { padding: 0.5rem 0.66rem; }

#results_nav_list li.current { font-weight: bolder; }

body > footer { clear: both; overflow: auto; line-height: 3rem; }

body > footer .footer-content { margin: 1.5rem auto 0px; padding: 0px 1.5re=
m; box-sizing: border-box; }

body > footer ul { margin: 0px; padding: 0px; }

body > footer .footmenu li { display: inline-block; margin: 0px 0.75rem; }

body > footer a { display: inline-block; border-bottom: 0px; }

body > footer a:hover, body > footer a:focus { color: var(--light-magenta-c=
olor); }

div.elephpants { margin: auto; overflow: hidden; }

div.elephpants div.images { height: 75px; text-align: center; white-space: =
nowrap; }

div.elephpants img { width: 75px; height: 75px; }

table { border-collapse: collapse; border-spacing: 0px; margin: 0px 0px 1.5=
rem; }

table td { vertical-align: top; }

table.standard { border-collapse: collapse; border: 1px solid rgb(217, 217,=
 217); }

table.standard td, table.standard th { border: 1px solid rgb(217, 217, 217)=
; }

table.standard tr:nth-child(2n) td { background-color: rgb(230, 230, 230); =
}

table.standard th { font-size: 1.125rem; padding: 20px 10px 5px; color: rgb=
(102, 102, 102); font-weight: normal; }

table.standard td { padding: 5px 10px; vertical-align: middle; }

table.standard tr:nth-child(2n) td.subr, table.standard tr:nth-child(2n) th=
.subr, table.standard tr td.subr, table.standard tr th.subr, table.standard=
 tr:nth-child(2n) td.sub, table.standard tr:nth-child(2n) th.sub, table.sta=
ndard tr td.sub, table.standard tr th.sub { background: rgb(230, 230, 230);=
 }

table.standard td.subr, table.standard th.subr { text-align: right; }

#layout .cse .gsc-control-cse, #layout .gsc-control-cse, #layout .gsc-contr=
ol-cse .gsc-table-result { font-family: var(--font-family-sans-serif); font=
-size: 1rem; margin: 0px; padding: 0px; position: relative; }

#layout .cse form.gsc-search-box, #layout form.gsc-search-box { margin: 0px=
 0px 1rem; padding: 0px; }

#layout .cse table.gsc-search-box, #layout table.gsc-search-box { border: 1=
px solid rgb(153, 153, 204); border-radius: 2px; }

#layout .cse input.gsc-input, #layout input.gsc-input { border: 0px; }

#layout .cse table.gsc-search-box td, #layout table.gsc-search-box td { pad=
ding: 0px; }

#layout .cse input.gsc-search-button, #layout input.gsc-search-button { bac=
kground: rgb(153, 153, 204); border: 1px solid rgb(153, 153, 204); border-r=
adius: 0px; color: rgb(238, 238, 255); }

#layout .cse input.gsc-search-button:hover, #layout input.gsc-search-button=
:hover { color: white; }

#layout .cse .gsc-clear-button, #layout .gsc-clear-button { display: none; =
}

#layout .cse div.gsc-results-wrapper-visible, #layout div.gsc-results-wrapp=
er-visible { position: relative; min-height: 11rem; }

#layout .cse .gsc-tabsArea, #layout .gsc-tabsArea { position: absolute; top=
: 0px; left: 0px; width: 23.404%; margin-right: 2.762%; padding: 0.5rem 0.7=
5rem; border-width: 1px; border-style: solid; border-color: rgb(224, 224, 2=
24) rgb(224, 224, 224) rgb(217, 217, 217); border-image: initial; backgroun=
d-color: rgb(242, 242, 242); border-radius: 2px; margin-top: 0px; box-sizin=
g: border-box; }

#layout .cse .gsc-tabHeader.gsc-tabhActive, #layout .gsc-tabHeader.gsc-tabh=
Active, #layout .cse .gsc-tabHeader.gsc-tabhInactive, #layout .gsc-tabHeade=
r.gsc-tabhInactive { background: transparent; color: rgb(38, 38, 38); borde=
r-width: 1px 0px 0px; border-right-style: initial; border-bottom-style: ini=
tial; border-left-style: initial; border-right-color: initial; border-botto=
m-color: initial; border-left-color: initial; border-image: initial; displa=
y: block; font-size: 100%; font-weight: normal; border-top-style: dotted; b=
order-top-color: rgb(189, 189, 189); padding: 0px; }

#layout .cse .gsc-tabHeader.gsc-tabhActive:first-child, #layout .gsc-tabHea=
der.gsc-tabhActive:first-child, #layout .cse .gsc-tabHeader.gsc-tabhInactiv=
e:first-child, #layout .gsc-tabHeader.gsc-tabhInactive:first-child { border=
: 0px; }

#layout .cse .gsc-tabHeader.gsc-tabhActive, #layout .gsc-tabHeader.gsc-tabh=
Active { color: black; }

#layout .cse .gsc-tabHeader.gsc-tabhActive::after, #layout .gsc-tabHeader.g=
sc-tabhActive::after { content: "=C2=BB"; color: black; float: right; text-=
align: right; }

#layout .cse .gsc-tabHeader.gsc-tabhInactive:hover, #layout .gsc-tabHeader.=
gsc-tabhInactive:hover { color: rgb(102, 153, 51); }

#layout .cse .gsc-above-wrapper-area, #layout .gsc-above-wrapper-area { bor=
der: 0px; margin: 0px; padding: 0px 0px 1rem 26.166%; width: 73.834%; }

#layout .cse .gsc-above-wrapper-area-container, #layout .gsc-above-wrapper-=
area-container { width: auto; }

#layout .cse .gsc-result-info-container, #layout .gsc-result-info-container=
 { padding: 0px; margin: 0px; }

#layout .cse .gsc-result-info, #layout .gsc-result-info { color: var(--dark=
-grey-color); font-size: 0.75rem; padding: 0px; margin: 0px; }

#layout .cse .gsc-results, #layout .gsc-results { margin: 0px; padding: 0px=
 0px 0px 26.166%; width: 73.834%; }

#layout .cse .gsc-resultsHeader, #layout .gsc-resultsHeader { display: none=
; }

#layout .cse .gsc-webResult.gsc-result, #layout .gsc-webResult.gsc-result {=
 margin: 0px 0px 1rem; padding: 0px; border: 0px; }

#layout .cse .gs-webResult.gs-result a, #layout .gs-webResult.gs-result a, =
#layout .cse .gs-webResult.gs-result a b, #layout .gs-webResult.gs-result a=
 b { border-bottom: 1px solid rgb(51, 102, 153); color: rgb(51, 102, 153); =
text-decoration: none; }

#layout .cse .gs-webResult.gs-result a:focus, #layout .gs-webResult.gs-resu=
lt a:focus, #layout .cse .gs-webResult.gs-result a:hover, #layout .gs-webRe=
sult.gs-result a:hover, #layout .cse .gs-webResult.gs-result a:focus b, #la=
yout .gs-webResult.gs-result a:focus b, #layout .cse .gs-webResult.gs-resul=
t a:hover b, #layout .gs-webResult.gs-result a:hover b { border-bottom-colo=
r: rgb(51, 102, 153); color: rgb(102, 153, 51); }

#layout .gs-webResult.gs-result .gs-visibleUrl { font-weight: normal; }

#layout .gs-no-results-result .gs-snippet { border: 0px; background: transp=
arent; }

.docs #cse th, .docs #cse td { padding: 0px; }

div.informalexample { margin: 0.75rem 0px; }

strong, em { text-rendering: optimizelegibility; }

em { font-weight: normal; font-style: italic; }

strong { font-weight: bolder; font-style: normal; }

article strong, #layout-content ol strong, #layout-content ul strong, #layo=
ut-content p strong { font-weight: 500; }

.refsect1 code.parameter, strong code, strong pre, pre strong { font-weight=
: 700; }

#toTop { display: none; text-decoration: none; position: fixed; bottom: 0.7=
5rem; right: 0.75rem; overflow: hidden; width: 43px; height: 43px; border: =
none; z-index: 100; }

#toTopHover { display: block; overflow: hidden; float: left; }

#toTop:active, #toTop:focus { outline: none; }

fieldset { margin: 0px; padding: 0px; border: 0px; }

.navbar ul { list-style: none; }

.navbar a { display: inline-block; }

.twitter-typeahead { width: 100%; }

.navbar .navbar-search .tt-hint.search-query { color: silver; }

.search-query { z-index: 2 !important; }

.tt-dropdown-menu { background: none repeat scroll 0 0 var(--light-blue-col=
or); border-bottom: 1px solid rgb(196, 201, 223); border-radius: 0px 0px 2p=
x 2px; box-shadow: 1px 0 1px -1px #C4C9DF inset, -1px 0 1px -1px #C4C9DF in=
set, 0 0 1px var(--dark-blue-color); color: var(--dark-grey-color); padding=
-top: 3px; margin-top: -3px; min-width: 100%; }

.tt-dropdown-menu .result-heading { font-size: 1.1rem; border-bottom: 2px s=
olid var(--dark-blue-color); color: var(--light-blue-color); text-shadow: r=
gba(0, 0, 0, 0.25) 0px -1px 0px; word-spacing: 6px; margin: 0px; padding: 0=
.1rem 0.3rem; line-height: 2.5rem; background-color: rgb(136, 146, 191); }

.tt-dropdown-menu .result-heading .collapsible { background: url("../images=
/search-sprites.png") 0px -15px no-repeat; width: 30px; height: 13px; displ=
ay: inline-block; }

.tt-dropdown-menu .result-heading .collapsible:hover { cursor: pointer; }

.tt-dropdown-menu .result-heading .collapsible.closed { background-position=
: 0px -2px; }

.tt-dropdown-menu .result-heading::after { border-bottom: none; }

.tt-dropdown-menu .result-count { display: inline-block; float: right; opac=
ity: 0.6; text-align: right; }

.tt-suggestions { color: rgb(85, 85, 85); overflow: hidden auto; max-height=
: 210px; }

.tt-dropdown-menu .search { border: none; color: white; display: block; pad=
ding: 0.3rem; background: rgb(136, 146, 191); }

.tt-suggestion { margin: 0px; padding: 3px; background: rgb(226, 228, 239);=
 border-bottom: 1px solid rgb(79, 91, 147); }

.tt-suggestion h4 { color: var(--dark-grey-color); margin: 0px; overflow: h=
idden; text-overflow: ellipsis; font-size: 11pt; line-height: 2rem; font-we=
ight: normal; }

.tt-suggestion .description { display: block; font-size: 0.75rem; line-heig=
ht: 1rem; overflow: hidden; text-overflow: ellipsis; }

.tt-suggestion.tt-is-under-cursor { background-color: var(--dark-blue-color=
); }

.tt-suggestion.tt-is-under-cursor h4 { color: rgb(255, 255, 255); }

.tt-suggestion.tt-is-under-cursor .description { color: rgb(255, 255, 255);=
 }

@media screen and (max-height: 480px) {
  .tt-suggestion .description { display: none; }
}

@media screen and (max-height: 400px) {
  .tt-dataset-1 { display: none !important; }
}

.downloads .content-box { margin: 0px 0px 2.25rem; }

.content-header .release-state { float: right; opacity: 0.8; }

.content-header .changelog { color: rgb(51, 102, 153); }

.content-box .md5sum, .content-box .sha256 { display: block; font: 0.875rem=
 / 1.5rem "Fira Mono", "Source Code Pro", monospace; }

.content-box .md5sum::before { content: "md5: "; font-family: var(--font-fa=
mily-sans-serif); }

.content-box .sha256::before { content: "sha256: "; font-family: var(--font=
-family-sans-serif); }

.content-box .releasedate { float: right; font-size: 0.9rem; }

.content-box pre { background: white; border: 1px solid rgb(214, 214, 214);=
 margin: 0px; padding: 0.75rem; overflow: auto; font: 0.875rem / 1.5rem "So=
urce Code Pro", monospace; }

.content-box pre.small { padding: 0px; }

@media (max-width: 465px) {
  .content-box h3 .release-state { display: none; }
}

.title { position: relative; clear: both; }

header.title { margin-bottom: 1.5rem; }

.title a { border: 0px; }

.country { position: relative; padding: 0px 12px; }

.country .countrytitle { margin-left: -12px; margin-right: -12px; }

.country .title img { position: absolute; right: 12px; }

.refentry .refsect1 { margin-bottom: 3rem; }

.refsect1 dt { height: 1.5rem; }

.docs code.parameter { font-size: 1rem; }

.docs .classsynopsis code.parameter { font-size: 0.875rem; }

.docs .methodname strong { font-style: normal; font-weight: normal; }

.center { text-align: center; }

div.tip, div.warning, div.caution, blockquote.note { padding: 0.75rem; marg=
in: 1.5rem 0px; overflow: hidden; }

blockquote.note strong.note { font-size: 1.125rem; }

div.tip strong.tip, div.warning strong.warning, div.caution strong.caution =
{ float: left; margin-right: 0.5rem; font-size: 1.125rem; }

blockquote.note p, div.caution p, div.warning p, div.tip p { margin: 1.5rem=
 0px 0px; }

blockquote.note :first-child + p, div.caution :first-child + p, div.warning=
 :first-child + p, div.tip :first-child + p, blockquote.note p:first-child,=
 div.caution p:first-child, div.warning p:first-child, div.tip p:first-chil=
d { margin: 0px; }

.refsect1 .dc-description, .refsect1 .dc-description code, .docs .sect1 .dc=
-description, .docs .sect1 .dc-description code { font-weight: 400; font-si=
ze: 1rem; font-family: "Fira Mono", "Source Code Pro", monospace; letter-sp=
acing: -0.0625rem; word-spacing: -0.125rem; margin: 0px; }

.docs .refentry .parameters dl { margin-bottom: 0px; }

.docs .example { margin: 1.5rem 0px; }

.docs .example-contents { margin-bottom: 1.5rem; }

.docs .example-contents pre { margin: 0px; overflow-x: auto; white-space: p=
re; }

.docs .example-contents > [class$=3D"code"], .docs .example-contents.screen=
, .informalexample .literallayout { padding: 0.75rem; overflow-x: auto; }

.docs .classsynopsis, .refsect1 .fieldsynopsis, .refsect1 .dc-description, =
.docs .sect1 .dc-description { padding: 0.75rem; margin-bottom: 1.5rem; }

.phpcode code { display: block; overflow-x: auto; white-space: pre-wrap; }

.docs .qandaentry dt .phpcode * { font-weight: normal; }

.docs th { text-align: left; }

.docs td, .docs th { padding: 0.25rem 0.5rem; }

.doctable, .segmentedlist { width: 100%; margin: 0px 0px 1.5rem; }

.doctable thead tr, .segmentedlist thead tr { border: 1px solid; }

.doctable tr, .segmentedlist tr { border: 1px solid; }

ul.itemizedlist { list-style-type: circle; }

ul.simplelist { list-style-type: disc; }

ul.chunklist { list-style-type: disc; }

.docs ol { list-style-type: decimal; }

dl.qandaentry { border-top: 1px solid; }

ul.chunklist_children { margin-top: 0px; }

.docs div.sect1, .docs div.partintro { position: relative; }

.docs .verinfo { font-size: 0.875rem; margin: 0px; }

.refname .verinfo { line-height: 2.875rem; float: right; font-weight: norma=
l; }

.docs h1.refname + h1.refname { margin-top: -1.5rem; }

.docs .refnamediv { position: relative; }

.docs .classsynopsis { margin-bottom: 1.5rem; }

.classsynopsisinfo_comment, .classsynopsis .constructorsynopsis, .classsyno=
psis .methodsynopsis, .classsynopsis .destructorsynopsis, .classsynopsis .f=
ieldsynopsis { margin-left: 1.5rem; }

#changelang { border: 0px; }

.docs .layout-menu ul.parent-menu-list { list-style: none; margin: 0px; pad=
ding: 0px; }

.docs .layout-menu ul.parent-menu-list > li { margin-top: 0px; margin-botto=
m: 0px; }

.docs .layout-menu ul.parent-menu-list > li > a { border: 0px; font-size: 1=
.125rem; margin-bottom: 0.75rem; display: block; }

.docs .layout-menu ul.child-menu-list { margin: 0px; }

.layout-menu ul.child-menu-list li { list-style-type: none; margin: 0px; }

.layout-menu ul.child-menu-list li:first-child a { border-top: 1px dotted; =
margin-top: -1px; }

.layout-menu ul.child-menu-list a { font-size: 0.875rem; border-bottom: 1px=
 dotted; margin-bottom: -1px; display: block; padding-left: 0.75rem; positi=
on: relative; }

.layout-menu ul.child-menu-list .current { font-weight: bolder; }

#layout-content .current::before { content: "=C2=BB "; }

.layout-menu ul.child-menu-list a:hover::before, .layout-menu ul.child-menu=
-list a:focus::before, .layout-menu ul.child-menu-list .current a::before {=
 content: "=C2=BB "; position: absolute; left: 0px; }

.docs .sect2 { margin-top: 0.75rem; }

.soft-deprecation-notice h1.title { border: 0px; position: absolute; paddin=
g: 0px; margin: 0px; top: -22px; left: 0px; }

div.soft-deprecation-notice { position: relative; margin-top: 50px; border:=
 1px solid; z-index: 100; }

div.soft-deprecation-notice blockquote.sidebar { padding: 10px; margin: 0px=
; border: 0px solid; }

#breadcrumbs { box-sizing: border-box; padding: 0.75rem 0px; font-size: 0.8=
75rem; display: none; }

#breadcrumbs #breadcrumbs-inner { margin: 0px auto; }

#breadcrumbs ul { margin: 0px; padding: 0px 0.5rem 0px 1.5rem; overflow: hi=
dden; }

#breadcrumbs-inner div { padding: 0px 1.5rem; }

#breadcrumbs li { display: inline-block; }

#breadcrumbs li + li::before { padding: 0px 0.5rem; content: "=E2=80=BA"; }

#breadcrumbs a:link, #breadcrumbs a:visited { border-width: 0px; }

#breadcrumbs a:hover, #breadcrumbs a:focus { color: var(--light-magenta-col=
or); }

#breadcrumbs .next, #breadcrumbs .prev { float: right; }

@media (min-width: 768px) {
  .navbar-fixed-top { top: 0px; transform: translateZ(0px); }
  body { margin: 3.25rem 0px 0px; }
  [id] { scroll-margin-top: 3.25rem; }
  #breadcrumbs { display: block; }
  .navbar-search, #intro .background, aside.tips, .layout-menu { width: 25%=
; float: left; }
  #layout-content { float: left; width: 75%; }
  .navbar-fixed-top { position: fixed; right: 0px; left: 0px; z-index: 1030=
; margin-bottom: 0px; }
}

@media (min-width: 768px) and (max-width: 979px) {
  aside.tips, .navbar-search { width: 30% !important; }
  #layout-content:not(:only-child) { width: 70% !important; }
}

@media (min-width: 1200px) {
  #intro .container, .navbar-inner, #breadcrumbs-inner, #goto div, #trick d=
iv, #layout, body > footer .footer-content { width: 1170px; }
}

@media (min-width: 1500px) {
  #intro .container, .navbar-inner, #breadcrumbs-inner, #goto div, #trick d=
iv, #layout, body > footer .footer-content { width: 1440px; }
}

#mainmenu-toggle-overlay, #mainmenu-toggle { display: none; }

@media (max-width: 767px) {
  .navbar-fixed-top .container { width: auto; }
  .navbar-search { float: left; clear: both; margin-top: 0px; padding: 0px =
10px 10px; }
  .navbar .nav { margin-right: 0px; }
  #intro .download-php { margin: 0px !important; }
  #mainmenu-toggle-overlay { background: var(--dark-blue-color) url(/images=
/mobile-menu.png) no-repeat center center; float: right; display: block; he=
ight: 32px; width: 34px; margin-top: 10px; margin-right: 10px; border-radiu=
s: 5px; }
  #mainmenu-toggle { height: 32px; width: 34px; line-height: 32px; margin-t=
op: 10px; margin-right: -34px; float: right; border-bottom: 0px none; displ=
ay: inline-block; opacity: 0; }
  .navbar .brand { float: left; margin-bottom: 0.5rem; }
  .navbar-search { margin-top: 0px; padding: 0px 10px 10px; }
  .navbar .brand img { display: block; margin-left: 12px; }
  .navbar .nav { clear: both; float: none; max-height: 0px; overflow: hidde=
n; transition: max-height 400ms; }
  .navbar .nav > li, .footmenu > li { float: none; display: block; text-ali=
gn: center; }
  .navbar .nav > li a, .footmenu > li > a { width: 100%; display: block; pa=
dding-left: 0px; }
  #mainmenu-toggle:checked + .nav { max-height: 50rem; }
  #flash-message { margin-top: 0px !important; top: 0px; }
}

@media (min-width: 768px) {
  #topsearch { float: right; }
  .navbar-search .search-query { width: 100%; }
  #intro .container { position: relative; }
}

@media (max-width: 979px) and (min-width: 768px) {
  #intro .download-php a.btn-pop { padding-right: 0.375rem; }
}

@media (min-width: 980px) {
}

@media (min-width: 1200px) {
}

@media (min-width: 1548px) {
  #layout { padding-right: 0px; }
}

#goto { display: none; background-color: var(--dark-grey-color); height: 10=
0%; width: 100%; opacity: 0.9; position: fixed; top: 50px; z-index: 5000; c=
olor: rgb(230, 230, 230); }

#goto .search .results { text-shadow: rgb(85, 85, 85) 0px 2px 3px; font-siz=
e: 2rem; line-height: 1; }

#goto .search .results :focus { font-size: 2rem; line-height: 1.2; }

#goto .search .text { color: rgb(34, 34, 34); text-shadow: rgb(85, 85, 85) =
0px 2px 3px; font-size: 10rem; line-height: 0.7; }

#trick { display: none; background-color: rgba(51, 51, 51, 0.95); height: 1=
00%; width: 100%; position: fixed; top: 50px; z-index: 5000; }

#goto div, #trick div { margin: 0px auto; }

#trick dt, #trick dl { color: rgb(230, 230, 230); }

#trick dl { display: inline-block; vertical-align: top; }

#trick a { color: rgb(230, 230, 230); display: block; border-bottom: none; =
padding: 1px; }

aside.tips { box-sizing: border-box; padding: 1.5rem; color: rgb(204, 204, =
204); }

aside.tips p { margin-top: 0px; }

aside.tips .panel { margin: 0px 0px 1.5rem; }

aside.tips .panel .body { font-size: 0.875rem; margin-top: 1.5rem; }

aside.tips .panel .headline { display: block; border-bottom: 0px; line-heig=
ht: 1.5rem; font-size: 1.125rem; color: rgb(230, 230, 230); text-rendering:=
 optimizelegibility; }

aside.tips div.inner { clear: none; border: 0px; background: inherit; }

#flash-message { height: auto; margin-top: 4px; position: fixed; width: 100=
%; z-index: 95; text-align: center; box-shadow: rgba(0, 0, 0, 0.1) 0px 0.25=
rem 0.25rem; }

#flash-message .message { cursor: pointer; text-align: center; position: re=
lative; border-bottom: 1px solid; padding: 0.25rem; }

#flash-message .message a { border-style: dotted; font-weight: bolder; }

.newsentry header h2 { margin: 0px; }

.newsentry { margin: 0px 0px 3rem; position: relative; }

.newsentry h2 { font-weight: normal; }

.newsentry h2 .release-state { float: right; opacity: 0.8; }

.newsentry header time { float: right; line-height: 3rem; }

.newsentry p { line-height: 1.7rem; }

.newsentry .newsimage a { float: right; border: 0px; padding: 10px; }

.newsentry .newsimage img, .newsItem .newsImage img { max-width: 350px; }

.logo-list ul { list-style-type: none; }

.caption { font-size: 0.85rem; }
------MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.php.net/cached.php?t=1720213803&f=/styles/theme-medium.css

@charset "utf-8";

:root { --background-color: var(--dark-grey-color); --background-text-color=
: #CCC; --content-background-color: #F2F2F2; --content-text-color: var(--da=
rk-grey-color); }

html { background-color: var(--background-color); background-image: url("/i=
mages/bg-texture-00.svg"); color: var(--background-text-color); }

#layout-content { background: var(--content-background-color); color: var(-=
-content-text-color); }

#layout-content:not(:only-child) { border-right: 0.25rem solid rgb(102, 102=
, 102); }

h1, h2, h3, h4, h5, h6 { font-weight: 500; color: var(--content-text-color)=
; }

header.title, h1::after, h2::after, h3::after { display: table; width: 100%=
; content: " "; margin-top: -1px; border-bottom: 1px dotted; }

.title h1::after, .title h2::after, .title h3::after { display: none; }

a:link, a:visited { color: var(--background-text-color); }

#layout-content a:link, #layout-content a:visited { color: rgb(51, 102, 153=
); }

a:hover, a:focus, #layout-content a:hover, #layout-content a:focus { color:=
 var(--medium-magenta-color); border-color: var(--medium-magenta-color); ou=
tline: 0px; }

ul { list-style-type: disc; }

ol { list-style-type: decimal; }

dl.qandaentry { border-color: rgb(0, 0, 0); }

h1.refname { color: var(--dark-magenta-color); }

.interfacename a, .fieldsynopsis .type, .methodsynopsis .type, .constructor=
synopsis .type, .destructorsynopsis .type { color: rgb(102, 153, 51); }

.classsynopsisinfo .modifier, .fieldsynopsis .modifier, .methodsynopsis .mo=
difier, .constructorsynopsis .modifier, .destructorsynopsis .modifier { col=
or: rgb(153, 51, 102); }

.classsynopsis { color: rgb(77, 77, 77); }

.docs .classsynopsisinfo_comment { color: rgb(255, 136, 0); }

.title a, .title { color: var(--dark-magenta-color); }

.title time { color: var(--content-text-color); }

.methodname b, .methodname strong, .methodname a, .classsynopsis .classname=
, .classsynopsis .interfacename, .parameter { color: rgb(51, 102, 153); }

.initializer, .initializer code { color: rgb(153, 51, 102); }

.dc-description { color: rgb(115, 115, 115); }

#flash-message .success { background: rgb(230, 242, 217); border-color: rgb=
(204, 230, 179); }

#flash-message .info, div.tip { background: rgb(217, 230, 242); border-colo=
r: rgb(179, 204, 230) rgb(179, 204, 230) rgb(159, 191, 223); }

blockquote.note { background-color: rgb(230, 230, 230); border-color: var(-=
-background-text-color); }

div.caution { background: rgb(252, 252, 233); border-color: rgb(226, 226, 2=
09); }

.refsect1 blockquote.note { margin-left: 0px; background: rgb(255, 255, 255=
); border-color: rgb(229, 230, 233); }

#flash-message .error, div.warning { background: rgb(244, 223, 223); border=
-color: rgb(234, 191, 191); }

.docs .classsynopsis, .refsect1 .fieldsynopsis, .refsect1 .dc-description, =
.docs .sect1 .dc-description, div.tip, blockquote.note, div.caution, div.wa=
rning { box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset; border-radiu=
s: 0px 0px 2px 2px; }

#flash-message .error a, div.warning a:link, div.warning a:visited, div.war=
ning h2, div.warning h3 { color: rgb(153, 51, 102); }

#flash-message .success a, #flash-message a:hover, #flash-message a:focus, =
div.warning a:hover, div.warning a:focus { color: rgb(102, 153, 51); border=
-color: rgb(102, 153, 51); }

.navbar .nav > li > a:focus, .navbar .nav > li > a:hover { color: var(--dar=
k-grey-color); }

.navbar .nav > .active > a { box-shadow: rgba(0, 0, 0, 0.125) 0px 3px 8px i=
nset; }

.navbar .brand, .navbar .nav > li > a { color: var(--light-blue-color); bor=
der: 0px; text-shadow: rgba(0, 0, 0, 0.25) 0px -1px 0px; }

.navbar .brand:hover, .navbar .nav > li > a:hover, .navbar .brand:focus, .n=
avbar .nav > li > a:focus { color: rgb(255, 255, 255); }

.navbar .nav > li > a:focus, .navbar .nav > li > a:hover { background-color=
: transparent; color: rgb(255, 255, 255); }

.navbar .nav .active > a, .navbar .nav .active > a:hover, .navbar .nav .act=
ive > a:focus { color: rgb(255, 255, 255); background-color: var(--dark-blu=
e-color); }

.navbar .navbar-search .search-query { background-color: rgb(255, 255, 255)=
; color: var(--dark-grey-color); text-shadow: rgb(255, 255, 255) 0px 1px 0p=
x; border: 0px; border-radius: 2px; box-shadow: rgba(0, 0, 0, 0.2) 0px 1px =
2px inset; }

.navbar .navbar-search .search-query:focus { box-shadow: rgba(0, 0, 0, 0.2)=
 0px 1px 2px inset; }

.navbar .navbar-search .search-query::-webkit-input-placeholder { color: rg=
b(153, 153, 153); }

.navbar { border-color: var(--dark-blue-color); background: var(--medium-bl=
ue-color); box-shadow: rgba(0, 0, 0, 0.1) 0px 0.25em 0.25em; }

.navbar .brand { color: rgb(255, 255, 255); }

.navbar a { text-shadow: rgb(255, 255, 255) 0px 1px 0px; }

#usernotes .count { background-color: var(--dark-magenta-color); color: rgb=
(255, 255, 255); border-radius: 4px; }

#usernotes .note .name { color: var(--content-text-color); }

#usernotes .note .date { color: rgb(102, 102, 102); }

#usernotes .note .name:hover + .genanchor { color: black; }

#usernotes .note .text { transition: opacity 0.4s; }

#usernotes .note .votes .tally { color: var(--content-text-color); }

#usernotes .note .votes a { transition: border 0.4s; }

.doctable, .segmentedlist { border-color: var(--background-text-color); }

.doctable thead tr, .segmentedlist thead tr { border-top-color: rgb(196, 20=
1, 223); border-right-color: rgb(196, 201, 223); border-left-color: rgb(196=
, 201, 223); border-bottom-color: var(--medium-blue-color); color: var(--co=
ntent-text-color); }

.doctable th, .segmentedlist th { background-color: rgb(196, 201, 223); }

.doctable tr, .segmentedlist tr { border-color: var(--background-text-color=
); }

.doctable tbody tr:nth-child(2n+1), .segmentedlist tbody tr:nth-child(2n+1)=
 { background-color: rgb(255, 255, 255); }

.doctable tbody tr:nth-child(2n), .segmentedlist tbody tr:nth-child(2n) { b=
ackground-color: rgb(230, 230, 230); }

#usernotes .note .text, .example-contents > [class$=3D"code"], .example-con=
tents.screen, .informalexample .literallayout { background-color: rgb(255, =
255, 255); box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset; border-ra=
dius: 0px 0px 2px 2px; }

.refsect1 .example-contents > [class$=3D"code"], .refsect1 .example-content=
s.screen { background-color: rgb(255, 255, 255); }

.docs .classsynopsis, .refsect1 .fieldsynopsis, .refsect1 .dc-description, =
.docs .sect1 .dc-description { background: rgb(255, 255, 255); border-color=
: rgb(217, 217, 217); }

.phpcode span.html { color: black; background-color: transparent; }

.phpcode span.comment { color: var(--dark-blue-color); background-color: tr=
ansparent; }

div.phpcode span.default { color: rgb(51, 102, 153); background-color: tran=
sparent; }

div.phpcode span.keyword { color: rgb(102, 153, 51); background-color: tran=
sparent; }

div.phpcode span.string { color: rgb(204, 51, 51); background-color: transp=
arent; }

.para var, .simpara var { background-color: rgb(230, 230, 230); border-radi=
us: 2px; color: var(--content-text-color); padding: 2px 4px; white-space: n=
owrap; font: 14px / 1.46 "Source Code Pro", monospace; }

var.reset { background: none !important; padding: 0px !important; font-size=
: 1em !important; }

#layout-content a.genanchor:link, #layout-content a.genanchor:visited { col=
or: transparent; border-bottom: none; }

#layout-content a.genanchor:hover, #layout-content a.genanchor:focus { colo=
r: var(--content-text-color); border-bottom: none; }

.warn { border-color: var(--dark-blue-color); background-color: rgb(255, 25=
5, 255); border-radius: 0px 0px 2px 2px; }

pre.info { background-color: rgb(239, 239, 239); border-color: rgb(221, 221=
, 221); }

aside.tips div.border { display: none; }

aside.tips h3 { color: rgb(230, 230, 230); }

aside.tips li { line-height: 1.2rem; margin-bottom: 0.5rem; }

aside.tips a { color: var(--background-text-color); border-bottom: 1px dott=
ed rgb(102, 102, 102); }

aside.tips .panel > a::after, aside.tips .panel > span::after { content: " =
"; display: block; border-bottom: 1px dotted rgb(102, 102, 102); }

aside.tips .panel > a { display: block; border-bottom: none; }

aside.tips .panel > a:hover::after { border-color: var(--medium-magenta-col=
or); }

aside.tips a:hover, aside.tips a:focus { color: var(--light-magenta-color);=
 border-color: var(--light-magenta-color); }

.soft-deprecation-notice { color: var(--dark-grey-color); border-color: rgb=
(238, 205, 222); background-color: rgb(249, 236, 242); }

.soft-deprecation-notice h1.title { color: rgb(69, 78, 85); }

.soft-deprecation-notice blockquote.sidebar { color: rgb(102, 0, 0); border=
-color: rgb(102, 102, 0); }

#breadcrumbs { color: rgb(153, 153, 153); }

.layout-menu ul.child-menu-list li:first-child a { border-top-color: rgb(10=
2, 102, 102); }

.layout-menu ul.child-menu-list li.current a { color: var(--light-magenta-c=
olor); border-bottom-color: var(--light-magenta-color); }

.layout-menu ul.parent-menu-list li a:hover, .layout-menu ul.child-menu-lis=
t li a:hover { color: var(--light-magenta-color); }

.layout-menu ul.child-menu-list a { border-color: rgb(102, 102, 102); }

div.elephpants img { opacity: 0.5; transition: 0.2s ease-in-out; }

div.elephpants:hover img { opacity: 0.6; transition: 0.2s ease-in-out; }

div.elephpants img:hover, div.elephpants img:focus { opacity: 1; }

.mirror { position: relative; border: 1px solid var(--background-text-color=
); padding: 20px; margin: 5px; }

.mirror .title img { position: absolute; right: 0px; }

.mirror .title { font-size: 1.4em; position: relative; }

.headsup { padding: 0.25rem 0px; height: 1.5rem; border-bottom: 0.125rem so=
lid rgb(102, 153, 102); background-color: rgb(153, 204, 153); color: rgb(25=
5, 255, 255); }

.headsup, .headsup a { margin: 0px auto; text-align: center; color: rgb(255=
, 255, 255); }

.thanks-list { list-style: none; padding: 0px; margin: 0px 0px 2rem; displa=
y: grid; grid-template-columns: 1fr; gap: 1rem; }

@media (min-width: 980px) {
  .thanks-list { grid-template-columns: 1fr 1fr; gap: 1.5rem; }
}

.thanks { display: flex; flex-direction: column; align-items: start; gap: 1=
rem; break-inside: avoid; box-shadow: rgb(221, 221, 221) 0px 0.125rem 0.5re=
m; border-radius: 0.25rem; padding: 1rem; background: rgb(249, 249, 249); }

@media (min-width: 425px) {
  .thanks { flex-direction: row; }
}

.thanks__logo { border: 0px; background: rgb(249, 249, 249); border-radius:=
 0.25rem; padding: 0.5rem; flex: 0 0 7.5rem; min-width: 5rem; min-height: 5=
rem; max-height: 5rem; margin: 0px; display: flex; align-items: center; ali=
gn-self: center; overflow: hidden; }

.thanks__logo--white { background: rgb(255, 255, 255); border: 1px solid rg=
b(240, 240, 240); }

.thanks__logo--dark { background: rgb(21, 37, 54); }

.thanks__logo--osu { background: rgb(188, 69, 12); }

.thanks__logo--redpill { background: rgb(183, 62, 64); }

@media (min-width: 425px) {
  .thanks__logo { align-self: start; }
}

.thanks__logo img { width: 100%; max-height: 100%; transition: transform 30=
0ms ease-in-out; }

.thanks__logo:hover img { transform: scale(1.1); }

.thanks__heading { display: block; font-size: 1.15rem; padding: 0px 0px 1re=
m; text-align: center; }

@media (min-width: 425px) {
  .thanks__heading { text-align: left; padding: 0px 0px 0.25rem; }
}

.thanks__description { margin: 0px; }

.replaceable { font-style: italic; }
------MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.php.net/images/bg-texture-00.svg

<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"4" height=3D"4">
  <path style=3D"stroke:#000;stroke-width:.5;stroke-opacity:.25" d=3D"M 0,0=
 4,4 M 0,4 4,0"/>
</svg>=0A
------MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.php.net/images/logos/php-logo.svg

<svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 -1 100 50">
	<path d=3D"m7.579 10.123 14.204 0c4.169 0.035 7.19 1.237 9.063 3.604 1.873=
 2.367 2.491 5.6 1.855 9.699-0.247 1.873-0.795 3.71-1.643 5.512-0.813 1.802=
-1.943 3.427-3.392 4.876-1.767 1.837-3.657 3.003-5.671 3.498-2.014 0.495-4.=
099 0.742-6.254 0.742l-6.36 0-2.014 10.07-7.367 0 7.579-38.001 0 0m6.201 6.=
042-3.18 15.9c0.212 0.035 0.424 0.053 0.636 0.053 0.247 0 0.495 0 0.742 0 3=
.392 0.035 6.219-0.3 8.48-1.007 2.261-0.742 3.781-3.321 4.558-7.738 0.636-3=
.71 0-5.848-1.908-6.413-1.873-0.565-4.222-0.83-7.049-0.795-0.424 0.035-0.83=
 0.053-1.219 0.053-0.353 0-0.724 0-1.113 0l0.053-0.053"/>
	<path d=3D"m41.093 0 7.314 0-2.067 10.123 6.572 0c3.604 0.071 6.289 0.813 =
8.056 2.226 1.802 1.413 2.332 4.099 1.59 8.056l-3.551 17.649-7.42 0 3.392-1=
6.854c0.353-1.767 0.247-3.021-0.318-3.763-0.565-0.742-1.784-1.113-3.657-1.1=
13l-5.883-0.053-4.346 21.783-7.314 0 7.632-38.054 0 0"/>
	<path d=3D"m70.412 10.123 14.204 0c4.169 0.035 7.19 1.237 9.063 3.604 1.87=
3 2.367 2.491 5.6 1.855 9.699-0.247 1.873-0.795 3.71-1.643 5.512-0.813 1.80=
2-1.943 3.427-3.392 4.876-1.767 1.837-3.657 3.003-5.671 3.498-2.014 0.495-4=
.099 0.742-6.254 0.742l-6.36 0-2.014 10.07-7.367 0 7.579-38.001 0 0m6.201 6=
.042-3.18 15.9c0.212 0.035 0.424 0.053 0.636 0.053 0.247 0 0.495 0 0.742 0 =
3.392 0.035 6.219-0.3 8.48-1.007 2.261-0.742 3.781-3.321 4.558-7.738 0.636-=
3.71 0-5.848-1.908-6.413-1.873-0.565-4.222-0.83-7.049-0.795-0.424 0.035-0.8=
3 0.053-1.219 0.053-0.353 0-0.724 0-1.113 0l0.053-0.053"/>
</svg>=0A
------MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.php.net/images/php8/logo_php8_3.svg

<svg xmlns=3D"http://www.w3.org/2000/svg" width=3D"451" height=3D"127" fill=
=3D"none" viewBox=3D"0 0 451 127">
  <path fill=3D"#fff" fill-rule=3D"evenodd" d=3D"M21.7998 125.799h-21l18.7-=
96.0998h40.3c12.1 0 21 3.2 26.5 9.5 5.6 6.4 7.2 15.2 5 26.7-.9 4.7-2.5 9-4.=
6 12.9-2.2 3.9-5 7.5-8.5 10.7-4.2 3.9-8.8 6.7-13.9 8.4-5.1 1.7-11.6 2.4998-=
19.6 2.4998h-18l-4.9 25.4Zm45.9-76.5998c-2.7-2.9-8-4.4-15.9-4.4h-14.3l-7.8 =
40.3h12.7c8.4 0 14.7-1.6 18.9-4.8 4.1-3.2 6.9-8.5 8.4-15.9 1.3-7.2.6-12.2-2=
-15.2Z" clip-rule=3D"evenodd"/>
  <path fill=3D"#fff" d=3D"M106.6 4.09961h20.8l-5 25.59999h18.5c11.7 0 19.7=
 2 24.1 6.1 4.4 4.1 5.8 10.7 4 19.8L160.3 100.4h-21.1l8.3-42.6004c.9-4.8.6-=
8.1-1-9.9-1.6-1.8-5.1-2.6-10.4-2.6h-16.6L108.8 100.4H87.9004L106.6 4.09961Z=
"/>
  <path fill=3D"#fff" fill-rule=3D"evenodd" d=3D"M185.2 125.799h-21l18.7-96=
.0998h40.4c12.1 0 21 3.2 26.5 9.5 5.6 6.4 7.2 15.2 5 26.7-.9 4.7-2.5 9-4.6 =
12.9-2.2 3.9-5 7.5-8.5 10.7-4.2 3.9-8.8 6.7-13.9 8.4-5.1 1.7-11.6 2.4998-19=
.6 2.4998h-18l-5 25.4Zm46-76.5998c-2.7-2.9-8-4.4-15.9-4.4h-14.4l-7.8 40.3h1=
2.7c8.4 0 14.7-1.6 18.9-4.8 4.1-3.2 6.9-8.5 8.4-15.9 1.3-7.2.7-12.2-1.9-15.=
2Z" clip-rule=3D"evenodd"/>
  <path fill=3D"#fff" d=3D"M317.5 48.5c-5.7-13.6-10.5-25.4-5.8-33.6 1.8-2.5=
 3.8-3.8 6-3.8 4.5 0 8.6 4.9 8.6 4.9l5.7 6.9-3.6-8.2c-.2-.3-6.3-14.2-17.2-1=
4.2-3.8 0-7.8 1.7-11.7 5.1l-.1.1c-9.5 11-.2 31.8 8.1 50.1l6.1 14.2c2.8 7.3 =
5.6 16 3.9 22.4-2.6 10-11.5 16.8-11.6 16.9l-5.7 4.4 6.9-2.2c.7-.2 16-5.2 19=
.7-18.5 2.3-10.9-.6-21.8-3.5-30.2.4-.3-.4.3 0 0L318 49.1"/>
  <path fill=3D"#0F0F0F" d=3D"m334.4 9.89961-7.1-7.8 5.1 9.29999c.1.1 6.3 1=
1.7-1.6 25.2-2.9 4.2-7.4 8.4-13.1 12.6l-10.3 6.7c-.1-.1-.1-.2 0 0l-.4.3c-11=
.5 6.6-22.2 10.6-22.4 10.7-15.9 7.1-25.9 18.1-27.3 30.3-1.1 9.2004 3.2 18.2=
004 11.6 24.5004l.1.1c5.3 3.2 11 4.8 17 4.8 15.7 0 28-10.9 28.5-11.4l7.7-6.=
9-9.1 4.8c-.1 0-7.7 4-15.6 4-7.1 0-12.1-3.1-15.1-9.4-3.8-13.4004 9.5-22.600=
4 24.8-33.2004 2-1.4 4.1-2.9 6.2-4.3l.1-.1 9.1-6.8c.1-.2.4-.4.4-.4 7.5-6.2 =
17.4-15.9 19.7-29.5 1.8-12.3-7.9-23-8.3-23.49999Z"/>
  <path fill=3D"#fff" d=3D"M345.4 83h19.5l-3.5 17.7h-19.5l3.5-17.7Z"/>
  <path fill=3D"#fff" d=3D"m379.951 86.1562 12.796-10.4921c4.602 6.0996 9.9=
89 10.0039 18.632 10.0039 9.429 0 14.255-5.7334 14.255-11.1016 0-5.7334-3.7=
04-8.9053-12.684-8.9053h-8.53l3.062-15.4931h9.846c7.97 0 14.817-3.7818 14.8=
17-10.8575 0-5.0019-4.491-8.2954-10.328-8.2954-6.959 0-11.56 3.1719-17.285 =
8.7832l-9.541-11.833c7.408-8.2959 15.94-13.7856 28.847-13.7856 16.5 0 26.04=
1 10.1255 26.041 22.2031 0 10.4912-5.949 18.1773-17.51 21.8369 5.5 2.44 10.=
663 8.2949 10.663 16.835 0 15.4932-13.02 27.4483-32.887 27.4483-16.613 0-25=
.592-8.1739-30.194-16.3468Z"/>
</svg>=0A
------MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.php.net/images/to-top@2x.png

iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAMAAAC5zwKfAAAA+VBMVEX///8AAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAADqFZ0JAAAAU3RSTlMAAQIFBgcICQoLDA4PEBESFhcbHB0fICEiIyUmKCorLC8xMzQ1Njc4
OTo7PD0+P0BCRUZHSUpRU1lbXl9gZGVmZ2hqa2xtbnFzdXZ4ent8fX5/gGMi/ToAAAKHSURBVFiF
tZlrd9JAEIZf0DZaQmuqAS+VqJSK1qJGIXIReiG0pVRg/v+P8bRpQgrsDYb3U1hmn5NkZ2dmJ4Bc
lutV/aATjkZhJ/CrnmthDdmV1oTmNGlV7NVoTu2UBOqdvDClZUp9kqpfypjwil1SqlvUf9gmaanp
aOFyjakej2jayKl5hSEZaFhQ8cpjEx7RuCzFZetkrHpWzLNa5jyilnDz7A1W4REN9gT3tyKPaLD0
HrMrPW+k1rL3uMJ6zFRf5JXX4REteE/B0P/mNZ7z8JzR/lim4eNd2FiXR9RI8xzteCDWNB17NOOV
XM0Zr8jBI0oibkYjPuuoG2eFEg+PqPQAVOQjffUflpiLRxQtdI0PWLsHCvO5uU7veDYfj+iuSjni
BB4BaOsYXrzfKevEjzZgLdRXSxQ8BZA/UxtOLLgavF+Rf21r7CgXntroR7xHt3tKWw9Vpc3xLIpY
SherwlebpGRdKKx9BAqLr49zxe613DxAR25wMp/NXt5K7TsIpf9/T0Bb8cWB1M9CjLTWF7Xek/jy
gywBjaTAnwnvE9GfpEo/lAJDpT/Hj/k7+flNPCeULMrf5Jbcf/cDnxOiuK7qSNzmTTzduYkGpgfx
SEE4KZA4dlz05a/ikdv9eMmFk3zJ1nseTX6WesvXu9HYjnBSVRIcXkdb4zw9dhlVv++EkzxJ+Dr/
uL/lVObC6tXxq/zbL5fCSa5egNXWxNJMAbpqbyJJ2ZxAexOJHuyliMMHdDZTzoG94Mxwl8TgLtrB
fqwA+8EH3EczsB8ewX28BfsBHOwtArA3McDdZgF7IwjsrSqwN9PA3u4Df0MS7C1TsDd1N9B2Bn9j
HOyt+0i8HxciGX/++A/6Ku+u/R3iXQAAAABJRU5ErkJggg==

------MultipartBoundary--d5whO14rqOS4IYz0BXSGkUQH9qTLh72766R1ooe7Qt------
